.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "PARSE\-CS" "1" "08/26/2005" "" "Programs and Tools"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
parse\-cs \- parses meta\-programs with concrete syntax
.SH "SYNOPSIS"
.HP 9
\fBparse\-cs\fR [\-I\ \fIdir\fR\ |\ \-\-Include\ \fIdir\fR] [\-\-syntax\ \fIsyn\fR] [\-\-ensugar\ \fIlevel\fR] [\-pp\ |\ \-pretty\-print] [\-i\ \fIfile\fR\ |\ \-\-input\ \fIfile\fR] [\-o\ \fIfile\fR\ |\ \-\-output\ \fIfile\fR] [\-b] [\-S\ |\ \-\-silent] [\-\-verbose\ \fIlevel\fR] [\-k\ \fIlevel\fR\ |\ \-\-keep\ \fIlevel\fR] [\-h\ |\ \-?\ |\ \-\-help] [\-\-about] [\-\-version]
.SH "DESCRIPTION"
.PP
\fBparse\-cs\fR
is a generic parser for meta\-programs with concrete object syntax, also known as embedded syntax. For proper operation,
\fBparse\-cs\fR
must have information about
.TP 3
1.
the parse table
.TP
2.
the pre\-explode desugaring component
.TP
3.
the exploder for embedded abstract syntax
.TP
4.
the post\-explode desugaring component
.TP
5.
the pretty\-printer
.PP
These components do are not provided on the command line, but rather in a meta\-data file. For each file to be parsed, a specific meta\-data file must be defined. It should have the following components:
.sp
.nf
Meta([
  Syntax(lang),                      // name of language = main SDF module
  ParseTable(tbl)
  PreExplodeDesugar(pre\-explode),
  Explode(explode),
  PostExplodeDesugar(post\-expl),
  PrettyPrintTable(pp)
])
.fi
.PP
If the component names are not absolute paths to files, the components are looked up in the XTC repository. Most of these components are optional, only one the syntax component is required.
.SH "OPTIONS"
.PP
\fBSyntax Options\fR
.TP
\fB\-I \fR\fB\fIdir\fR\fR, \fB\-\-input \fR\fB\fIdir\fR\fR
Include modules from directory
\fIdir\fR.
.TP
\fB\-\-syntax \fR\fB\fIsyn\fR\fR
Use syntax
\fIsyn\fR.
.TP
\fB\-pp\fR, \fB\-\-pretty\-print\fR
Invoke the pretty\-printer as part of the process.
.PP
\fBCommon Input/Output Options\fR
.TP
\fB\-i \fR\fB\fIfile\fR\fR
The input term given by the file name
\fI\fIfile\fR\fR.
.sp
In the absence of the
\fB\-i\fR
option, input will be read from
\fIstdin\fR.
.TP
\fB\-o \fR\fB\fIfile\fR\fR
The output will be written to the file given by the file name
\fI\fIfile\fR\fR.
.sp
In the absence of the
\fB\-o\fR
option, output will be written to
\fIstdout\fR.
.TP
\fB\-b\fR
The output will be written in the binary (BAF) ATerm format.
.sp
ATerms in the BAF format require a lot less space than ones in the TAF format, but the Java ATerm library does not currently support baf ATerms. ATerms in the baf format is the preferred format of exchange between Stratego tools.
.PP
\fBCommon Debugging Options\fR
.TP
\fB\-\-about\fR
See
\fB\-\-version\fR.
.TP
\fB\-h\fR, \fB\-?\fR, \fB\-\-help\fR
Display usage information.
.TP
\fB\-\-keep \fR\fB\fIint\fR\fR
Keep intermediate results produced by the internal stages in the pretty\-printing process. This is only useful for debugging. A high value of
\fIint\fR
indicates increased eagerness for keeping intermediate results.
.sp
Default setting is 0, indicating that no intermediates will be kept.
.TP
\fB\-S\fR, \fB\-\-silent\fR
Silent execution. Same as
\fB\-\-verbose \fR\fB\fI0\fR\fR.
.TP
\fB\-\-verbose \fR\fB\fIint\fR\fR
Set verbosity level to numerical value
\fIint\fR. The higher the number, the more information about pp\-aterm's inner workings are printed.
.sp
Alternatively,
\fIint\fR
can be set to either of the following verbosity levels, given in increasing order of verbosity:
\fBemergency\fR,
\fBalert\fR,
\fBcritical\fR,
\fBerror\fR,
\fBwarning\fR,
\fBnotice\fR,
\fBinfo\fR,
\fBdebug\fR,
\fBvomit\fR.
.TP
\fB\-\-version\fR
Displays the tool name and version.
.SH "EXAMPLE"
.PP
Given a meta file in
\fIprog.meta\fR
and the program in
\fIprog.str\fR, the following will parse a Stratego program with embedded concrete syntax:
.sp
.nf
$ parse\-cs \-\-syntax Stratego \-i prog.str \-o prog.trm
.fi
.SH "REPORTING BUGS"
.PP
Please report bugs to
<stratego\-bugs@cs.uu.nl>
.SH "COPYRIGHT"
.PP
Copyright (C) 2002\-2005 Eelco Visser
<visser@acm.org>
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
