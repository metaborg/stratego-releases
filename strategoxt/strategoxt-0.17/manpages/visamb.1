.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "VISAMB" "1" "08/26/2005" "" "Programs and Tools"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
visamb \- displays the ambiguities in a parse tree represented in AsFix2
.SH "SYNOPSIS"
.HP 7
\fBvisamb\fR [\-i\ \fIfile\fR\ |\ \-\-input\ \fIfile\fR] [\-o\ \fIfile\fR\ |\ \-\-output\ \fIfile\fR] [\-b] [\-S\ |\ \-\-silent] [\-\-verbose\ \fIlevel\fR] [\-k\ \fIlevel\fR\ |\ \-\-keep\ \fIlevel\fR] [\-h\ |\ \-?\ |\ \-\-help] [\-\-about] [\-\-version]
.SH "DESCRIPTION"
.PP
The
\fBvisamb\fR
utility extracts ambiguities from a parse tree and displays these in a readable format. Ambiguities are displayed by printing the non\-terminals of the nodes of the parse trees in the ambiguities.
.PP
The SDF2 implementation caters for arbitrary context\-free grammars. That is, even for ambiguous grammars the parser will produce a parse trees containing a concise encoding of all possible parses. Ambiguities are represented by means of
\fBamb\fR
nodes that contain a list of possible parse trees at that point. For most applications, however, it is desirable to develop unambiguous grammars.
.SH "OPTIONS"
.PP
\fBCommon Input/Output Options\fR
.TP
\fB\-i \fR\fB\fIfile\fR\fR
The input term given by the file name
\fI\fIfile\fR\fR.
.sp
In the absence of the
\fB\-i\fR
option, input will be read from
\fIstdin\fR.
.TP
\fB\-o \fR\fB\fIfile\fR\fR
The output will be written to the file given by the file name
\fI\fIfile\fR\fR.
.sp
In the absence of the
\fB\-o\fR
option, output will be written to
\fIstdout\fR.
.TP
\fB\-b\fR
The output will be written in the binary (BAF) ATerm format.
.sp
ATerms in the BAF format require a lot less space than ones in the TAF format, but the Java ATerm library does not currently support baf ATerms. ATerms in the baf format is the preferred format of exchange between Stratego tools.
.PP
\fBCommon Debugging Options\fR
.TP
\fB\-\-about\fR
See
\fB\-\-version\fR.
.TP
\fB\-h\fR, \fB\-?\fR, \fB\-\-help\fR
Display usage information.
.TP
\fB\-\-keep \fR\fB\fIint\fR\fR
Keep intermediate results produced by the internal stages in the pretty\-printing process. This is only useful for debugging. A high value of
\fIint\fR
indicates increased eagerness for keeping intermediate results.
.sp
Default setting is 0, indicating that no intermediates will be kept.
.TP
\fB\-S\fR, \fB\-\-silent\fR
Silent execution. Same as
\fB\-\-verbose \fR\fB\fI0\fR\fR.
.TP
\fB\-\-verbose \fR\fB\fIint\fR\fR
Set verbosity level to numerical value
\fIint\fR. The higher the number, the more information about pp\-aterm's inner workings are printed.
.sp
Alternatively,
\fIint\fR
can be set to either of the following verbosity levels, given in increasing order of verbosity:
\fBemergency\fR,
\fBalert\fR,
\fBcritical\fR,
\fBerror\fR,
\fBwarning\fR,
\fBnotice\fR,
\fBinfo\fR,
\fBdebug\fR,
\fBvomit\fR.
.TP
\fB\-\-version\fR
Displays the tool name and version.
.SH "EXAMPLE"
.PP
Consider the following syntax definition:
.sp
.nf
  definition
  module Main
  exports
    sorts Exp
    lexical syntax
      [\\ \\t\\n] \-> LAYOUT
    context\-free syntax
      "id"    \-> Exp
      Exp Exp \-> Exp
.fi
.PP
The following command will convert this into a parse table, suitable for
\fBvisamb\fR.
.sp
.nf
$ sdf2table \-i Exp.sdf \-o Exp.tbl
.fi
.PP
Next, we can see how the expression
id id id
is ambiguous with this grammar, by doing:
.sp
.nf
$ echo "id id id" | sglr \-2 \-p Exp.tbl | visamb
.fi
.PP
The result is:
.sp
.nf
  # ambiguities = 1
  + * id id id
    <Exp\-CF>
      <Exp\-CF>
        <Exp\-CF>
          id
        <LAYOUT?\-CF>
          <LAYOUT\-CF>

        <Exp\-CF>
          id
      <LAYOUT?\-CF>
        <LAYOUT\-CF>

      <Exp\-CF>
        id
    <Exp\-CF>
      <Exp\-CF>
        id
      <LAYOUT?\-CF>
        <LAYOUT\-CF>

      <Exp\-CF>
        <Exp\-CF>
          id
        <LAYOUT?\-CF>
          <LAYOUT\-CF>

        <Exp\-CF>
          id
 
.fi
.PP
Only the inner ambiguities are displayed, i.e., if a phrase and one of its sub\-phrases are ambiguous, only the ambiguities of the sub\-phrase are displayed.
.SH "REPORTING BUGS"
.PP
Please report bugs to
<stratego\-bugs@cs.uu.nl>
.SH "COPYRIGHT"
.PP
Copyright (C) 2002\-2005 Eelco Visser
<visser@acm.org>
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
