module Stratego-Sugar-HL

signature
  constructors
    RuleNames                : Term -> RuleNames
                             : List(Id) -> RuleNames
    Overlay                  : Id * List(Id) * Term -> Overlay
    ListVar                  : LId -> LID
    ImportWildcard           : ModName -> ImportModName
    Import                   : ModName -> ImportModName
    Overlays                 : List(Overlay) -> Decl
    Signature                : List(Sdecl) -> Decl
    Strategies               : List(Def) -> Decl
    Imports                  : List(ImportModName) -> Decl
    Specification            : List(Decl) -> Module
    Module                   : ModName * List(Decl) -> Module
                             : Strategy -> StrategyMid
    VarDec                   : ID * Type -> Typedid
    ExtSDef                  : Id * List(Typedid) * List(Typedid) -> StrategyDef
    ExtSDefInl               : Id * List(Typedid) * List(Typedid) * Strategy -> StrategyDef
    SDefT                    : Id * List(Typedid) * List(Typedid) * Strategy -> StrategyDef
    SVar                     : Id -> SVar
                             : StrategyDef -> Def
                             : ConstType -> Type
                             : FunType -> Type
                             : Type -> RetType
                             : ConstType -> ArgType
                             : Type -> ArgType
    FunType                  : List(ArgType) * RetType -> FunType
    ConstType                : Sort -> ConstType
    ExtOpDeclInj             : Type -> Opdecl
    ExtOpDeclQ               : String * Type -> Opdecl
    ExtOpDecl                : Id * Type -> Opdecl
    OpDeclInj                : Type -> Opdecl
    OpDeclQ                  : String * Type -> Opdecl
    OpDecl                   : Id * Type -> Opdecl
    SortTuple                : List(Sort) -> Sort
    SortListTl               : List(Sort) * Sort -> Sort
    SortList                 : List(Sort) -> Sort
    Sort                     : Id * List(Sort) -> Sort
    SortNoArgs               : UCID -> Sort
    SortVar                  : LCID -> Sort
    Constructors             : List(Opdecl) -> Sdecl
    Sorts                    : List(Sort) -> Sdecl
    Wld                      : Wld
    BuildDefault             : Term -> Term
    As                       : Var * Term -> Term
    Anno                     : PreTerm * PreTerm -> Term
                             : Wld -> Term
                             : Var -> Term
    BuildDefaultPT           : PreTerm -> PreTerm
    As                       : Var * PreTerm -> PreTerm
    Explode                  : Term * Term -> PreTerm
    OpQ                      : String * List(Term) -> PreTerm
    Op                       : Id * List(Term) -> PreTerm
    Str                      : String -> PreTerm
    Real                     : Real -> PreTerm
    Int                      : Int -> PreTerm
                             : Wld -> PreTerm
                             : Var -> PreTerm
                             : LID -> ID
                             : Id -> ID
    Var                      : LID -> Var
    Var                      : Id -> Var
                             : String -> String
                             : String -> Real
                             : String -> Int
                             : String -> UCID
                             : String -> LCID
                             : String -> LId
                             : String -> ModName
    DynRuleIntersectUnion    : Strategy * RuleNames * RuleNames * Strategy -> Strategy
    DynRuleIntersectUnionFix : RuleNames * RuleNames * Strategy -> Strategy
    Assign                   : Term * Term -> Strategy
    IfThen                   : Strategy * Strategy -> Strategy
    Choice                   : Strategy * Strategy -> Strategy
    With                     : Strategy -> Strategy
    Where                    : Strategy -> Strategy
    Rec                      : Id * Strategy -> Strategy
    LChoice                  : Strategy * Strategy -> Strategy
    Call                     : SVar * List(Strategy) -> Strategy
    ImportTerm               : ModName -> Strategy
    All                      : Strategy -> Strategy
    One                      : Strategy -> Strategy
    Some                     : Strategy -> Strategy
    PrimT                    : String * List(Strategy) * List(Term) -> Strategy
    GuardedLChoice           : Strategy * StrategyMid * Strategy -> Strategy
    Seq                      : Strategy * Strategy -> Strategy
    Scope                    : List(ID) * Strategy -> Strategy
    Build                    : Term -> Strategy
    Match                    : Term -> Strategy
    Id                       : Strategy
    Fail                     : Strategy
    CallDynamic              : Term * List(Strategy) * List(Term) -> Strategy
    CallT                    : SVar * List(Strategy) * List(Term) -> Strategy
    Let                      : List(Def) * Strategy -> Strategy
    Cong                     : Id * List(Strategy) -> Strategy
                             : String -> Id
    Mod                      : String * String -> Id


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
