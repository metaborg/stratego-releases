module rtg-script
imports
  libstratego-lib
  libstratego-xtc
  libstratego-rtg
  regular-xtc-tools
  tool-doc

signature
  constructors
                  : List(RTGCommand) -> RTGScript
    Read          : String -> RTGCommand
    Include       : List(RTGCommand) -> RTGCommand

    DeleteNonterm : String -> RTGCommand
    DeleteTerm    : String * String -> RTGCommand
    DeleteTerm    : String -> RTGCommand

    Reduce        : RTGCommand 
    Group         : RTGCommand

strategies

  main-rtg-script =
    xtc-io-wrap(
      include-option
    , rtg-script-usage
    , rtg-script-about
    , ![]
    , read-from
      ; rtg-script-eval 
      ; xtc-pp-rtg
    )

strategies

  rtg-script-eval =
    !(<id>, ())
    ; foldl(eval-command)

rules

  eval-command :
    (Read(file), ()) ->
      <conc-strings; find-in-includes; parse-rtg-file> (file, ".rtg")

  eval-command :
    (Reduce(), rtg) -> <rtg-reduce> rtg

  eval-command :
    (Group(), rtg) -> <rtg-group-productions> rtg

  eval-command :
    (DeleteNonterm(s), rtg) ->
      < RTG(
          Start(filter(not(?Nonterm(s))))
        , ProdRules(filter(not(?ProdRule(Nonterm(s), _))))
        )
      > rtg

  eval-command :
    (DeleteTerm(nt, t), rtg) -> 
      < RTG(
          id
        , ProdRules(
            map(
              try(ProdRule(?Nonterm(nt), filter(not(oncetd(?t)))))
            )
          ; filter(not(ProdRule(id, [])))
          )
        )
      > rtg

  eval-command :
    (DeleteTerm(t), rtg) -> 
      < RTG(
          id
        , ProdRules(
            map(
              try(ProdRule(id, filter(not(oncetd(?t)))))
            )
          ; filter(not(ProdRule(id, [])))
          )
        )
      > rtg

  eval-command :
    (Include(cmds), rtg) ->
      < RTG(Start(<union> (starts, <id>)), ProdRules(<conc> (<id>, prod-rules)))
      >  rtg
     where
       <rtg-script-eval> cmds
       ; ?RTG(Start(starts), ProdRules(prod-rules))

strategies

  include-option =
    ArgOption("-I" + "--Include"
    , <post-extend-config> ("-I", [<id>])
    , !HelpString("-I d|--Include d", "Include RTGs from directory d")
    )

  /**
   * @type File -> String
   */
  find-in-includes =
    <find-in-path> (<id>, <get-includes>)
    <+ where(<fatal-error> ["rtg-script: file '", <id>, "' not found"])

  get-includes =
    <conc> (<get-config> "-I", ["."]) <+ !["."]

strategies

  rtg-script-usage =
    <tool-doc>
      [ Usage("rtg-script -i file [OPTIONS]")
      , Summary("Produces an RTG by executing an RTG script")
      , OptionUsage()
      , AutoReportBugs()
      ]

  rtg-script-about =
    <tool-doc>
      [ AutoProgram()
      , Author(Person("Martin Bravenboer", "martin.bravenboer@gmail.com"))
      , GNU_LGPL("2002-2008", "Martin Bravenboer <martin.bravenboer@gmail.com>")
      , Config([
          DefaultXTCRepository()
        , CurrentXTCRepository()
        ]) 
      ]
