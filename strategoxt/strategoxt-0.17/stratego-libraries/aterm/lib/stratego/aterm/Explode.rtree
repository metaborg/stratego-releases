Module("stratego/aterm/Explode",[Imports([Import("ATerms"),Import("libstratego-lib")]),Strategies([SDefNoArgs("explode-aterm",LChoice(CallNoArgs(SVar("aterm-explode-annotated")),LChoice(CallNoArgs(SVar("aterm-explode-list")),LChoice(CallNoArgs(SVar("aterm-explode-int")),LChoice(CallNoArgs(SVar("aterm-explode-fun")),CallNoArgs(SVar("aterm-explode-appl"))))))),SDefNoArgs("implode-aterm",LChoice(CallNoArgs(SVar("aterm-implode-annotated")),LChoice(CallNoArgs(SVar("aterm-implode-list")),LChoice(CallNoArgs(SVar("aterm-implode-int")),LChoice(CallNoArgs(SVar("aterm-implode-fun")),CallNoArgs(SVar("aterm-implode-appl")))))))]),Rules([RDefNoArgs("aterm-explode-list",RuleNoCond(AnnoList(List([Var(ListVar("x*"))]),[]),NoAnnoList(Op("list",[App(Call(SVar("map"),[CallNoArgs(SVar("explode-aterm"))]),Var(ListVar("x*")))])))),RDefNoArgs("aterm-implode-list",RuleNoCond(NoAnnoList(Op("list",[Var(ListVar("x*"))])),App(Call(SVar("map"),[CallNoArgs(SVar("implode-aterm"))]),Var(ListVar("x*"))))),RDefNoArgs("aterm-explode-int",Rule(AnnoList(Var("i"),[]),NoAnnoList(Op("int",[NoAnnoList(Op("natural",[App(CallNoArgs(SVar("int-to-string")),Var("i"))]))])),BA(CallNoArgs(SVar("is-int")),Var("i")))),RDefNoArgs("aterm-implode-int",RuleNoCond(NoAnnoList(Op("int",[NoAnnoList(Op("natural",[Var("s")]))])),App(CallNoArgs(SVar("string-to-int")),Var("s")))),RDefNoArgs("aterm-explode-fun",RuleNoCond(AnnoList(Explode(Var("s"),NoAnnoList(List([]))),[]),NoAnnoList(Op("fun",[App(CallNoArgs(SVar("aterm-explode-afun")),Var("s"))])))),RDefNoArgs("aterm-implode-fun",Rule(NoAnnoList(Op("fun",[Var("s1")])),NoAnnoList(Explode(Var("s2"),NoAnnoList(List([])))),AM(BA(CallNoArgs(SVar("aterm-implode-afun")),Var("s1")),Var("s2")))),RDefNoArgs("aterm-explode-appl",RuleNoCond(AnnoList(Explode(Var("s"),NoAnnoList(List([Var(ListVar("x*"))]))),[]),NoAnnoList(Op("appl",[App(CallNoArgs(SVar("aterm-explode-afun")),Var("s")),App(Call(SVar("map"),[CallNoArgs(SVar("explode-aterm"))]),Var(ListVar("x*")))])))),RDefNoArgs("aterm-implode-appl",Rule(NoAnnoList(Op("appl",[Var("s1"),Var(ListVar("x*"))])),NoAnnoList(Explode(Var("s2"),App(Call(SVar("map"),[CallNoArgs(SVar("implode-aterm"))]),Var(ListVar("x*"))))),AM(BA(CallNoArgs(SVar("aterm-implode-afun")),Var("s1")),Var("s2")))),RDefNoArgs("aterm-explode-afun",Rule(Var("s"),NoAnnoList(Op("unquoted",[Var("s")])),BA(Not(CallNoArgs(SVar("is-double-quoted"))),Var("s")))),RDefNoArgs("aterm-explode-afun",Rule(Var("s"),NoAnnoList(Op("quoted",[Var("s")])),BA(CallNoArgs(SVar("is-double-quoted")),Var("s")))),RDefNoArgs("aterm-implode-afun",RuleNoCond(NoAnnoList(Op("unquoted",[Var("s")])),Var("s"))),RDefNoArgs("aterm-implode-afun",RuleNoCond(NoAnnoList(Op("quoted",[Var("s")])),Var("s"))),RDefNoArgs("aterm-explode-annotated",RuleNoCond(Anno(Var("t"),As(Var("as"),ListTail([Wld],Wld))),NoAnnoList(Op("annotated",[App(CallNoArgs(SVar("explode-aterm")),AnnoList(Var("t"),[])),NoAnnoList(Op("default",[App(Call(SVar("map"),[CallNoArgs(SVar("explode-aterm"))]),Var("as"))]))])))),RDefNoArgs("aterm-implode-annotated",Rule(NoAnnoList(Op("annotated",[Var("t"),NoAnnoList(Op("default",[Var("ts")]))])),Anno(Var("t'"),Var("ts'")),Seq(Assign(Var("t'"),App(CallNoArgs(SVar("implode-aterm")),Var("t"))),Assign(Var("ts'"),App(Call(SVar("map"),[CallNoArgs(SVar("implode-aterm"))]),Var("ts"))))))])])
