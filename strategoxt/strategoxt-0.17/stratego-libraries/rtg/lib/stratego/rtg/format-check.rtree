Module("stratego/rtg/format-check",[Imports([Import("libstratego-lib"),Import("stratego/rtg/signature"),Import("stratego/rtg/util")]),Strategies([SDefT("rtg-format-check",[],[DefaultVarDec("rtg")],CallT(SVar("rtg-format-check"),[CallNoArgs(SVar("false")),CallNoArgs(SVar("true"))],[Var("rtg")])),SDefT("rtg-format-check",[],[DefaultVarDec("rtg"),DefaultVarDec("starts")],CallT(SVar("rtg-format-check"),[CallNoArgs(SVar("false")),CallNoArgs(SVar("true"))],[Var("rtg"),Var("starts")])),SDefT("rtg-format-check",[DefaultVarDec("report-errors"),DefaultVarDec("fail-on-error")],[DefaultVarDec("rtg")],CallT(SVar("rtg-format-check"),[CallNoArgs(SVar("report-errors")),CallNoArgs(SVar("fail-on-error"))],[Var("rtg"),App(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[RootApp(Id)])),Wld]))),Var("rtg"))])),SDefT("rtg-format-check",[DefaultVarDec("report-errors"),DefaultVarDec("fail-on-error")],[DefaultVarDec("rtg"),DefaultVarDec("starts")],Seq(Where(Seq(Assign(Var("tbl"),RootApp(CallNoArgs(SVar("new-hashtable")))),Assign(Var("set"),RootApp(CallNoArgs(SVar("new-iset")))))),Call(SVar("finally"),[Seq(CallT(SVar("rtgfc-type"),[],[Var("rtg"),Var("tbl"),Var("set")]),Seq(IfThen(CallNoArgs(SVar("report-errors")),Where(CallT(SVar("rtgfc-format-check-report"),[],[Var("rtg"),Var("tbl"),Var("set")]))),IfThen(CallNoArgs(SVar("fail-on-error")),Where(CallT(SVar("rtgfc-format-check-error"),[],[Var("starts"),Var("tbl"),Var("set")]))))),Seq(BA(CallNoArgs(SVar("hashtable-destroy")),Var("tbl")),BA(CallNoArgs(SVar("iset-destroy")),Var("set")))])))]),Strategies([SDefT("rtgfc-type",[],[DefaultVarDec("rtg"),DefaultVarDec("tbl"),DefaultVarDec("set")],DynRuleScope([DynRuleScopeId("rtgfc-InjUserType"),DynRuleScopeId("rtgfc-ListUserType"),DynRuleScopeId("rtgfc-OptUserType"),DynRuleScopeId("rtgfc-TupleUserType"),DynRuleScopeId("rtgfc-IntAppl"),DynRuleScopeId("rtgfc-StringAppl"),DynRuleScopeId("rtgfc-ApplUserType")],Seq(Where(BA(CallNoArgs(SVar("rtgfc-generate-type-rules")),Var("rtg"))),CallT(SVar("rtgfc-format-check"),[],[Var("tbl"),Var("set")])))),SDefT("rtgfc-format-check",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Where(Seq(BA(Call(SVar("repeat"),[CallT(SVar("rtgfc-Type"),[],[Var("tbl"),Var("set")])]),NoAnnoList(Str("\"\""))),BA(Call(SVar("repeat"),[CallT(SVar("rtgfc-Type"),[],[Var("tbl"),Var("set")])]),NoAnnoList(Int("0"))))),Call(SVar("bottomup-consnil"),[LChoice(Where(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")])),LChoice(Seq(Call(SVar("repeat1"),[CallT(SVar("rtgfc-Type"),[],[Var("tbl"),Var("set")])]),CallT(SVar("rtgfc-report-types"),[],[Var("tbl"),Var("set")])),LChoice(Call(SVar("one-consnil"),[Not(CallT(SVar("rtgfc-is-typed"),[],[Var("tbl"),Var("set")]))]),CallT(SVar("rtgfc-report-type-failure"),[Id],[Var("tbl"),Var("set")]))))]))),SDefT("rtgfc-type-string",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(CallNoArgs(SVar("is-string")),CallT(SVar("rtgfc-type-special"),[],[NoAnnoList(Str("\"\"")),Var("tbl"),Var("set")]))),SDefT("rtgfc-type-int",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(CallNoArgs(SVar("is-int")),CallT(SVar("rtgfc-type-special"),[],[NoAnnoList(Int("0")),Var("tbl"),Var("set")]))),SDefT("rtgfc-type-special",[],[DefaultVarDec("special"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Match(Var("t")),Where(Seq(AM(BA(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")]),Var("special")),Var("types")),Seq(BA(CallT(SVar("hashtable-put"),[],[Var("t"),Var("types")]),Var("tbl")),BA(Call(SVar("map"),[Scope(["type"],Seq(Match(Var("type")),BA(CallT(SVar("iset-add"),[],[NoAnnoList(Tuple([Var("t"),Var("type")]))]),Var("set"))))]),Var("types"))))))),SDefT("rtgfc-is-typed",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Where(AM(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")]),NoAnnoList(ListTail([Wld],Wld)))))]),Strategies([SDefNoArgs("rtgfc-generate-type-rules",Seq(CallNoArgs(SVar("rtg-ungroup-productions")),Seq(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[Wld])),NoAnnoList(Op("ProdRules",[RootApp(Id)]))]))),Seq(Call(SVar("map"),[LChoice(CallNoArgs(SVar("rtgfc-generate-type-rule")),Seq(Call(SVar("debug"),[Build(NoAnnoList(Str("\"internal error: cannot create type rule for \"")))]),Fail))]),Seq(IfThen(Call(SVar("oncetd"),[Match(NoAnnoList(Op("Ref",[NoAnnoList(Op("Int",[]))])))]),CallNoArgs(SVar("rtgfc-generate-type-rule-deprecated-int"))),IfThen(Call(SVar("oncetd"),[Match(NoAnnoList(Op("Ref",[NoAnnoList(Op("String",[]))])))]),CallNoArgs(SVar("rtgfc-generate-type-rule-deprecated-string")))))))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("a"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("IntTerm",[])),NoAnnoList(List([]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-IntAppl",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(Var("t"),Var("t"),Seq(BA(CallNoArgs(SVar("is-int")),Var("t")),CallT(SVar("rtgfc-new-type"),[],[Var("a"),Var("tbl"),Var("set")]))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("a"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("StringTerm",[])),NoAnnoList(List([]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-StringAppl",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(Var("t"),Var("t"),Seq(BA(CallNoArgs(SVar("is-string")),Var("t")),CallT(SVar("rtgfc-new-type"),[],[Var("a"),Var("tbl"),Var("set")]))))]))),SDefNoArgs("rtgfc-generate-type-rule-deprecated-int",GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-IntAppl",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(Var("t"),Var("t"),Seq(BA(CallNoArgs(SVar("is-int")),Var("t")),CallT(SVar("rtgfc-new-type"),[],[NoAnnoList(Op("Int",[])),Var("tbl"),Var("set")]))))])),SDefNoArgs("rtgfc-generate-type-rule-deprecated-string",GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-StringAppl",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(Var("t"),Var("t"),Seq(BA(CallNoArgs(SVar("is-string")),Var("t")),CallT(SVar("rtgfc-new-type"),[],[NoAnnoList(Op("String",[])),Var("tbl"),Var("set")]))))])),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("b"),NoAnnoList(List([NoAnnoList(Op("Ref",[Var("a")]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-InjUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(Var("t"),Var("t"),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("t")),Seq(BA(Not(CallT(SVar("rtgfc-has-type"),[],[Var("b"),Var("tbl"),Var("set")])),Var("t")),BA(CallT(SVar("rtgfc-set-type"),[],[Var("b"),Var("tbl"),Var("set")]),Var("t"))))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("c"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("ConsTerm",[])),NoAnnoList(List([NoAnnoList(Op("Ref",[Var("a")])),NoAnnoList(Op("Ref",[Var("b")]))]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-ListUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(As(Var("t"),NoAnnoList(ListTail([Var("hd")],Var("tl")))),Var("t"),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("b"),Var("tbl"),Var("set")]),Var("tl")),Seq(BA(Not(CallT(SVar("rtgfc-has-type"),[],[Var("c"),Var("tbl"),Var("set")])),Var("t")),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("hd")),BA(CallT(SVar("rtgfc-set-type"),[],[Var("c"),Var("tbl"),Var("set")]),Var("t")))))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("c"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("ConcTerm",[])),NoAnnoList(List([NoAnnoList(Op("Ref",[Var("a")])),NoAnnoList(Op("Ref",[Var("b")]))]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-ListUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(As(Var("t"),NoAnnoList(Op("Conc",[Var("t1"),Var("t2")]))),Var("t"),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("t1")),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("b"),Var("tbl"),Var("set")]),Var("t2")),BA(CallT(SVar("rtgfc-new-type"),[],[Var("c"),Var("tbl"),Var("set")]),Var("t"))))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("a"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("NilTerm",[])),NoAnnoList(List([]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-ListUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(NoAnnoList(List([])),NoAnnoList(List([])),BA(CallT(SVar("rtgfc-new-type"),[],[Var("a"),Var("tbl"),Var("set")]),NoAnnoList(List([])))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("b"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("SomeTerm",[])),NoAnnoList(List([NoAnnoList(Op("Ref",[Var("a")]))]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-OptUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(NoAnnoList(Op("Some",[Var("t")])),NoAnnoList(Op("Some",[Var("t")])),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("t")),BA(CallT(SVar("rtgfc-new-type"),[],[Var("b"),Var("tbl"),Var("set")]),NoAnnoList(Op("Some",[Var("t")]))))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("a"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("NoneTerm",[])),NoAnnoList(List([]))]))]))]))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-OptUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(NoAnnoList(Op("None",[])),NoAnnoList(Op("None",[])),BA(CallT(SVar("rtgfc-new-type"),[],[Var("a"),Var("tbl"),Var("set")]),NoAnnoList(Op("None",[])))))]))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("a"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("TupleTerm",[Wld])),Var("as")]))]))]))),Seq(Where(AM(BA(Call(SVar("map"),[Match(NoAnnoList(Op("Ref",[RootApp(Id)])))]),Var("as")),Var("arg-types"))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-TupleUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(As(Var("t"),NoAnnoList(Explode(NoAnnoList(Str("\"\"")),Var("args")))),Var("t"),Seq(BA(Not(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")])),Var("t")),Seq(BA(CallT(SVar("rtgfc-list-has-type"),[],[Var("arg-types"),Var("tbl"),Var("set")]),Var("args")),BA(CallT(SVar("rtgfc-set-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("t"))))))])))),SDefNoArgs("rtgfc-generate-type-rule",Seq(Match(NoAnnoList(Op("ProdRule",[Var("a"),NoAnnoList(List([NoAnnoList(Op("Appl",[NoAnnoList(Op("Term",[Var("f")])),Var("as")]))]))]))),Seq(Where(AM(BA(Call(SVar("map"),[Match(NoAnnoList(Op("Ref",[RootApp(Id)])))]),Var("as")),Var("arg-types"))),GenDynRules([AddDynRule(DynRuleId(RDecT("rtgfc-ApplUserType",[],[DefaultVarDec("tbl"),DefaultVarDec("set")])),Rule(As(Var("t"),NoAnnoList(Explode(Var("f"),Var("args")))),Var("t"),Seq(BA(Not(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")])),Var("t")),Seq(BA(CallT(SVar("rtgfc-list-has-type"),[],[Var("arg-types"),Var("tbl"),Var("set")]),Var("args")),BA(CallT(SVar("rtgfc-set-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("t"))))))])))),SDefT("rtgfc-list-has-type",[],[DefaultVarDec("as"),DefaultVarDec("tbl"),DefaultVarDec("set")],CondChoice(Match(NoAnnoList(List([]))),AM(Build(Var("as")),NoAnnoList(List([]))),Seq(Match(NoAnnoList(ListTail([Var("hd")],Var("tl")))),Where(Seq(AM(Build(Var("as")),NoAnnoList(ListTail([Var("a")],Var("bs")))),Seq(BA(CallT(SVar("rtgfc-has-type"),[],[Var("a"),Var("tbl"),Var("set")]),Var("hd")),BA(CallT(SVar("rtgfc-list-has-type"),[],[Var("bs"),Var("tbl"),Var("set")]),Var("tl"))))))))]),Strategies([SDefT("rtgfc-Type",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Where(Choice(CallT(SVar("rtgfc-IntAppl"),[],[Var("tbl"),Var("set")]),Choice(CallT(SVar("rtgfc-StringAppl"),[],[Var("tbl"),Var("set")]),Choice(CallT(SVar("rtgfc-InjUserType"),[],[Var("tbl"),Var("set")]),Choice(CallT(SVar("rtgfc-ApplUserType"),[],[Var("tbl"),Var("set")]),Choice(CallT(SVar("rtgfc-TupleUserType"),[],[Var("tbl"),Var("set")]),Choice(CallT(SVar("rtgfc-ListUserType"),[],[Var("tbl"),Var("set")]),CallT(SVar("rtgfc-OptUserType"),[],[Var("tbl"),Var("set")])))))))))]),Strategies([SDefT("rtgfc-new-type",[],[DefaultVarDec("nt"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Match(Var("term")),Where(Seq(Not(CallT(SVar("rtgfc-has-type"),[],[Var("nt"),Var("tbl"),Var("set")])),Seq(BA(CallT(SVar("hashtable-push"),[],[Var("term"),Var("nt")]),Var("tbl")),BA(CallT(SVar("iset-add"),[],[NoAnnoList(Tuple([Var("term"),Var("nt")]))]),Var("set"))))))),SDefT("rtgfc-set-type",[],[DefaultVarDec("nt"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Match(Var("term")),Where(Seq(BA(CallT(SVar("hashtable-push"),[],[Var("term"),Var("nt")]),Var("tbl")),BA(CallT(SVar("iset-add"),[],[NoAnnoList(Tuple([Var("term"),Var("nt")]))]),Var("set")))))),SDefT("rtgfc-has-type",[],[DefaultVarDec("nt"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Match(Var("term")),Seq(Not(Choice(CallNoArgs(SVar("is-string")),CallNoArgs(SVar("is-int")))),Where(BA(CallT(SVar("iset-contains"),[],[NoAnnoList(Tuple([Var("term"),Var("nt")]))]),Var("set")))))),SDefT("rtgfc-has-type",[],[DefaultVarDec("nt"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(CallNoArgs(SVar("is-int")),Where(BA(CallT(SVar("iset-contains"),[],[NoAnnoList(Tuple([NoAnnoList(Int("0")),Var("nt")]))]),Var("set"))))),SDefT("rtgfc-has-type",[],[DefaultVarDec("nt"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(CallNoArgs(SVar("is-string")),Where(BA(CallT(SVar("iset-contains"),[],[NoAnnoList(Tuple([NoAnnoList(Str("\"\"")),Var("nt")]))]),Var("set"))))),SDefT("rtgfc-retrieve-types",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],LChoice(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")]),Seq(Match(Var("t")),Seq(Where(BA(CallT(SVar("hashtable-put"),[],[Var("t"),NoAnnoList(List([]))]),Var("tbl"))),Build(NoAnnoList(List([]))))))),SDefT("rtgfc-get-types",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Match(Var("t")),Seq(Not(Choice(CallNoArgs(SVar("is-string")),CallNoArgs(SVar("is-int")))),BA(CallT(SVar("hashtable-get"),[],[Var("t")]),Var("tbl"))))),SDefT("rtgfc-get-types",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(CallNoArgs(SVar("is-int")),BA(CallT(SVar("hashtable-get"),[],[NoAnnoList(Int("0"))]),Var("tbl")))),SDefT("rtgfc-get-types",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(CallNoArgs(SVar("is-string")),BA(CallT(SVar("hashtable-get"),[],[NoAnnoList(Str("\"\""))]),Var("tbl"))))]),Strategies([SDefT("rtgfc-format-check-error",[],[DefaultVarDec("rtg"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Where(Assign(Var("starts"),App(LChoice(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[RootApp(Id)])),Wld]))),CallNoArgs(SVar("is-list"))),Var("rtg")))),Where(Seq(Assign(Var("types"),RootApp(LChoice(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")]),Build(NoAnnoList(List([])))))),IfThen(AM(BA(CallNoArgs(SVar("isect")),NoAnnoList(Tuple([Var("starts"),Var("types")]))),NoAnnoList(List([]))),Fail))))),SDefT("rtgfc-format-check-report",[],[DefaultVarDec("rtg"),DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Where(Assign(Var("starts"),App(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[RootApp(Id)])),Wld]))),Var("rtg")))),CallT(SVar("rtgfc-format-check-report"),[],[Var("starts"),Var("tbl"),Var("set")]))),SDefT("rtgfc-format-check-report",[],[DefaultVarDec("starts"),DefaultVarDec("tbl"),DefaultVarDec("set")],Where(Seq(BA(CallNoArgs(SVar("is-list")),Var("starts")),Seq(AM(LChoice(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")]),Build(NoAnnoList(List([])))),Var("types")),Seq(CondChoice(AM(Build(Var("types")),NoAnnoList(List([]))),Build(NoAnnoList(Int("1"))),Seq(BA(CallNoArgs(SVar("isect")),NoAnnoList(Tuple([Var("starts"),RootApp(Id)]))),CondChoice(Match(NoAnnoList(List([]))),Seq(Call(SVar("if-verbose1"),[BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("stderr-stream"))),NoAnnoList(List([NoAnnoList(Str("\"error: term typed as \"")),App(CallNoArgs(SVar("rtgfc-types-to-string")),Var("types")),NoAnnoList(Str("\" but expected \"")),App(CallNoArgs(SVar("rtgfc-types-to-string")),Var("starts"))]))])))]),Build(NoAnnoList(Int("1")))),Seq(Call(SVar("if-verbose2"),[BA(Seq(CallNoArgs(SVar("rtgfc-types-to-string")),Call(SVar("debug"),[Build(NoAnnoList(Str("\"info: term typed as \"")))])),Var("types"))]),Build(NoAnnoList(Int("0"))))))),BA(CallNoArgs(SVar("set-config")),NoAnnoList(Tuple([NoAnnoList(Str("\"--exit-code\"")),RootApp(Id)])))))))),SDefT("rtgfc-report-types",[],[DefaultVarDec("tbl"),DefaultVarDec("set")],Call(SVar("if-verbose2"),[Seq(Match(Var("term")),Where(Seq(CallT(SVar("rtgfc-get-types"),[],[Var("tbl"),Var("set")]),Seq(SwitchChoice(Id,[SwitchCase(Match(NoAnnoList(List([]))),Build(NoAnnoList(List([NoAnnoList(Str("\"  Cannot type \"")),Var("term")])))),SwitchCase(Match(NoAnnoList(List([Var("t")]))),Build(NoAnnoList(List([NoAnnoList(Str("\"  Typed \"")),App(CallNoArgs(SVar("write-to-string")),Var("term")),NoAnnoList(Str("\" as \"")),App(CallNoArgs(SVar("rtgfc-nonterm-to-string")),Var("t"))]))))],Build(NoAnnoList(List([NoAnnoList(Str("\"  Typed \"")),App(CallNoArgs(SVar("write-to-string")),Var("term")),NoAnnoList(Str("\" as one of \"")),RootApp(CallNoArgs(SVar("rtgfc-types-to-string")))])))),BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("stderr-stream"))),RootApp(Id)])))))))])),SDefT("rtgfc-report-type-failure",[DefaultVarDec("finally")],[DefaultVarDec("tbl"),DefaultVarDec("set")],Seq(Match(Var("t")),Seq(Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("stderr-stream"))),NoAnnoList(List([NoAnnoList(Str("\"error: cannot type \"")),RootApp(CallNoArgs(SVar("write-to-string")))]))])))),Seq(CondChoice(BA(Call(SVar("one-consnil"),[Id]),Var("t")),Seq(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("stderr-stream"))),NoAnnoList(List([NoAnnoList(Str("\"    inferred types of subterms: \""))]))]))),BA(Call(SVar("all-consnil"),[Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("stderr-stream"))),NoAnnoList(List([NoAnnoList(Str("\"    typed \"")),RootApp(CallNoArgs(SVar("write-to-string"))),NoAnnoList(Str("\" as \"")),RootApp(Seq(CallT(SVar("rtgfc-retrieve-types"),[],[Var("tbl"),Var("set")]),CallNoArgs(SVar("rtgfc-types-to-string"))))]))]))))]),Var("t"))),Id),CallNoArgs(SVar("finally")))))),SDefNoArgs("rtgfc-nonterm-to-string",LChoice(Match(NoAnnoList(Op("Set",[RootApp(CallNoArgs(SVar("rtgfc-types-to-string")))]))),CallNoArgs(SVar("rtg-to-string")))),SDefNoArgs("rtgfc-types-to-string",Seq(Call(SVar("map"),[CallNoArgs(SVar("rtg-to-string"))]),Seq(Call(SVar("separate-by"),[Build(NoAnnoList(Str("\", \"")))]),CallNoArgs(SVar("concat-strings"))))),RDefNoArgs("rtg-to-string",RuleNoCond(NoAnnoList(Op("Int",[])),NoAnnoList(Str("\"<int>\"")))),RDefNoArgs("rtg-to-string",RuleNoCond(NoAnnoList(Op("String",[])),NoAnnoList(Str("\"<string>\""))))]),Strategies([SDef("map-consnil",[DefaultVarDec("s")],Rec("x",Scope(["tail"],LChoice(Seq(Match(NoAnnoList(ListTail([Wld],Var("tail")))),Seq(CallNoArgs(SVar("s")),Build(NoAnnoList(ListTail([RootApp(Id)],App(CallNoArgs(SVar("x")),Var("tail"))))))),ListCongNoTail([]))))),SDef("bottomup-consnil",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("all-consnil"),[CallNoArgs(SVar("x"))]),CallNoArgs(SVar("s"))))),SDef("all-consnil",[DefaultVarDec("s")],GuardedLChoice(CallNoArgs(SVar("is-list")),Choice(ListCong([CallNoArgs(SVar("s"))],CallNoArgs(SVar("s"))),ListCongNoTail([])),All(CallNoArgs(SVar("s"))))),SDef("one-consnil",[DefaultVarDec("s")],GuardedLChoice(CallNoArgs(SVar("is-list")),Choice(ListCong([CallNoArgs(SVar("s"))],Id),ListCong([Id],CallNoArgs(SVar("s")))),One(CallNoArgs(SVar("s")))))])])
