Module("stratego/rtg/reduce",[Imports([Import("libstratego-lib"),Import("stratego/rtg/signature"),Import("stratego/rtg/util")]),Strategies([SDefNoArgs("rtg-reduce",Seq(CallT(SVar("log"),[],[NoAnnoList(Op("Debug",[])),NoAnnoList(Str("\"Ungroup productions\""))]),Seq(CallNoArgs(SVar("rtg-ungroup-productions")),Seq(CallT(SVar("log"),[],[NoAnnoList(Op("Debug",[])),NoAnnoList(Str("\"Determine productive non terminals\""))]),Seq(Where(Assign(Var("productive"),RootApp(CallNoArgs(SVar("rtg-productive-nonterms"))))),Seq(CallT(SVar("log"),[],[NoAnnoList(Op("Debug",[])),NoAnnoList(Str("\"Removing not productive non terminals\""))]),Seq(Call(SVar("RTG"),[Call(SVar("Start"),[Call(SVar("filter"),[Where(BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([RootApp(Id),Var("productive")]))))])]),Call(SVar("ProdRules"),[Call(SVar("filter"),[CallT(SVar("rtg-all-nonterms-in"),[],[Var("productive")])])])]),Seq(CallT(SVar("log"),[],[NoAnnoList(Op("Debug",[])),NoAnnoList(Str("\"Determine reachable non terminals\""))]),Seq(Where(AM(CallNoArgs(SVar("rtg-reachable-nonterms")),Var("reachable"))),Seq(CallT(SVar("log"),[],[NoAnnoList(Op("Debug",[])),NoAnnoList(Str("\"Removing not reachable non terminals\""))]),Seq(Call(SVar("RTG"),[Id,Call(SVar("ProdRules"),[Call(SVar("filter"),[CallT(SVar("rtg-all-nonterms-in"),[],[Var("reachable")])])])]),CallNoArgs(SVar("rtg-check-result"))))))))))))),SDefNoArgs("rtg-check-result",Seq(Call(SVar("try"),[Seq(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[NoAnnoList(List([]))])),NoAnnoList(Op("ProdRules",[Wld]))]))),CallT(SVar("fatal-err"),[],[NoAnnoList(Str("\"No productive start symbols left in rtg\""))]))]),Call(SVar("try"),[Seq(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[Wld])),NoAnnoList(Op("ProdRules",[NoAnnoList(List([]))]))]))),CallT(SVar("fatal-err"),[],[NoAnnoList(Str("\"No productions left in rtg\""))]))])))]),Strategies([SDefNoArgs("rtg-reachable-nonterms",Seq(Match(NoAnnoList(Op("RTG",[NoAnnoList(Op("Start",[Var("starts")])),NoAnnoList(Op("ProdRules",[Var("prods")]))]))),Let([SDefNoArgs("reach-0",Build(Var("starts"))),SDefNoArgs("reach-n",Scope(["reach"],Seq(Match(Var("reach")),BA(CallNoArgs(SVar("unions")),NoAnnoList(ListTail([Var("reach")],App(Call(SVar("filter"),[LRule(Rule(NoAnnoList(Op("ProdRule",[Var("nt"),Var(ListVar("rhs*"))])),App(CallNoArgs(SVar("rtg-collect-nonterms")),Var(ListVar("rhs*"))),BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([Var("nt"),Var("reach")])))))]),Var("prods"))))))))],Seq(CallNoArgs(SVar("reach-0")),Call(SVar("rtg-set-inc-repeat"),[CallNoArgs(SVar("reach-n"))])))))]),Strategies([SDefT("rtg-all-nonterms-in",[],[DefaultVarDec("nts")],Where(Seq(CallNoArgs(SVar("rtg-collect-nonterms")),All(BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([RootApp(Id),Var("nts")])))))))]),Strategies([SDefNoArgs("rtg-productive-nonterms",Seq(Match(Var("rtg")),Seq(AM(BA(CallNoArgs(SVar("rtg-collect-nonterms")),Var("rtg")),Var("nts")),Let([SDefNoArgs("prod-0",Build(NoAnnoList(List([])))),SDefNoArgs("prod-n",Scope(["productive"],Seq(Match(Var("productive")),BA(CallNoArgs(SVar("union")),NoAnnoList(Tuple([Var("productive"),App(Call(SVar("filter"),[CallT(SVar("rtg-can-be-produced"),[],[RootApp(Id),Var("productive"),Var("rtg")])]),Var("nts"))]))))))],Seq(CallNoArgs(SVar("prod-0")),Call(SVar("rtg-set-inc-repeat"),[CallNoArgs(SVar("prod-n"))])))))),SDefT("rtg-can-be-produced",[],[VarDec("nt",ConstType(SortNoArgs("NonTerm"))),VarDec("productive",ConstType(Sort("Set",[SortNoArgs("NonTerm")]))),VarDec("rhg",ConstType(SortNoArgs("RHG")))],Where(Seq(BA(CallT(SVar("rtg-productions-of"),[],[Var("nt")]),Var("rhg")),One(Seq(CallNoArgs(SVar("rtg-collect-nonterms")),All(BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([RootApp(Id),Var("productive")])))))))))]),Strategies([SDef("rtg-set-inc-repeat",[VarDec("s",FunType([ConstType(Sort("Set",[SortVar("a")]))],ConstType(Sort("Set",[SortVar("a")]))))],Rec("x",Scope(["l"],Seq(Where(AM(CallNoArgs(SVar("length")),Var("l"))),Seq(CallNoArgs(SVar("s")),GuardedLChoice(Where(BA(CallNoArgs(SVar("gt")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("length"))),Var("l")])))),CallNoArgs(SVar("x")),Id)))))),SDefNoArgs("rtg-collect-nonterms",Call(SVar("collect"),[Match(NoAnnoList(Op("Nonterm",[Wld])))]))])])
