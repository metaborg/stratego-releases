Module("stratego/error-support/report",[Imports([Import("libstratego-xtc"),Import("error-support")]),Strategies([SDefT("report-error-summary",[],[DefaultVarDec("summary")],LChoice(Seq(Match(Var("input")),Where(Seq(AM(Build(Var("summary")),NoAnnoList(Op("summary",[Var("producer"),Wld,Var("errors")]))),Seq(Build(Var("errors")),Call(SVar("map"),[Scope(["error"],Seq(Match(Var("error")),BA(LChoice(CallT(SVar("report-specific-error"),[],[Var("producer"),Var("error")]),CallT(SVar("report-error"),[],[Var("producer"),Var("error")])),Var("input"))))]))))),Seq(Call(SVar("say"),[Build(NoAnnoList(Str("\"error: An error occured, but the error summary cannot be presented in a nice way. Please report this as a bug.\"")))]),Where(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"       Structured error summary: \"")))]),Var("summary")))))),SDefT("report-error",[],[DefaultVarDec("producer"),DefaultVarDec("error")],CallT(SVar("report-error"),[],[Var("error")])),SDefT("report-error",[],[DefaultVarDec("error")],LChoice(Seq(Where(AM(Build(Var("error")),NoAnnoList(Op("error",[Var("err"),NoAnnoList(List([NoAnnoList(Op("localized",[Var("descr"),Var("location")]))]))])))),CallT(SVar("report-location"),[],[Var("err"),Var("descr"),Var("location")])),Seq(Call(SVar("say"),[Build(NoAnnoList(Str("\"error: An error occured, but the error cannot be presented in a nice way. Please report this as a bug.\"")))]),Seq(Where(BA(Call(SVar("debug"),[Build(NoAnnoList(Str("\"       Structured error: \"")))]),Var("error"))),Fail)))),SDefT("report-location",[],[DefaultVarDec("err"),DefaultVarDec("descr"),DefaultVarDec("location")],Seq(Where(AM(Build(Var("location")),NoAnnoList(Op("area-in-file",[Var("file"),Var("area")])))),CallT(SVar("report-area"),[],[Var("err"),Var("descr"),Var("file"),Var("area")]))),SDefT("report-location",[],[DefaultVarDec("err"),DefaultVarDec("descr"),DefaultVarDec("location")],Seq(Where(AM(Build(Var("location")),NoAnnoList(Op("file",[Var("file")])))),CallT(SVar("report-file"),[],[Var("err"),Var("descr"),Var("file")])))]),Strategies([SDefT("report-specific-error",[],[DefaultVarDec("producer"),DefaultVarDec("error")],Where(Seq(AM(Build(Var("error")),NoAnnoList(Op("error",[NoAnnoList(Str("\"Ambiguity\"")),RootApp(Id)]))),Call(SVar("map"),[Scope(["descr","file","area"],Seq(Match(NoAnnoList(Op("localized",[Var("descr"),NoAnnoList(Op("area-in-file",[Var("file"),Var("area")]))]))),Seq(CallT(SVar("report-area"),[],[NoAnnoList(Str("\"\"")),NoAnnoList(Str("\"Ambiguity found\"")),Var("file"),Var("area")]),Seq(CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),NoAnnoList(Str("\"Alternatives are: \""))]),Seq(BA(CallNoArgs(SVar("string-tokenize")),NoAnnoList(Tuple([NoAnnoList(List([NoAnnoList(Char("';'"))])),Var("descr")]))),Seq(Call(SVar("map"),[CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"   \"")),RootApp(Id)])))])]),CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),NoAnnoList(Str("\"\""))])))))))]))))]),Strategies([SDefT("report-file",[],[DefaultVarDec("err"),DefaultVarDec("descr"),DefaultVarDec("file")],CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("file"),NoAnnoList(Str("\": '\"")),Var("err"),NoAnnoList(Str("\"': \"")),Var("descr")])))])),SDefT("report-area",[],[DefaultVarDec("err"),DefaultVarDec("descr"),DefaultVarDec("file"),DefaultVarDec("area")],Seq(Where(AM(Build(Var("area")),NoAnnoList(Op("area",[Var("begin-line"),Var("begin-column"),Wld,Var("end-column"),Wld,Wld])))),Let([SDefNoArgs("y-pos",Seq(BA(CallNoArgs(SVar("dec")),Var("begin-line")),CondChoice(BA(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("0"))]))),Build(NoAnnoList(Int("0"))),Id))),SDefNoArgs("x-pos",Seq(AM(BA(CallNoArgs(SVar("dec")),Var("begin-column")),Var("c")),CondChoice(BA(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([Var("c"),NoAnnoList(Int("0"))]))),Build(NoAnnoList(Int("0"))),Id))),SDefNoArgs("filename",CondChoice(AM(Build(Var("file")),NoAnnoList(Str("\"-\""))),Build(NoAnnoList(Str("\"stdin\""))),Build(Var("file")))),SDefNoArgs("print-location",Where(CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([App(CallNoArgs(SVar("filename")),NoAnnoList(Tuple([]))),NoAnnoList(Str("\": \"")),Var("descr"),NoAnnoList(Str("\" at line \"")),App(CallNoArgs(SVar("int-to-string")),Var("begin-line")),NoAnnoList(Str("\", column \"")),App(CallNoArgs(SVar("int-to-string")),Var("begin-column"))])))]))),SDefNoArgs("print-context-in-file",Seq(CallNoArgs(SVar("get-lines")),Seq(CallNoArgs(SVar("add-indices")),Seq(Where(AM(CallNoArgs(SVar("y-pos")),Var("y"))),Seq(CondChoice(AM(Build(Var("y")),NoAnnoList(Int("0"))),LRule(RuleNoCond(NoAnnoList(ListTail([Var("line")],Wld)),NoAnnoList(List([Var("line")])))),Seq(Call(SVar("at-suffix"),[Seq(Match(NoAnnoList(ListTail([NoAnnoList(Tuple([Var("y"),Wld]))],Wld))),Match(Var("context")))]),Build(Var("context")))),Seq(IfThen(Match(NoAnnoList(ListTail([Var("s1"),Var("s2")],Wld))),Build(NoAnnoList(List([Var("s1"),Var("s2")])))),Seq(Call(SVar("map"),[CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),RootApp(CallNoArgs(SVar("Snd")))])]),Seq(BA(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([App(CallNoArgs(SVar("copy-char")),NoAnnoList(Tuple([App(CallNoArgs(SVar("x-pos")),NoAnnoList(Tuple([]))),NoAnnoList(Char("' '"))]))),NoAnnoList(Str("\"^\""))]))),CallT(SVar("log"),[],[NoAnnoList(Op("Error",[])),RootApp(Id)]))))))))),SDefNoArgs("read-input-file",LChoice(Match(NoAnnoList(Op("FILE",[RootApp(CallNoArgs(SVar("read-text-file")))]))),CallNoArgs(SVar("is-string"))))],Seq(CallNoArgs(SVar("print-location")),IfThen(AM(CallNoArgs(SVar("read-input-file")),Var("txt")),BA(CallNoArgs(SVar("print-context-in-file")),Var("txt")))))))])])
