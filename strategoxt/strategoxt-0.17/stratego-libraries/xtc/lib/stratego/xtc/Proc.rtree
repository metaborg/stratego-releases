Module("stratego/xtc/Proc",[Imports([Import("stratego/xtc/Register")]),Signature([Constructors([OpDecl("FILE",FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("File")))),OpDecl("DIR",FunType([ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("File")))),OpDecl("TEMP",ConstType(SortNoArgs("XtcKey"))),OpDecl("TempFiles",ConstType(SortNoArgs("Table"))),OpDecl("TempDirs",ConstType(SortNoArgs("Table")))])]),Strategies([RDefNoArgs("read-from",Rule(NoAnnoList(Op("stdin",[])),Var("t"),AM(BA(CallNoArgs(SVar("ReadFromFile")),NoAnnoList(Op("stdin",[]))),Var("t")))),RDefNoArgs("write-to",Rule(Var("t"),NoAnnoList(Op("FILE",[Var("name")])),Seq(AM(CallNoArgs(SVar("xtc-new-file")),Var("name")),BA(CallNoArgs(SVar("WriteToBinaryFile")),NoAnnoList(Tuple([Var("name"),Var("t")])))))),RDefNoArgs("write-to-text",Rule(Var("t"),NoAnnoList(Op("FILE",[Var("name")])),Seq(AM(CallNoArgs(SVar("xtc-new-file")),Var("name")),BA(CallNoArgs(SVar("WriteToTextFile")),NoAnnoList(Tuple([Var("name"),Var("t")])))))),RDefNoArgs("print-to",Rule(Var("strings"),NoAnnoList(Op("FILE",[Var("name")])),Seq(AM(CallNoArgs(SVar("xtc-new-file")),Var("name")),Seq(AM(BA(CallNoArgs(SVar("fopen")),NoAnnoList(Tuple([Var("name"),NoAnnoList(Str("\"w\""))]))),Var("stream")),Seq(CondChoice(BA(CallNoArgs(SVar("is-string")),Var("strings")),Build(NoAnnoList(List([Var("strings")]))),Build(Var("strings"))),Seq(BA(CallNoArgs(SVar("fprint")),NoAnnoList(Tuple([Var("stream"),RootApp(Id)]))),BA(CallNoArgs(SVar("fclose")),Var("stream")))))))),SDefNoArgs("xtc-find-file",Build(NoAnnoList(Op("FILE",[RootApp(CallNoArgs(SVar("xtc-find")))]))))]),Strategies([RDef("rename-to",[DefaultVarDec("name")],Rule(NoAnnoList(Op("FILE",[Var("oldname")])),NoAnnoList(Op("FILE",[Var("oldname")])),AM(CallNoArgs(SVar("name")),Var("oldname")))),RDef("rename-to",[DefaultVarDec("name")],Rule(NoAnnoList(Op("FILE",[Var("oldname")])),NoAnnoList(Op("FILE",[Var("newname")])),Seq(AM(CallNoArgs(SVar("name")),Var("newname")),Seq(Not(Choice(Call(SVar("stdout"),[]),Match(Var("oldname")))),BA(CallNoArgs(SVar("rename-file")),NoAnnoList(Tuple([Var("oldname"),Var("newname")]))))))),RDef("rename-to",[DefaultVarDec("name")],Rule(NoAnnoList(Op("FILE",[Var("oldname")])),NoAnnoList(Op("stdout",[])),Seq(AM(CallNoArgs(SVar("name")),NoAnnoList(Op("stdout",[]))),Seq(BA(CallNoArgs(SVar("copy-file")),NoAnnoList(Tuple([Var("oldname"),NoAnnoList(Op("stdout",[]))]))),BA(CallNoArgs(SVar("remove-file")),Var("oldname"))))))]),Strategies([RDef("copy-to",[DefaultVarDec("name")],Rule(NoAnnoList(Op("FILE",[Var("oldname")])),NoAnnoList(Op("FILE",[Var("oldname")])),AM(CallNoArgs(SVar("name")),Var("oldname")))),RDef("copy-to",[DefaultVarDec("name")],Rule(NoAnnoList(Op("FILE",[Var("oldname")])),NoAnnoList(Op("FILE",[Var("oldname")])),Seq(AM(CallNoArgs(SVar("name")),Var("newname")),Seq(Not(Choice(CallNoArgs(SVar("stdout")),Choice(CallNoArgs(SVar("stderr")),Match(Var("oldname"))))),BA(CallNoArgs(SVar("copy-file")),NoAnnoList(Tuple([Var("oldname"),Var("newname")]))))))),RDef("copy-to",[DefaultVarDec("name")],Rule(NoAnnoList(Op("FILE",[Var("oldname")])),NoAnnoList(Op("FILE",[Var("oldname")])),Seq(AM(CallNoArgs(SVar("name")),Var("file")),Seq(Choice(Call(SVar("stdout"),[]),Call(SVar("stderr"),[])),BA(CallNoArgs(SVar("copy-file")),NoAnnoList(Tuple([Var("oldname"),Var("file")])))))))]),Strategies([SDefNoArgs("xtc-ensure-file",Match(NoAnnoList(Op("FILE",[Wld])))),SDefNoArgs("xtc-ensure-file",Seq(Match(NoAnnoList(Op("stdin",[]))),Seq(Where(AM(BA(CallNoArgs(SVar("xtc-new-file")),NoAnnoList(Tuple([]))),Var("f"))),Seq(BA(CallNoArgs(SVar("copy-file")),NoAnnoList(Tuple([NoAnnoList(Op("stdin",[])),Var("f")]))),Build(NoAnnoList(Op("FILE",[Var("f")])))))))]),Strategies([SDefNoArgs("xtc-write-output",Seq(Match(NoAnnoList(Op("FILE",[Wld]))),Call(SVar("copy-to"),[LChoice(BA(CallNoArgs(SVar("get-config")),NoAnnoList(Str("\"-o\""))),Build(NoAnnoList(Op("stdout",[]))))]))),SDefNoArgs("xtc-write-output",Seq(Match(NoAnnoList(Op("stdin",[]))),BA(CallNoArgs(SVar("copy-file")),NoAnnoList(Tuple([NoAnnoList(Op("stdin",[])),App(LChoice(CallNoArgs(SVar("get-config")),Build(NoAnnoList(Op("stdout",[])))),NoAnnoList(Str("\"-o\"")))])))))]),Strategies([SDefNoArgs("xtc-remove-temporaries",Where(Seq(AM(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("XTC"),Var("TEMP")]))),Var("fs")),Call(SVar("map"),[Call(SVar("try"),[CallNoArgs(SVar("remove-file"))])])))),SDef("xtc-temp-files",[DefaultVarDec("s")],Seq(Call(SVar("begin-scope"),[Build(Var("TempFiles"))]),Call(SVar("restore-always"),[CallNoArgs(SVar("s")),Seq(Where(Seq(AM(LChoice(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("TempFiles"),Var("Scopes")]))),Build(NoAnnoList(List([NoAnnoList(List([]))])))),NoAnnoList(ListTail([Var("scope")],Var("scopes")))),BA(Call(SVar("map"),[Call(SVar("try"),[CallNoArgs(SVar("remove-file"))])]),Var("scope")))),Call(SVar("end-scope"),[Build(Var("TempFiles"))]))]))),SDefNoArgs("xtc-exit",Seq(Match(Var("status")),Seq(Call(SVar("repeat"),[Seq(Where(Seq(AM(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("TempFiles"),Var("Scopes")]))),NoAnnoList(ListTail([Var("scope")],Var("scopes")))),BA(Call(SVar("map"),[Call(SVar("try"),[CallNoArgs(SVar("remove-file"))])]),Var("scope")))),Call(SVar("end-scope"),[Build(Var("TempFiles"))]))]),CallNoArgs(SVar("exit"))))),SDef("xtc-io",[DefaultVarDec("s")],Call(SVar("xtc-temp-files"),[LChoice(Seq(LChoice(Build(NoAnnoList(Op("FILE",[App(CallNoArgs(SVar("get-config")),NoAnnoList(Str("\"-i\"")))]))),Build(NoAnnoList(Op("stdin",[])))),Seq(CallNoArgs(SVar("s")),CallNoArgs(SVar("xtc-write-output")))),Seq(PrimNoArgs("\"SSL_stacktrace_get_all_frame_names\""),Call(SVar("report-failure"),[CallNoArgs(SVar("xtc-exit"))])))])),SDefNoArgs("xtc-io-exit",Seq(CallNoArgs(SVar("xtc-write-output")),BA(CallNoArgs(SVar("xtc-exit")),NoAnnoList(Int("0"))))),SDef("xtc-input",[DefaultVarDec("s")],Call(SVar("xtc-temp-files"),[Seq(LChoice(Build(NoAnnoList(Op("FILE",[App(CallNoArgs(SVar("get-config")),NoAnnoList(Str("\"-i\"")))]))),Build(Var("stdin"))),CallNoArgs(SVar("s")))])),SDef("xtc-output",[DefaultVarDec("s")],Call(SVar("xtc-temp-files"),[Seq(CallNoArgs(SVar("s")),Call(SVar("copy-to"),[LChoice(BA(CallNoArgs(SVar("get-config")),NoAnnoList(Str("\"-o\""))),Build(Var("stdout")))]))])),SDef("xtc-io-wrap",[DefaultVarDec("s")],Call(SVar("xtc-io-wrap"),[Fail,CallNoArgs(SVar("s"))])),SDef("xtc-io-wrap",[DefaultVarDec("extra-opts"),DefaultVarDec("s")],Call(SVar("option-wrap"),[LChoice(CallNoArgs(SVar("extra-opts")),CallNoArgs(SVar("io-options"))),Call(SVar("xtc-io"),[CallNoArgs(SVar("s"))])])),SDef("xtc-io-wrap",[DefaultVarDec("extra-opts"),DefaultVarDec("deps"),DefaultVarDec("s")],Call(SVar("xtc-io-wrap"),[CallNoArgs(SVar("extra-opts")),CallNoArgs(SVar("system-usage")),CallNoArgs(SVar("system-about")),CallNoArgs(SVar("deps")),CallNoArgs(SVar("s"))])),SDef("xtc-io-wrap",[DefaultVarDec("extra-opts"),DefaultVarDec("usage"),DefaultVarDec("about"),DefaultVarDec("deps"),DefaultVarDec("s")],Call(SVar("option-wrap"),[LChoice(CallNoArgs(SVar("extra-opts")),LChoice(CallNoArgs(SVar("io-options")),Call(SVar("check-options"),[CallNoArgs(SVar("deps"))]))),CallNoArgs(SVar("usage")),CallNoArgs(SVar("about")),Id,Seq(CallNoArgs(SVar("xtc-check-dependencies")),Call(SVar("xtc-io"),[CallNoArgs(SVar("s"))]))])),SDef("xtc-iowrap",[DefaultVarDec("s")],Call(SVar("xtc-io-wrap"),[CallNoArgs(SVar("s"))])),SDef("xtc-iowrap",[DefaultVarDec("extra-opts"),DefaultVarDec("s")],Call(SVar("xtc-io-wrap"),[CallNoArgs(SVar("extra-opts")),CallNoArgs(SVar("s"))])),SDef("xtc-input-wrap",[DefaultVarDec("s")],Call(SVar("xtc-input-wrap"),[Fail,CallNoArgs(SVar("s"))])),SDef("xtc-input-wrap",[DefaultVarDec("extra-options"),DefaultVarDec("s")],Call(SVar("option-wrap"),[LChoice(CallNoArgs(SVar("extra-options")),CallNoArgs(SVar("input-options"))),Call(SVar("xtc-input"),[CallNoArgs(SVar("s"))])])),SDef("xtc-output-wrap",[DefaultVarDec("s")],Call(SVar("xtc-output-wrap"),[Fail,CallNoArgs(SVar("s"))])),SDef("xtc-output-wrap",[DefaultVarDec("extra-options"),DefaultVarDec("s")],Call(SVar("option-wrap"),[LChoice(CallNoArgs(SVar("extra-options")),CallNoArgs(SVar("output-options"))),Call(SVar("xtc-output"),[CallNoArgs(SVar("s"))])])),SDef("check-options",[DefaultVarDec("deps")],Call(SVar("Option"),[StrCong("\"--check\""),Where(BA(CallNoArgs(SVar("set-config")),NoAnnoList(Tuple([NoAnnoList(Str("\"--check\"")),RootApp(CallNoArgs(SVar("deps")))])))),Build(NoAnnoList(Str("\"--check        check tool dependencies\"")))])),SDefNoArgs("xtc-check-dependencies",IfThen(Assign(Var("check"),App(CallNoArgs(SVar("get-config")),NoAnnoList(Str("\"--check\"")))),Seq(BA(Call(SVar("filter"),[Not(CallNoArgs(SVar("xtc-find-silent")))]),Var("check")),CondChoice(Not(Match(NoAnnoList(List([])))),Seq(Call(SVar("debug"),[Build(NoAnnoList(Str("\"No XTC registration found for: \"")))]),BA(CallNoArgs(SVar("exit")),NoAnnoList(Int("1")))),Seq(BA(CallNoArgs(SVar("echo")),NoAnnoList(Str("\"All tools available\""))),BA(CallNoArgs(SVar("exit")),NoAnnoList(Int("0"))))))))]),Strategies([RDef("xtc-filter-text-file",[DefaultVarDec("more"),DefaultVarDec("done")],Rule(NoAnnoList(Op("FILE",[Var("f")])),NoAnnoList(Op("FILE",[Var("g")])),Seq(AM(BA(CallNoArgs(SVar("xtc-new-file")),Var("f")),Var("g")),BA(Call(SVar("filter-text-file"),[CallNoArgs(SVar("more")),CallNoArgs(SVar("done"))]),NoAnnoList(Tuple([Var("f"),Var("g")]))))))])])
