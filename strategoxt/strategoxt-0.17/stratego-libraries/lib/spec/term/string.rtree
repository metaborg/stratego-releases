Module("term/string",[Imports([Import("collection/list/common"),Import("strategy/conditional"),Import("strategy/iteration"),Import("system/io/file")]),Strategies([SDefNoArgs("new",PrimNoArgs("\"SSL_new\"")),SDefNoArgs("newname",Seq(Match(Var("prefix")),Prim("\"SSL_newname\"",[Var("prefix")]))),SDefNoArgs("is-string",Seq(Match(Var("x")),Prim("\"SSL_is_string\"",[Var("x")]))),SDefNoArgs("is-char",Seq(CallNoArgs(SVar("is-int")),CallNoArgs(SVar("is-ascii")))),SDefNoArgs("implode-string",Seq(Match(Var("x")),Prim("\"SSL_implode_string\"",[Var("x")]))),SDefNoArgs("explode-string",Seq(Match(Var("x")),Prim("\"SSL_explode_string\"",[Var("x")]))),SDef("string-as-chars",[DefaultVarDec("s")],Seq(CallNoArgs(SVar("explode-string")),Seq(CallNoArgs(SVar("s")),CallNoArgs(SVar("implode-string")))))]),Strategies([SDefNoArgs("conc-strings",LChoice(Seq(Match(NoAnnoList(Tuple([Wld,Wld]))),CallNoArgs(SVar("strcat"))),Seq(Match(NoAnnoList(Explode(NoAnnoList(Str("\"\"")),Var("xs")))),BA(CallNoArgs(SVar("concat-strings")),Var("xs"))))),SDefNoArgs("strcat",Seq(Match(NoAnnoList(Tuple([Var("str1"),Var("str2")]))),Prim("\"SSL_strcat\"",[Var("str1"),Var("str2")]))),SDefNoArgs("concat-strings",Seq(Match(Var("strings")),Prim("\"SSL_concat_strings\"",[Var("strings")])))]),Strategies([SDefNoArgs("string-length",CallNoArgs(SVar("strlen"))),SDefNoArgs("strlen",Seq(Match(Var("str")),Prim("\"SSL_strlen\"",[Var("str")])))]),Strategies([SDefNoArgs("escape",Call(SVar("string-as-chars"),[CallNoArgs(SVar("escape-chars"))])),SDefNoArgs("escape-chars",Call(SVar("escape-chars"),[CallNoArgs(SVar("Escape"))])),SDef("escape-chars",[DefaultVarDec("s")],Rec("x",LChoice(Seq(CallNoArgs(SVar("s")),ListCong([Id,Id],CallNoArgs(SVar("x")))),LChoice(ListCong([Id],CallNoArgs(SVar("x"))),ListCongNoTail([]))))),SDefNoArgs("unescape",Call(SVar("string-as-chars"),[CallNoArgs(SVar("unescape-chars"))])),SDef("unescape-chars",[DefaultVarDec("s")],Rec("x",Seq(Call(SVar("try"),[CallNoArgs(SVar("s"))]),LChoice(ListCong([Id],CallNoArgs(SVar("x"))),ListCongNoTail([]))))),SDefNoArgs("unescape-chars",Call(SVar("unescape-chars"),[CallNoArgs(SVar("UnEscape"))])),SDefNoArgs("Escape",Choice(CallNoArgs(SVar("Escape-double-quote")),Choice(CallNoArgs(SVar("Escape-backslash")),Choice(CallNoArgs(SVar("Escape-linefeed")),CallNoArgs(SVar("Escape-carriage-return")))))),RDefNoArgs("Escape-double-quote",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\"'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'\"'"))],Var("cs"))))),RDefNoArgs("Escape-single-quote",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\''"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'\\''"))],Var("cs"))))),RDefNoArgs("Escape-backslash",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'\\'"))],Var("cs"))))),RDefNoArgs("Escape-linefeed",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\n'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'n'"))],Var("cs"))))),RDefNoArgs("Escape-carriage-return",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\r'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'r'"))],Var("cs"))))),SDefNoArgs("UnEscape",Choice(CallNoArgs(SVar("UnEscape-double-quote")),Choice(CallNoArgs(SVar("UnEscape-backslash")),Choice(CallNoArgs(SVar("UnEscape-linefeed")),Choice(CallNoArgs(SVar("UnEscape-tab")),CallNoArgs(SVar("UnEscape-carriage-return"))))))),RDefNoArgs("UnEscape-double-quote",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'\"'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\"'"))],Var("cs"))))),RDefNoArgs("UnEscape-single-quote",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'\\''"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\''"))],Var("cs"))))),RDefNoArgs("UnEscape-backslash",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'\\'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'"))],Var("cs"))))),RDefNoArgs("UnEscape-carriage-return",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'r'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\r'"))],Var("cs"))))),RDefNoArgs("UnEscape-linefeed",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'n'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\n'"))],Var("cs"))))),RDefNoArgs("UnEscape-tab",RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),NoAnnoList(Char("'t'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\t'"))],Var("cs"))))),RDefT("UnEscape",[],[DefaultVarDec("c")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'")),Var("c")],Var("cs"))),NoAnnoList(ListTail([Var("c")],Var("cs")))))]),Strategies([SDef("escape",[VarDec("esc",FunType([FunType([ConstType(Sort("List",[SortNoArgs("String")]))],ConstType(Sort("List",[SortNoArgs("String")]))),ConstType(Sort("List",[SortNoArgs("String")]))],ConstType(Sort("List",[SortNoArgs("String")]))))],Seq(CallNoArgs(SVar("explode-string")),Seq(Rec("x",LChoice(Call(SVar("esc"),[CallNoArgs(SVar("x"))]),LChoice(ListCong([Id],CallNoArgs(SVar("x"))),ListCongNoTail([])))),CallNoArgs(SVar("implode-string"))))),SDefNoArgs("cify",Call(SVar("escape"),[CallNoArgs(SVar("Cify"))])),SDefNoArgs("uncify",Call(SVar("escape"),[CallNoArgs(SVar("UnCify"))])),SDef("UnCify",[DefaultVarDec("x")],LChoice(Call(SVar("UnCify1"),[CallNoArgs(SVar("x"))]),LChoice(Call(SVar("UnCify2"),[CallNoArgs(SVar("x"))]),Call(SVar("UnCify3"),[CallNoArgs(SVar("x"))]))))]),Rules([RDef("Cify",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\''"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'p'")),NoAnnoList(Char("'_'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("Cify",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'-'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'_'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("Cify",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'_'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'_'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("Cify",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\"'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'q'")),NoAnnoList(Char("'_'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("Cify",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'b'")),NoAnnoList(Char("'_'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("UnCify1",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'b'")),NoAnnoList(Char("'_'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("UnCify1",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'q'")),NoAnnoList(Char("'_'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\"'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("UnCify1",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'p'")),NoAnnoList(Char("'_'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'\\''"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("UnCify2",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'_'")),NoAnnoList(Char("'_'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'_'"))],App(CallNoArgs(SVar("x")),Var("cs")))))),RDef("UnCify3",[DefaultVarDec("x")],RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'_'"))],Var("cs"))),NoAnnoList(ListTail([NoAnnoList(Char("'-'"))],App(CallNoArgs(SVar("x")),Var("cs"))))))]),Strategies([SDef("quote",[DefaultVarDec("c")],Call(SVar("string-as-chars"),[Call(SVar("quote-chars"),[CallNoArgs(SVar("c"))])])),SDef("quote-chars",[DefaultVarDec("c")],BA(CallNoArgs(SVar("quote-chars")),NoAnnoList(Tuple([App(CallNoArgs(SVar("c")),NoAnnoList(Tuple([]))),RootApp(Id)])))),RDefNoArgs("quote-chars",RuleNoCond(NoAnnoList(Tuple([Var("c"),Var("chars")])),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([NoAnnoList(ListTail([Var("c")],Var("chars"))),NoAnnoList(List([Var("c")]))]))))),SDefNoArgs("single-quote-chars",BA(CallNoArgs(SVar("quote-chars")),NoAnnoList(Tuple([NoAnnoList(Char("'\\''")),RootApp(Id)])))),SDefNoArgs("double-quote-chars",BA(CallNoArgs(SVar("quote-chars")),NoAnnoList(Tuple([NoAnnoList(Char("'\"'")),RootApp(Id)])))),SDefNoArgs("single-quote",Call(SVar("string-as-chars"),[CallNoArgs(SVar("single-quote-chars"))])),SDefNoArgs("double-quote",Call(SVar("string-as-chars"),[CallNoArgs(SVar("double-quote-chars"))]))]),Strategies([SDef("unquote",[DefaultVarDec("s")],Call(SVar("string-as-chars"),[Call(SVar("unquote-chars"),[CallNoArgs(SVar("s"))])])),SDef("unquote",[DefaultVarDec("s1"),DefaultVarDec("s2")],Call(SVar("string-as-chars"),[Call(SVar("unquote-chars"),[CallNoArgs(SVar("s1")),CallNoArgs(SVar("s2"))])])),SDef("unquote-chars",[DefaultVarDec("s")],Call(SVar("unquote-chars"),[CallNoArgs(SVar("s")),CallNoArgs(SVar("s"))])),SDef("unquote-chars",[DefaultVarDec("s1"),DefaultVarDec("s2")],Seq(Where(Seq(CallNoArgs(SVar("Hd")),CallNoArgs(SVar("s1")))),Seq(Where(Seq(CallNoArgs(SVar("last")),CallNoArgs(SVar("s2")))),Seq(CallNoArgs(SVar("Tl")),CallNoArgs(SVar("init")))))),SDefNoArgs("un-single-quote-chars",Call(SVar("unquote-chars"),[Match(NoAnnoList(Char("'\\''")))])),SDefNoArgs("un-double-quote-chars",Call(SVar("unquote-chars"),[Match(NoAnnoList(Char("'\"'")))])),SDefNoArgs("un-single-quote",Call(SVar("string-as-chars"),[CallNoArgs(SVar("un-single-quote-chars"))])),SDefNoArgs("un-double-quote",Call(SVar("string-as-chars"),[CallNoArgs(SVar("un-double-quote-chars"))]))]),Strategies([SDefNoArgs("is-double-quoted",CallT(SVar("is-quoted"),[],[NoAnnoList(Char("'\"'"))])),SDefNoArgs("is-single-quoted",CallT(SVar("is-quoted"),[],[NoAnnoList(Char("'\\''"))])),SDefNoArgs("is-double-quoted-chars",CallT(SVar("is-quoted-chars"),[],[NoAnnoList(Char("'\"'"))])),SDefNoArgs("is-single-quoted-chars",CallT(SVar("is-quoted-chars"),[],[NoAnnoList(Char("'\\''"))])),SDefT("is-quoted",[],[DefaultVarDec("c")],Where(Seq(CallNoArgs(SVar("explode-string")),CallT(SVar("is-quoted-chars"),[],[Var("c")])))),SDefT("is-quoted-chars",[],[DefaultVarDec("c")],Where(Seq(Match(NoAnnoList(ListTail([Var("c")],RootApp(CallNoArgs(SVar("last")))))),Match(Var("c")))))]),Strategies([SDefNoArgs("string-to-num",Seq(Call(SVar("obsolete"),[Build(NoAnnoList(Str("\"string-to-num; use string-to-int\"")))]),CallNoArgs(SVar("string-to-int"))))]),Strategies([SDefNoArgs("lower-case",Call(SVar("string-as-chars"),[CallNoArgs(SVar("lower-case-chars"))])),SDefNoArgs("upper-case",Call(SVar("string-as-chars"),[CallNoArgs(SVar("upper-case-chars"))])),SDefNoArgs("lower-case-chars",Call(SVar("map"),[CallNoArgs(SVar("to-lower"))])),SDefNoArgs("upper-case-chars",Call(SVar("map"),[CallNoArgs(SVar("to-upper"))]))]),Strategies([SDefT("string-tokenize",[],[DefaultVarDec("sepchars")],Call(SVar("string-tokenize"),[Scope(["c"],Seq(Match(Var("c")),BA(Call(SVar("fetch"),[Match(Var("c"))]),Var("sepchars"))))])),SDef("string-tokenize",[DefaultVarDec("sep")],Seq(CallNoArgs(SVar("explode-string")),Seq(Call(SVar("list-tokenize"),[CallNoArgs(SVar("sep"))]),Call(SVar("map"),[CallNoArgs(SVar("implode-string"))])))),SDefNoArgs("string-tokenize",Seq(Match(NoAnnoList(Tuple([Var("sepchars"),RootApp(Id)]))),CallT(SVar("string-tokenize"),[],[Var("sepchars")])))]),Strategies([SDef("padd-with",[DefaultVarDec("s")],BA(CallNoArgs(SVar("align-right")),NoAnnoList(Tuple([App(CallNoArgs(SVar("s")),NoAnnoList(Tuple([]))),RootApp(CallNoArgs(SVar("Fst"))),RootApp(CallNoArgs(SVar("Snd")))])))),RDefNoArgs("align-right",Rule(NoAnnoList(Tuple([Var("c"),Var("s"),Var("n")])),App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("add"),Var("s")]))),AM(BA(CallT(SVar("align-helper"),[],[Var("c"),Var("n")]),Var("s")),Var("add")))),RDefNoArgs("align-left",Rule(NoAnnoList(Tuple([Var("c"),Var("s"),Var("n")])),App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("s"),Var("add")]))),AM(BA(CallT(SVar("align-helper"),[],[Var("c"),Var("n")]),Var("s")),Var("add")))),RDefNoArgs("align-center",Rule(NoAnnoList(Tuple([Var("c"),Var("s"),Var("n")])),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("add-before"),Var("s"),Var("add-after")]))),Seq(AM(BA(CallNoArgs(SVar("string-length")),Var("s")),Var("l")),Seq(AM(BA(CallNoArgs(SVar("subt")),NoAnnoList(Tuple([Var("n"),Var("l")]))),Var("whitespace")),Seq(AM(BA(GuardedLChoice(CallNoArgs(SVar("even")),Seq(CallNoArgs(SVar("div2")),CallNoArgs(SVar("Dupl"))),Seq(CallNoArgs(SVar("dec")),Seq(CallNoArgs(SVar("div2")),Seq(CallNoArgs(SVar("Dupl")),TupleCong(CallNoArgs(SVar("inc")),[Id]))))),Var("whitespace")),NoAnnoList(Tuple([Var("before"),Var("after")]))),Seq(AM(BA(CallT(SVar("align-helper"),[],[Var("c"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("l"),Var("before")])))]),Var("s")),Var("add-before")),AM(BA(CallT(SVar("align-helper"),[],[Var("c"),App(CallNoArgs(SVar("add")),NoAnnoList(Tuple([Var("l"),Var("after")])))]),Var("s")),Var("add-after")))))))),SDefT("align-helper",[],[DefaultVarDec("c"),DefaultVarDec("n")],Seq(CallNoArgs(SVar("string-length")),Seq(BA(CallNoArgs(SVar("subt")),NoAnnoList(Tuple([Var("n"),RootApp(Id)]))),CondChoice(CallNoArgs(SVar("pos")),BA(CallNoArgs(SVar("copy-char")),NoAnnoList(Tuple([RootApp(Id),Var("c")]))),Build(NoAnnoList(Str("\"\""))))))),SDefNoArgs("div2",BA(CallNoArgs(SVar("div")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("2"))]))))]),Rules([RDefNoArgs("SplitInit",RuleNoCond(Var("x"),NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(List([])),Var("x")])))),RDefNoArgs("SplitExit",RuleNoCond(NoAnnoList(Tuple([Var("xs"),Var("cs"),NoAnnoList(List([]))])),App(CallNoArgs(SVar("reverse")),NoAnnoList(ListTail([App(Seq(CallNoArgs(SVar("reverse")),CallNoArgs(SVar("implode-string"))),Var("cs"))],Var("xs")))))),RDefNoArgs("SplitNext",RuleNoCond(NoAnnoList(Tuple([Var("xs"),Var("cs"),NoAnnoList(ListTail([NoAnnoList(Int("32"))],Var("ys")))])),NoAnnoList(Tuple([NoAnnoList(ListTail([App(Seq(CallNoArgs(SVar("reverse")),CallNoArgs(SVar("implode-string"))),Var("cs"))],Var("xs"))),NoAnnoList(List([])),Var("ys")])))),RDefNoArgs("SplitNext",Rule(NoAnnoList(Tuple([Var("xs"),Var("cs"),NoAnnoList(ListTail([Var("y")],Var("ys")))])),NoAnnoList(Tuple([Var("xs"),NoAnnoList(ListTail([Var("y")],Var("cs"))),Var("ys")])),BA(Not(CallNoArgs(SVar("eq"))),NoAnnoList(Tuple([Var("y"),NoAnnoList(Int("32"))])))))]),Strategies([SDefNoArgs("split-at-space",Seq(CallNoArgs(SVar("explode-string")),Seq(CallNoArgs(SVar("SplitInit")),Rec("x",LChoice(CallNoArgs(SVar("SplitExit")),Seq(CallNoArgs(SVar("SplitNext")),CallNoArgs(SVar("x")))))))),SDefNoArgs("split-at-dot",Seq(Call(SVar("split"),[Build(NoAnnoList(List([]))),CallNoArgs(SVar("explode-string"))]),Seq(Rec("r",LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([Var("int"),NoAnnoList(ListTail([NoAnnoList(Int("46"))],Var("frac")))])),NoAnnoList(Tuple([Var("int"),Var("frac")])))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([Var("int"),NoAnnoList(ListTail([Var("i")],Var("rest")))])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([App(Call(SVar("at-end"),[Build(NoAnnoList(List([Var("i")])))]),Var("int")),Var("rest")]))))),TupleCong(Id,[CallNoArgs(SVar("Nil"))])))),TupleCong(CallNoArgs(SVar("implode-string")),[CallNoArgs(SVar("implode-string"))])))),SDefNoArgs("split-before",Seq(Match(NoAnnoList(Tuple([Var("l"),Var("sub")]))),Seq(AM(BA(CallNoArgs(SVar("explode-string")),Var("sub")),Var("sub'")),Seq(BA(CallNoArgs(SVar("explode-string")),Var("l")),Seq(LRule(RuleNoCond(Var("x"),NoAnnoList(Tuple([NoAnnoList(List([])),Var("x")])))),Seq(Rec("r",LChoice(LRule(Rule(As(Var("x"),NoAnnoList(Tuple([Wld,Var("x'")]))),Var("x"),BA(CallNoArgs(SVar("left-match")),NoAnnoList(Tuple([Var("x'"),Var("sub'")]))))),LRule(RuleNoCond(NoAnnoList(Tuple([Var("x'"),NoAnnoList(ListTail([Var("x")],Var("xs")))])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([App(Call(SVar("at-end"),[Build(NoAnnoList(List([Var("x")])))]),Var("x'")),Var("xs")]))))))),TupleCong(CallNoArgs(SVar("implode-string")),[CallNoArgs(SVar("implode-string"))]))))))),SDefNoArgs("split-after",Seq(Match(NoAnnoList(Tuple([Var("l"),Var("sub")]))),Seq(AM(BA(CallNoArgs(SVar("explode-string")),Var("sub")),Var("sub'")),Seq(BA(CallNoArgs(SVar("explode-string")),Var("l")),Seq(LRule(RuleNoCond(Var("x"),NoAnnoList(Tuple([NoAnnoList(List([])),Var("x")])))),Seq(Rec("r",LChoice(TupleCong(Id,[ListCongNoTail([])]),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([Var("x"),Var("x'")])),NoAnnoList(Tuple([App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("x"),Var("sub'")]))),App(CallNoArgs(SVar("left-match")),NoAnnoList(Tuple([Var("x'"),Var("sub'")])))])))),LRule(RuleNoCond(NoAnnoList(Tuple([Var("x'"),NoAnnoList(ListTail([Var("x")],Var("xs")))])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([App(Call(SVar("at-end"),[Build(NoAnnoList(List([Var("x")])))]),Var("x'")),Var("xs")])))))))),TupleCong(CallNoArgs(SVar("implode-string")),[CallNoArgs(SVar("implode-string"))]))))))),SDef("is-substring",[DefaultVarDec("s")],Seq(CallNoArgs(SVar("explode-string")),Seq(Match(Var("long")),Seq(CallNoArgs(SVar("s")),Seq(AM(CallNoArgs(SVar("explode-string")),Var("sub")),LChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("sub"),Var("long")]))),BA(Rec("r",Scope(["a","xs"],Seq(Match(As(Var("a"),NoAnnoList(ListTail([Wld],Var("xs"))))),LChoice(BA(CallNoArgs(SVar("left-match")),NoAnnoList(Tuple([Var("a"),Var("sub")]))),BA(CallNoArgs(SVar("r")),Var("xs")))))),Var("long")))))))),SDefNoArgs("copy-char",Seq(CallNoArgs(SVar("copy")),CallNoArgs(SVar("implode-string")))),SDefNoArgs("string-sort",Seq(Call(SVar("map"),[CallNoArgs(SVar("explode-string"))]),Seq(Call(SVar("qsort"),[CallNoArgs(SVar("string-lt"))]),Call(SVar("map"),[CallNoArgs(SVar("implode-string"))])))),SDefNoArgs("string-sort-desc",Seq(Call(SVar("map"),[CallNoArgs(SVar("explode-string"))]),Seq(Call(SVar("qsort"),[CallNoArgs(SVar("string-gt"))]),Call(SVar("map"),[CallNoArgs(SVar("implode-string"))]))))]),Strategies([SDefNoArgs("string-gt",Seq(Call(SVar("try"),[TupleCong(CallNoArgs(SVar("explode-string")),[CallNoArgs(SVar("explode-string"))])]),Seq(CallNoArgs(SVar("strcasecmp")),Match(NoAnnoList(Int("1")))))),SDefNoArgs("string-lt",Seq(Call(SVar("try"),[TupleCong(CallNoArgs(SVar("explode-string")),[CallNoArgs(SVar("explode-string"))])]),Seq(CallNoArgs(SVar("strcasecmp")),Match(NoAnnoList(Int("-1")))))),SDefT("string-starts-with",[],[DefaultVarDec("start")],Where(BA(CallNoArgs(SVar("left-match")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("explode-string"))),App(CallNoArgs(SVar("explode-string")),Var("start"))]))))),SDefT("string-ends-with",[],[DefaultVarDec("end")],Where(BA(CallNoArgs(SVar("right-match")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("explode-string"))),App(CallNoArgs(SVar("explode-string")),Var("end"))]))))),SDefNoArgs("left-match",Seq(Rec("r",LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("l")],Var("ls"))),NoAnnoList(ListTail([Var("l")],Var("rs")))])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([Var("ls"),Var("rs")]))))),TupleCong(Id,[ListCongNoTail([])]))),CallNoArgs(SVar("Fst")))),SDefNoArgs("right-match",Seq(TupleCong(CallNoArgs(SVar("reverse")),[CallNoArgs(SVar("reverse"))]),Seq(CallNoArgs(SVar("left-match")),CallNoArgs(SVar("reverse"))))),SDefNoArgs("strcmp",Rec("r",LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("x")],Var("xs"))),NoAnnoList(ListTail([Var("x")],Var("ys")))])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([Var("xs"),Var("ys")]))))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(List([]))])),NoAnnoList(Int("0")))),LChoice(LRule(Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("x")],Wld)),NoAnnoList(ListTail([Var("y")],Wld))])),NoAnnoList(Int("-1")),BA(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([Var("x"),Var("y")]))))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(ListTail([Wld],Wld))])),NoAnnoList(Int("-1")))),Build(NoAnnoList(Int("1"))))))))),SDefNoArgs("strncmp",Rec("r",LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([Wld,Wld,NoAnnoList(Int("0"))])),NoAnnoList(Int("0")))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("x")],Var("xs"))),NoAnnoList(ListTail([Var("x")],Var("ys"))),Var("i")])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([Var("xs"),Var("ys"),App(CallNoArgs(SVar("subt")),NoAnnoList(Tuple([Var("i"),NoAnnoList(Int("1"))])))]))))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(List([])),Wld])),NoAnnoList(Int("0")))),LChoice(LRule(Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("x")],Wld)),NoAnnoList(ListTail([Var("y")],Wld)),Wld])),NoAnnoList(Int("-1")),BA(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([Var("x"),Var("y")]))))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(ListTail([Wld],Wld)),Wld])),NoAnnoList(Int("-1")))),Build(NoAnnoList(Int("1")))))))))),SDefNoArgs("strcasecmp",Rec("r",LChoice(LRule(Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("x")],Var("xs"))),NoAnnoList(ListTail([Var("y")],Var("ys")))])),App(CallNoArgs(SVar("r")),NoAnnoList(Tuple([Var("xs"),Var("ys")]))),BA(Call(SVar("case-char"),[CallNoArgs(SVar("eq"))]),NoAnnoList(Tuple([Var("x"),Var("y")]))))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(List([]))])),NoAnnoList(Int("0")))),LChoice(LRule(Rule(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("x")],Wld)),NoAnnoList(ListTail([Var("y")],Wld))])),NoAnnoList(Int("-1")),BA(Call(SVar("case-char"),[CallNoArgs(SVar("lt"))]),NoAnnoList(Tuple([Var("x"),Var("y")]))))),LChoice(LRule(RuleNoCond(NoAnnoList(Tuple([NoAnnoList(List([])),NoAnnoList(ListTail([Wld],Wld))])),NoAnnoList(Int("-1")))),Build(NoAnnoList(Int("1")))))))))]),Strategies([SDefT("string-tokenize-keep-empty",[],[DefaultVarDec("sepChars")],Seq(CallNoArgs(SVar("explode-string")),Seq(Rec("x",LChoice(Seq(Call(SVar("split-fetch"),[BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([RootApp(Id),Var("sepChars")])))]),LRule(RuleNoCond(NoAnnoList(Tuple([Var("tchars"),Var("cs")])),NoAnnoList(ListTail([Var("tchars")],App(CallNoArgs(SVar("x")),Var("cs"))))))),Build(NoAnnoList(List([RootApp(Id)]))))),Call(SVar("map"),[CallNoArgs(SVar("implode-string"))])))),SDefT("string-tokenize-keep-all",[],[DefaultVarDec("sepChars")],Seq(CallNoArgs(SVar("explode-string")),Seq(Rec("x",LChoice(Seq(Call(SVar("split-fetch-keep"),[Where(BA(CallNoArgs(SVar("elem")),NoAnnoList(Tuple([RootApp(Id),Var("sepChars")]))))]),LRule(RuleNoCond(NoAnnoList(Tuple([Var("tchars"),Var("s"),Var("cs")])),NoAnnoList(ListTail([Var("tchars")],NoAnnoList(ListTail([NoAnnoList(List([Var("s")]))],App(CallNoArgs(SVar("x")),Var("cs"))))))))),Build(NoAnnoList(List([RootApp(Id)]))))),Call(SVar("map"),[CallNoArgs(SVar("implode-string"))])))),SDefNoArgs("get-lines",Seq(CallNoArgs(SVar("explode-string")),Seq(Let([SDefNoArgs("split-at-newlines",Scope(["tl"],LChoice(Seq(Call(SVar("at-suffix"),[LChoice(SRule(RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\n'"))],Var("tl"))),NoAnnoList(List([])))),LChoice(SRule(RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\r'")),NoAnnoList(Char("'\\n'"))],Var("tl"))),NoAnnoList(List([])))),SRule(RuleNoCond(NoAnnoList(ListTail([NoAnnoList(Char("'\\r'"))],Var("tl"))),NoAnnoList(List([]))))))]),Build(NoAnnoList(ListTail([RootApp(Id)],App(CallNoArgs(SVar("split-at-newlines")),Var("tl")))))),Build(NoAnnoList(List([RootApp(Id)]))))))],CallNoArgs(SVar("split-at-newlines"))),Call(SVar("map"),[CallNoArgs(SVar("implode-string"))])))),SDef("all-lines",[DefaultVarDec("s")],Seq(CallNoArgs(SVar("is-string")),Seq(CallT(SVar("string-tokenize-keep-empty"),[],[NoAnnoList(List([NoAnnoList(Char("'\\n'"))]))]),Seq(Call(SVar("at-last"),[GuardedLChoice(LRule(RuleNoCond(NoAnnoList(List([NoAnnoList(Str("\"\""))])),NoAnnoList(List([])))),Where(AM(Build(NoAnnoList(List([NoAnnoList(Str("\"\\n\""))]))),Var("laststring"))),Where(AM(Build(NoAnnoList(List([]))),Var("laststring"))))]),Seq(Call(SVar("map"),[CallNoArgs(SVar("s"))]),Seq(BA(CallNoArgs(SVar("separate-by")),NoAnnoList(Tuple([NoAnnoList(Str("\"\\n\"")),RootApp(Id)]))),Seq(BA(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([RootApp(Id),Var("laststring")]))),CallNoArgs(SVar("concat-strings"))))))))),SDefNoArgs("lines",Seq(Call(SVar("separate-by"),[Build(NoAnnoList(Str("\"\\n\"")))]),Seq(BA(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(List([NoAnnoList(Str("\"\\n\""))]))]))),CallNoArgs(SVar("concat-strings"))))),SDefT("indent-text",[],[DefaultVarDec("n")],Seq(Where(AM(BA(CallNoArgs(SVar("copy-char")),NoAnnoList(Tuple([Var("n"),NoAnnoList(Char("' '"))]))),Var("prefix"))),CallT(SVar("prefix-lines"),[],[Var("prefix")]))),SDefT("prefix-lines",[],[DefaultVarDec("p")],Call(SVar("all-lines"),[BA(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("p"),RootApp(Id)])))]))]),Strategies([SDef("ltrim-chars",[DefaultVarDec("s")],Call(SVar("string-as-chars"),[Call(SVar("ltrim"),[CallNoArgs(SVar("s"))])])),SDef("rtrim-chars",[DefaultVarDec("s")],Call(SVar("string-as-chars"),[Call(SVar("rtrim"),[CallNoArgs(SVar("s"))])])),SDef("trim-chars",[DefaultVarDec("s")],Call(SVar("string-as-chars"),[Call(SVar("trim"),[CallNoArgs(SVar("s"))])])),SDefNoArgs("is-whitespace",Test(Choice(CharCong("'\\t'"),CharCong("' '")))),SDefNoArgs("trim-trailing-whitespace",Call(SVar("rtrim-chars"),[CallNoArgs(SVar("is-whitespace"))])),SDefNoArgs("trim-leading-whitespace",Call(SVar("ltrim-chars"),[CallNoArgs(SVar("is-whitespace"))])),SDefNoArgs("trim-whitespace",Call(SVar("trim-chars"),[CallNoArgs(SVar("is-whitespace"))]))]),Strategies([SDefNoArgs("shuffle-forced",LChoice(Seq(Where(Seq(CallNoArgs(SVar("length")),BA(CallNoArgs(SVar("gt")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("1"))]))))),Seq(Where(Call(SVar("at-suffix"),[Seq(Match(NoAnnoList(ListTail([Var("x"),Var("y")],Var("xs")))),Where(Not(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("x"),Var("y")]))))))])),Rec("x",Scope(["orig"],Seq(Match(Var("orig")),Seq(CallNoArgs(SVar("shuffle")),GuardedLChoice(Where(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("orig"),RootApp(Id)])))),CallNoArgs(SVar("x")),Id))))))),Id)),SDefNoArgs("shuffle",Seq(Where(CallNoArgs(SVar("is-list"))),Seq(Call(SVar("map"),[Build(NoAnnoList(Tuple([App(CallNoArgs(SVar("next-random")),NoAnnoList(Tuple([]))),RootApp(Id)])))]),Seq(Call(SVar("sort-list"),[Call(SVar("SortL"),[Seq(TupleCong(CallNoArgs(SVar("Fst")),[CallNoArgs(SVar("Fst"))]),CallNoArgs(SVar("gt")))])]),Call(SVar("map"),[CallNoArgs(SVar("Snd"))]))))),SDefNoArgs("shuffle-word-mids",Seq(CallT(SVar("string-tokenize-keep-all"),[],[NoAnnoList(List([NoAnnoList(Char("' '")),NoAnnoList(Char("'.'")),NoAnnoList(Char("','"))]))]),Seq(Call(SVar("map"),[CallNoArgs(SVar("shuffle-word-mid"))]),CallNoArgs(SVar("concat-strings"))))),SDefNoArgs("shuffle-word-mid",Seq(Where(CallNoArgs(SVar("is-string"))),LChoice(Where(Seq(CallNoArgs(SVar("strlen")),BA(CallNoArgs(SVar("lt")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("3"))]))))),Seq(CallNoArgs(SVar("explode-string")),Seq(Match(NoAnnoList(ListTail([Var("i")],Var("cs")))),Seq(BA(CallNoArgs(SVar("reverse")),Var("cs")),Seq(Match(NoAnnoList(ListTail([Var("l")],Var("mid")))),Seq(Where(AM(BA(Seq(CallNoArgs(SVar("shuffle-forced")),CallNoArgs(SVar("reverse"))),Var("mid")),Var("shuffledmid"))),BA(Seq(CallNoArgs(SVar("concat")),CallNoArgs(SVar("implode-string"))),NoAnnoList(List([NoAnnoList(List([Var("i")])),Var("shuffledmid"),NoAnnoList(List([Var("l")]))])))))))))))]),Strategies([SDefNoArgs("is-alphanum",Choice(CallNoArgs(SVar("is-num")),CallNoArgs(SVar("is-alpha")))),SDefNoArgs("is-alpha",Choice(CallNoArgs(SVar("is-upper")),CallNoArgs(SVar("is-lower")))),SDefNoArgs("is-hexnum",Seq(CallNoArgs(SVar("is-char")),Choice(CallNoArgs(SVar("is-num")),Choice(Where(BA(CallNoArgs(SVar("leq-leq")),NoAnnoList(Tuple([NoAnnoList(Char("'a'")),RootApp(Id),NoAnnoList(Char("'f'"))])))),Where(BA(CallNoArgs(SVar("leq-leq")),NoAnnoList(Tuple([NoAnnoList(Char("'A'")),RootApp(Id),NoAnnoList(Char("'F'"))])))))))),SDefNoArgs("is-num",Where(BA(CallNoArgs(SVar("leq-leq")),NoAnnoList(Tuple([NoAnnoList(Char("'0'")),RootApp(Id),NoAnnoList(Char("'9'"))]))))),SDefNoArgs("is-upper",Where(BA(CallNoArgs(SVar("leq-leq")),NoAnnoList(Tuple([NoAnnoList(Char("'A'")),RootApp(Id),NoAnnoList(Char("'Z'"))]))))),SDefNoArgs("is-lower",Where(BA(CallNoArgs(SVar("leq-leq")),NoAnnoList(Tuple([NoAnnoList(Char("'a'")),RootApp(Id),NoAnnoList(Char("'z'"))]))))),SDefNoArgs("is-ascii",Where(BA(CallNoArgs(SVar("leq-leq")),NoAnnoList(Tuple([NoAnnoList(Int("32")),RootApp(Id),NoAnnoList(Int("127"))]))))),SDef("case-char",[DefaultVarDec("s")],Seq(TupleCong(CallNoArgs(SVar("to-upper")),[CallNoArgs(SVar("to-upper"))]),CallNoArgs(SVar("s")))),SDefNoArgs("to-upper",GuardedLChoice(CallNoArgs(SVar("is-lower")),BA(CallNoArgs(SVar("subt")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("32"))]))),Id)),SDefNoArgs("to-lower",GuardedLChoice(CallNoArgs(SVar("is-upper")),BA(CallNoArgs(SVar("add")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Int("32"))]))),Id)),SDefT("string-replace",[],[DefaultVarDec("old"),DefaultVarDec("new")],Seq(Build(NoAnnoList(Tuple([NoAnnoList(List([])),RootApp(CallNoArgs(SVar("explode-string"))),App(CallNoArgs(SVar("explode-string")),Var("old"))]))),Seq(CallT(SVar("internal-string-replace"),[],[App(CallNoArgs(SVar("explode-string")),Var("old")),App(Seq(CallNoArgs(SVar("explode-string")),CallNoArgs(SVar("reverse"))),Var("new"))]),Seq(CallNoArgs(SVar("reverse")),CallNoArgs(SVar("implode-string"))))))]),Strategies([SDefT("internal-string-replace",[],[DefaultVarDec("old"),DefaultVarDec("new")],Seq(Match(NoAnnoList(Tuple([Var("pre"),NoAnnoList(ListTail([Var("hd")],Var("tl"))),Var("cur")]))),LChoice(Seq(AM(Build(Var("cur")),NoAnnoList(ListTail([Var("hd")],Var("ctl")))),Seq(Build(NoAnnoList(Tuple([Var("pre"),Var("tl"),Var("ctl")]))),Seq(CallT(SVar("internal-string-replace-found"),[],[Var("old"),Var("new")]),CallT(SVar("internal-string-replace"),[],[Var("old"),Var("new")])))),Seq(Build(NoAnnoList(Tuple([NoAnnoList(ListTail([Var("hd")],Var("pre"))),Var("tl"),Var("cur")]))),CallT(SVar("internal-string-replace"),[],[Var("old"),Var("new")]))))),RDefT("internal-string-replace",[],[DefaultVarDec("old"),DefaultVarDec("new")],RuleNoCond(NoAnnoList(Tuple([Var("pre"),NoAnnoList(List([])),Wld])),Var("pre"))),SDefT("internal-string-replace-found",[],[DefaultVarDec("old"),DefaultVarDec("new")],Seq(Match(NoAnnoList(Tuple([Var("pre"),NoAnnoList(ListTail([Var("hd")],Var("tl"))),Var("cur")]))),Seq(AM(Build(Var("cur")),NoAnnoList(ListTail([Var("hd")],Var("ctl")))),Seq(Build(NoAnnoList(Tuple([Var("pre"),Var("tl"),Var("ctl")]))),CallT(SVar("internal-string-replace-found"),[],[Var("old"),Var("new")]))))),RDefT("internal-string-replace-found",[],[DefaultVarDec("old"),DefaultVarDec("new")],RuleNoCond(NoAnnoList(Tuple([Var("pre"),Var("rest"),NoAnnoList(List([]))])),NoAnnoList(Tuple([App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("new"),Var("pre")]))),Var("rest"),Var("old")]))))])])
