Module("system/posix/pipe-abstractions",[Imports([Import("system/posix/file"),Import("system/posix/process")]),Strategies([SDefNoArgs("close-pipe",Where(Seq(Match(NoAnnoList(Op("Pipe",[Var("fd1"),Var("fd2")]))),Seq(BA(CallNoArgs(SVar("close")),Var("fd1")),BA(CallNoArgs(SVar("close")),Var("fd2")))))),SDefNoArgs("stdin-from-pipe",Where(Seq(Match(NoAnnoList(Op("Pipe",[Var("fd1"),Var("fd2")]))),Seq(BA(CallNoArgs(SVar("dup2")),NoAnnoList(Tuple([Var("fd1"),RootApp(CallNoArgs(SVar("STDIN_FILENO")))]))),BA(CallNoArgs(SVar("close")),Var("fd2")))))),RDefNoArgs("file-from-pipe",Rule(NoAnnoList(Op("Pipe",[Var("fd1"),Var("fd2")])),Var("file"),Seq(AM(BA(CallNoArgs(SVar("fdopen")),NoAnnoList(Tuple([Var("fd1"),NoAnnoList(Str("\"r\""))]))),Var("file")),BA(CallNoArgs(SVar("close")),Var("fd2"))))),SDefNoArgs("stdout-to-pipe",Where(Seq(Match(NoAnnoList(Op("Pipe",[Var("fd1"),Var("fd2")]))),Seq(BA(CallNoArgs(SVar("dup2")),NoAnnoList(Tuple([Var("fd2"),RootApp(CallNoArgs(SVar("STDOUT_FILENO")))]))),BA(CallNoArgs(SVar("close")),Var("fd1")))))),RDefNoArgs("file-to-pipe",Rule(NoAnnoList(Op("Pipe",[Var("fd1"),Var("fd2")])),Var("file"),Seq(AM(BA(CallNoArgs(SVar("fdopen")),NoAnnoList(Tuple([Var("fd2"),NoAnnoList(Str("\"w\""))]))),Var("file")),BA(CallNoArgs(SVar("close")),Var("fd1"))))),SDefNoArgs("write-term-to-text-pipe",Where(Seq(Match(NoAnnoList(Tuple([Var("p"),Var("t")]))),Seq(AM(BA(CallNoArgs(SVar("file-to-pipe")),Var("p")),Var("outfile")),Seq(BA(CallNoArgs(SVar("fprint")),NoAnnoList(Tuple([Var("outfile"),NoAnnoList(List([Var("t")]))]))),BA(CallNoArgs(SVar("fclose")),Var("outfile"))))))),RDefNoArgs("read-term-from-pipe",Rule(Var("p"),Var("t"),Seq(AM(BA(CallNoArgs(SVar("file-from-pipe")),Var("p")),Var("file")),Seq(AM(BA(CallNoArgs(SVar("ReadFromFile")),Var("file")),Var("t")),BA(CallNoArgs(SVar("fclose")),Var("file"))))))]),Strategies([SDef("write-to-prog",[DefaultVarDec("prog"),DefaultVarDec("args")],Where(Seq(Where(AM(CallNoArgs(SVar("pipe")),Var("p"))),Seq(Call(SVar("fork"),[Seq(BA(CallNoArgs(SVar("stdin-from-pipe")),Var("p")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))]))))]),Seq(Match(NoAnnoList(Tuple([Var("pid"),Var("t")]))),Seq(BA(CallNoArgs(SVar("write-term-to-text-pipe")),NoAnnoList(Tuple([Var("p"),Var("t")]))),Seq(BA(CallNoArgs(SVar("waitpid")),Var("pid")),Choice(CallNoArgs(SVar("exited")),Choice(CallNoArgs(SVar("signaled")),CallNoArgs(SVar("stopped"))))))))))),SDef("write-to-prog'",[DefaultVarDec("prog"),DefaultVarDec("args")],Where(Seq(Match(Var("t")),Seq(AM(CallNoArgs(SVar("pipe")),Var("p")),Seq(CallNoArgs(SVar("fork")),LChoice(Seq(Match(NoAnnoList(Int("0"))),Seq(BA(CallNoArgs(SVar("stdin-from-pipe")),Var("p")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))]))))),Seq(Match(Var("pid")),Seq(BA(CallNoArgs(SVar("write-term-to-text-pipe")),NoAnnoList(Tuple([Var("p"),Var("t")]))),Seq(BA(CallNoArgs(SVar("waitpid")),Var("pid")),Choice(CallNoArgs(SVar("exited")),Choice(CallNoArgs(SVar("signaled")),CallNoArgs(SVar("stopped"))))))))))))),SDef("read-from-prog",[DefaultVarDec("prog"),DefaultVarDec("args")],Seq(Where(AM(CallNoArgs(SVar("pipe")),Var("p"))),Seq(Call(SVar("fork"),[Seq(BA(CallNoArgs(SVar("stdout-to-pipe")),Var("p")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))]))))]),Seq(Match(NoAnnoList(Tuple([Var("pid"),Wld]))),Seq(AM(BA(CallNoArgs(SVar("read-term-from-pipe")),Var("p")),Var("t")),Where(Seq(BA(CallNoArgs(SVar("waitpid")),Var("pid")),Choice(CallNoArgs(SVar("exited")),Choice(CallNoArgs(SVar("signaled")),CallNoArgs(SVar("stopped"))))))))))),SDef("read-from-prog'",[DefaultVarDec("prog"),DefaultVarDec("args")],Where(Seq(AM(CallNoArgs(SVar("pipe")),Var("p")),Seq(CallNoArgs(SVar("fork")),LChoice(Seq(Match(NoAnnoList(Int("0"))),Seq(BA(CallNoArgs(SVar("stdout-to-pipe")),Var("p")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))]))))),Seq(Match(Var("pid")),Seq(BA(CallNoArgs(SVar("read-term-from-pipe")),Var("p")),Where(Seq(BA(CallNoArgs(SVar("waitpid")),Var("pid")),Choice(CallNoArgs(SVar("exited")),Choice(CallNoArgs(SVar("signaled")),CallNoArgs(SVar("stopped")))))))))))))]),Strategies([SDefNoArgs("setup-filter-pipe",Seq(AM(CallNoArgs(SVar("pipe")),Var("p")),Build(NoAnnoList(Tuple([Var("p"),NoAnnoList(List([])),Var("p")]))))),RDef("pipe-source",[DefaultVarDec("prog"),DefaultVarDec("args")],Rule(NoAnnoList(Tuple([Var("p"),Var("pids")])),Var("pids"),Seq(CallNoArgs(SVar("fork")),LChoice(Seq(Match(NoAnnoList(Int("0"))),Seq(BA(CallNoArgs(SVar("stdout-to-pipe")),Var("p")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))]))))),Match(Var("pid")))))),RDef("pipe-sink",[DefaultVarDec("prog"),DefaultVarDec("args")],Rule(NoAnnoList(Tuple([Var("p0"),Var("pids"),Var("p1")])),NoAnnoList(Tuple([Var("p0"),NoAnnoList(ListTail([Var("pid")],Var("pids")))])),AM(Call(SVar("fork"),[Seq(BA(CallNoArgs(SVar("stdin-from-pipe")),Var("p1")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))]))))]),NoAnnoList(Tuple([Var("pid"),Wld]))))),RDef("close-filter-pipe",[DefaultVarDec("s")],Rule(NoAnnoList(Tuple([Var("p-in"),Var("pids"),Var("p-out")])),NoAnnoList(Tuple([Var("p-in"),NoAnnoList(ListTail([Var("pid")],Var("pids")))])),AM(BA(CallNoArgs(SVar("s")),Var("p-out")),Var("pid")))),RDef("exec-filter-pipe",[DefaultVarDec("s")],Rule(NoAnnoList(Tuple([Var("p-in"),Var("pids")])),NoAnnoList(Tuple([])),Seq(AM(BA(CallNoArgs(SVar("s")),Var("p-in")),Var("pid")),BA(Call(SVar("map"),[Seq(CallNoArgs(SVar("waitpid")),Choice(CallNoArgs(SVar("exited")),Choice(CallNoArgs(SVar("signaled")),CallNoArgs(SVar("stopped")))))]),NoAnnoList(ListTail([Var("pid")],Var("pids"))))))),RDef("spawn-filter-with-prog",[DefaultVarDec("prog"),DefaultVarDec("args")],Rule(NoAnnoList(Tuple([Var("p0"),Var("pids"),Var("p-in")])),NoAnnoList(Tuple([Var("p0"),NoAnnoList(ListTail([Var("pid")],Var("pids"))),Var("p-out")])),Seq(Call(SVar("debug"),[BA(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"spawn-filter-with \"")),RootApp(CallNoArgs(SVar("prog"))),NoAnnoList(Str("\": \""))])))]),Seq(AM(CallNoArgs(SVar("pipe")),Var("p-out")),AM(Call(SVar("fork"),[Seq(BA(CallNoArgs(SVar("stdin-from-pipe")),Var("p-in")),Seq(BA(CallNoArgs(SVar("stdout-to-pipe")),Var("p-out")),BA(CallNoArgs(SVar("execvp")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("prog"))),RootApp(CallNoArgs(SVar("args")))])))))]),NoAnnoList(Tuple([Var("pid"),Wld])))))))])])
