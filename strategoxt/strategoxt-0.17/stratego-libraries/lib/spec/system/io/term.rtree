Module("system/io/term",[Imports([Import("system/io/char"),Import("system/io/dir"),Import("system/io/file"),Import("system/io/process"),Import("term/string"),Import("term/integer"),Import("collection/list/common"),Import("strategy/conditional"),Import("util/config/options")]),Strategies([SDefNoArgs("ReadFromFile",Seq(LChoice(BA(CallNoArgs(SVar("open-stream")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Str("\"r\""))]))),BA(Seq(CallNoArgs(SVar("conc-strings")),Seq(CallNoArgs(SVar("perror")),Fail)),NoAnnoList(Tuple([NoAnnoList(Str("\"SSL/ReadFromFile \"")),RootApp(Id)])))),Seq(Where(AM(CallNoArgs(SVar("read-from-stream")),Var("trm"))),Seq(CallNoArgs(SVar("fclose")),Build(Var("trm")))))),SDefNoArgs("WriteToBinaryFile",Call(SVar("WriteToFile"),[CallNoArgs(SVar("write-in-baf-to-stream"))])),SDefNoArgs("WriteToTextFile",Call(SVar("WriteToFile"),[Seq(CallNoArgs(SVar("write-in-text-to-stream")),BA(CallNoArgs(SVar("fputc")),NoAnnoList(Tuple([NoAnnoList(Char("'\\n'")),RootApp(Id)]))))])),SDef("WriteToFile",[DefaultVarDec("writer")],Seq(Match(NoAnnoList(Tuple([RootApp(Id),Var("trm")]))),Seq(BA(CallNoArgs(SVar("open-stream")),NoAnnoList(Tuple([RootApp(Id),NoAnnoList(Str("\"w\""))]))),Seq(BA(CallNoArgs(SVar("writer")),NoAnnoList(Tuple([RootApp(Id),Var("trm")]))),Seq(CallNoArgs(SVar("fclose")),Build(Var("trm"))))))),SDef("open",[DefaultVarDec("file")],Seq(CallNoArgs(SVar("file")),CallNoArgs(SVar("ReadFromFile")))),SDef("save",[DefaultVarDec("file")],BA(CallNoArgs(SVar("WriteToTextFile")),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("file"))),RootApp(Id)]))))]),Strategies([SDefNoArgs("write-to-stream",CallNoArgs(SVar("write-in-baf-to-stream"))),SDefNoArgs("write-in-baf-to-stream",Seq(Match(NoAnnoList(Tuple([NoAnnoList(Op("Stream",[Var("stream")])),Var("term")]))),Seq(Prim("\"SSL_write_term_to_stream_baf\"",[Var("stream"),Var("term")]),Build(NoAnnoList(Op("Stream",[RootApp(Id)])))))),SDefNoArgs("write-in-taf-to-stream",Seq(Match(NoAnnoList(Tuple([NoAnnoList(Op("Stream",[Var("stream")])),Var("term")]))),Seq(Prim("\"SSL_write_term_to_stream_taf\"",[Var("stream"),Var("term")]),Build(NoAnnoList(Op("Stream",[RootApp(Id)])))))),SDefNoArgs("write-in-text-to-stream",Seq(Match(NoAnnoList(Tuple([NoAnnoList(Op("Stream",[Var("stream")])),Var("term")]))),Seq(Prim("\"SSL_write_term_to_stream_text\"",[Var("stream"),Var("term")]),Build(NoAnnoList(Op("Stream",[RootApp(Id)])))))),SDefNoArgs("read-from-stream",Seq(Match(NoAnnoList(Op("Stream",[Var("stream")]))),Prim("\"SSL_read_term_from_stream\"",[Var("stream")]))),SDefNoArgs("read-from-string",Seq(Match(Var("s")),Prim("\"SSL_read_term_from_string\"",[Var("s")]))),SDefNoArgs("write-to-string",Seq(Match(Var("t")),Prim("\"SSL_write_term_to_string\"",[Var("t")]))),SDefNoArgs("write-to-binary-string",Seq(Match(Var("t")),Prim("\"SSL_write_term_to_binary_string\"",[Var("t")]))),SDefNoArgs("write-to-shared-string",Seq(Match(Var("t")),Prim("\"SSL_write_term_to_shared_string\"",[Var("t")])))]),Strategies([SDefNoArgs("fprint",Seq(TupleCong(LChoice(Match(NoAnnoList(Op("Stream",[Wld]))),CallNoArgs(SVar("stdio-stream"))),[Id]),Seq(Match(NoAnnoList(Tuple([Var("stream"),RootApp(Id)]))),Seq(Call(SVar("map"),[Where(GuardedLChoice(CallNoArgs(SVar("is-string")),BA(CallNoArgs(SVar("fputs")),NoAnnoList(Tuple([RootApp(Id),Var("stream")]))),BA(CallNoArgs(SVar("write-in-text-to-stream")),NoAnnoList(Tuple([Var("stream"),RootApp(Id)])))))]),Build(Var("stream")))))),SDefNoArgs("fprintnl",Seq(CallNoArgs(SVar("fprint")),BA(CallNoArgs(SVar("fputc")),NoAnnoList(Tuple([NoAnnoList(Char("'\\n'")),RootApp(LChoice(Match(NoAnnoList(Op("Stream",[Wld]))),CallNoArgs(SVar("stdio-stream"))))]))))),SDefNoArgs("print",Seq(Match(NoAnnoList(Tuple([Var("stream"),Var("strs")]))),Seq(Call(SVar("obsolete"),[Build(NoAnnoList(Str("\"print: use fprint\"")))]),CallNoArgs(SVar("fprint"))))),SDefNoArgs("printnl",Seq(Match(NoAnnoList(Tuple([Var("stream"),Var("strs")]))),Call(SVar("obsolete"),[Build(NoAnnoList(Str("\"printnl: use fprintnl\"")))])))]),Strategies([SDefNoArgs("debug",Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([NoAnnoList(Op("stderr",[])),NoAnnoList(List([RootApp(Id)]))]))))),SDef("debug",[DefaultVarDec("msg")],Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([NoAnnoList(Op("stderr",[])),NoAnnoList(List([RootApp(CallNoArgs(SVar("msg"))),RootApp(Id)]))])))))]),Strategies([SDefNoArgs("debug-depth",Call(SVar("debug-depth"),[Build(NoAnnoList(Int("4"))),Build(NoAnnoList(Str("\"\"")))])),SDef("debug-depth",[DefaultVarDec("depth")],Call(SVar("debug-depth"),[CallNoArgs(SVar("depth")),Build(NoAnnoList(Str("\"\"")))])),SDef("debug-depth",[DefaultVarDec("depth"),DefaultVarDec("s")],Where(Seq(Call(SVar("at-depth"),[CallNoArgs(SVar("depth")),Build(NoAnnoList(Str("\"...\"")))]),Call(SVar("debug"),[CallNoArgs(SVar("s"))]))))]),Strategies([SDef("say",[DefaultVarDec("msg")],Where(Seq(CallNoArgs(SVar("msg")),CallNoArgs(SVar("debug"))))),SDef("trace",[DefaultVarDec("msg"),DefaultVarDec("s")],Seq(Call(SVar("debug"),[CallNoArgs(SVar("msg"))]),LChoice(Seq(CallNoArgs(SVar("s")),Call(SVar("debug"),[Build(NoAnnoList(Str("\"succeeded: \"")))])),Call(SVar("debug"),[Build(NoAnnoList(Str("\"failed: \"")))])))),SDefNoArgs("error",Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([NoAnnoList(Op("stderr",[])),RootApp(Id)]))))),SDefNoArgs("fatal-error",Where(Seq(CallNoArgs(SVar("error")),BA(CallNoArgs(SVar("exit")),NoAnnoList(Int("1")))))),SDefNoArgs("giving-up",BA(CallNoArgs(SVar("fatal-error")),NoAnnoList(List([NoAnnoList(Str("\"giving-up\""))])))),SDef("obsolete",[DefaultVarDec("msg")],CallT(SVar("log"),[],[NoAnnoList(Op("Warning",[])),App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([NoAnnoList(Str("\"program uses obsolete strategy \"")),App(CallNoArgs(SVar("msg")),NoAnnoList(Tuple([])))])))])),SDef("risky",[DefaultVarDec("msg"),DefaultVarDec("s")],Call(SVar("restore"),[CallNoArgs(SVar("s")),Call(SVar("debug"),[CallNoArgs(SVar("msg"))])]))]),Strategies([SDefNoArgs("echo",Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([NoAnnoList(Op("stdout",[])),RootApp(LChoice(CallNoArgs(SVar("is-list")),Build(NoAnnoList(List([RootApp(Id)])))))]))))),SDef("echo",[DefaultVarDec("msg")],Where(BA(CallNoArgs(SVar("fprintnl")),NoAnnoList(Tuple([NoAnnoList(Op("stdout",[])),NoAnnoList(List([RootApp(CallNoArgs(SVar("msg"))),RootApp(Id)]))]))))),SDefNoArgs("printstring",Where(BA(CallNoArgs(SVar("fprint")),NoAnnoList(Tuple([NoAnnoList(Op("stdout",[])),NoAnnoList(List([RootApp(Id)]))])))))])])
