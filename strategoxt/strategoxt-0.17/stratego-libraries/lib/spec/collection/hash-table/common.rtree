Module("collection/hash-table/common",[Imports([ImportWildcard("collection/list")]),Signature([Constructors([OpDecl("Hashtable",FunType([ConstType(SortNoArgs("ImplDep"))],ConstType(SortNoArgs("Hashtable"))))])]),Strategies([SDefNoArgs("new-hashtable",CallT(SVar("new-hashtable"),[],[NoAnnoList(Int("117")),NoAnnoList(Int("75"))])),SDefT("new-hashtable",[],[DefaultVarDec("initial_size"),DefaultVarDec("max_load")],Seq(Prim("\"SSL_hashtable_create\"",[Var("initial_size"),Var("max_load")]),Build(NoAnnoList(Op("Hashtable",[RootApp(Id)]))))),SDefNoArgs("hashtable-destroy",Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),Seq(Prim("\"SSL_hashtable_destroy\"",[Var("tbl")]),Build(NoAnnoList(Op("Hashtable",[RootApp(Id)])))))),SDefNoArgs("hashtable-clear",Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),Seq(Prim("\"SSL_hashtable_reset\"",[Var("tbl")]),Build(NoAnnoList(Op("Hashtable",[RootApp(Id)]))))))]),Strategies([SDefT("hashtable-put",[],[DefaultVarDec("key"),DefaultVarDec("value")],Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),Seq(Prim("\"SSL_hashtable_put\"",[Var("tbl"),Var("key"),Var("value")]),Build(NoAnnoList(Op("Hashtable",[RootApp(Id)])))))),SDefT("hashtable-get",[],[DefaultVarDec("key")],Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),Prim("\"SSL_hashtable_get\"",[Var("tbl"),Var("key")]))),SDefT("hashtable-remove",[],[DefaultVarDec("key")],Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),Seq(Prim("\"SSL_hashtable_remove\"",[Var("tbl"),Var("key")]),Build(NoAnnoList(Op("Hashtable",[RootApp(Id)])))))),SDefNoArgs("hashtable-keys",Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),Prim("\"SSL_hashtable_keys\"",[Var("tbl")]))),SDefNoArgs("hashtable-values",Seq(Match(Var("htbl")),Seq(CallNoArgs(SVar("hashtable-keys")),Call(SVar("map"),[Scope(["k"],Seq(Match(Var("k")),BA(CallT(SVar("hashtable-get"),[],[Var("k")]),Var("htbl"))))])))),SDefT("hashtable-fold",[VarDec("s",FunType([ConstType(SortVar("k")),ConstType(SortVar("v")),ConstType(SortVar("a"))],ConstType(SortVar("a"))))],[DefaultVarDec("t")],Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),PrimT("\"SSL_table_fold\"",[CallNoArgs(SVar("s"))],[Var("t"),Var("tbl")]))),SDefT("hashtable-fold-keys",[VarDec("s",FunType([ConstType(SortVar("k")),ConstType(SortVar("a"))],ConstType(SortVar("a"))))],[DefaultVarDec("t")],Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),PrimT("\"SSL_table_keys_fold\"",[CallNoArgs(SVar("s"))],[Var("t"),Var("tbl")]))),SDefT("hashtable-fold-values",[VarDec("s",FunType([ConstType(SortVar("v")),ConstType(SortVar("a"))],ConstType(SortVar("a"))))],[DefaultVarDec("t")],Seq(Match(NoAnnoList(Op("Hashtable",[Var("tbl")]))),PrimT("\"SSL_table_values_fold\"",[CallNoArgs(SVar("s"))],[Var("t"),Var("tbl")])))]),Strategies([SDefNoArgs("hashtable-getlist",Seq(Match(Var("htbl")),Let([SDefT("insert",[],[DefaultVarDec("k"),DefaultVarDec("v")],Build(NoAnnoList(ListTail([NoAnnoList(Tuple([Var("k"),Var("v")]))],RootApp(Id)))))],CallT(SVar("hashtable-fold"),[CallNoArgs(SVar("insert"))],[NoAnnoList(List([]))])))),SDefT("hashtable-putlist",[],[DefaultVarDec(ListVar("kv*"))],Seq(Match(Var("htbl")),Where(BA(Call(SVar("map"),[LRule(RuleNoCond(NoAnnoList(Tuple([Var("key"),Var("value")])),App(CallT(SVar("hashtable-put"),[],[Var("key"),Var("value")]),Var("htbl"))))]),Var(ListVar("kv*")))))),SDefT("hashtable-putlist",[VarDec("f",FunType([ConstType(SortNoArgs("ATerm")),ConstType(SortNoArgs("ATerm")),ConstType(SortNoArgs("Hashtable"))],ConstType(SortNoArgs("Hashtable"))))],[DefaultVarDec(ListVar("kv*"))],Seq(Match(Var("htbl")),Where(BA(Call(SVar("map"),[LRule(RuleNoCond(NoAnnoList(Tuple([Var("key"),Var("value")])),App(CallT(SVar("f"),[],[Var("key"),Var("value")]),Var("htbl"))))]),Var(ListVar("kv*")))))),SDefNoArgs("hashtable-init",Seq(Match(Var(ListVar("kv*"))),Seq(CallT(SVar("new-hashtable"),[],[RootApp(CallNoArgs(SVar("length"))),NoAnnoList(Int("75"))]),CallT(SVar("hashtable-putlist"),[],[Var(ListVar("kv*"))])))),SDefNoArgs("hashtable-copy",Seq(CallNoArgs(SVar("hashtable-getlist")),CallNoArgs(SVar("hashtable-init"))))]),Strategies([SDefT("hashtable-push",[],[DefaultVarDec("key"),DefaultVarDec("value")],CallT(SVar("hashtable-put"),[],[Var("key"),NoAnnoList(ListTail([Var("value")],RootApp(LChoice(CallT(SVar("hashtable-get"),[],[Var("key")]),Build(NoAnnoList(List([])))))))])),SDefT("hashtable-pushlist",[],[DefaultVarDec("key"),DefaultVarDec("value")],CallT(SVar("hashtable-put"),[],[Var("key"),App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("value"),RootApp(LChoice(CallT(SVar("hashtable-get"),[],[Var("key")]),Build(NoAnnoList(List([])))))])))])),SDefT("hashtable-pushunion",[],[DefaultVarDec("key"),DefaultVarDec("value")],CallT(SVar("hashtable-put"),[],[Var("key"),App(CallNoArgs(SVar("union")),NoAnnoList(Tuple([Var("value"),RootApp(LChoice(CallT(SVar("hashtable-get"),[],[Var("key")]),Build(NoAnnoList(List([])))))])))])),SDefT("hashtable-pop",[],[DefaultVarDec("key")],CallT(SVar("hashtable-put"),[],[Var("key"),RootApp(Seq(CallT(SVar("hashtable-get"),[],[Var("key")]),CallNoArgs(SVar("Tl"))))])),SDefT("hashtable-peek",[],[DefaultVarDec("key")],Seq(CallT(SVar("hashtable-get"),[],[Var("key")]),CallNoArgs(SVar("Hd")))),SDefT("hashtable-peekpop",[],[DefaultVarDec("key")],Seq(Where(AM(CallT(SVar("hashtable-peek"),[],[Var("key")]),Var("val"))),Seq(CallT(SVar("hashtable-pop"),[],[Var("key")]),Build(Var("val")))))]),Strategies([SDefNoArgs("symmetric-yes",Id),SDefNoArgs("symmetric-no",Fail),SDefNoArgs("iterate1-yes",Id),SDefNoArgs("iterate1-no",Fail),SDefNoArgs("iterate2-yes",Id),SDefNoArgs("iterate2-no",Fail),SDefNoArgs("remove-yes",Id),SDefNoArgs("remove-no",Fail),SDefNoArgs("default-no",Fail),SDefNoArgs("change1-yes",Id),SDefNoArgs("change1-no",Fail),SDefNoArgs("change2-yes",Id),SDefNoArgs("change2-no",Fail)]),Strategies([RDef("hashtable-merge",[DefaultVarDec("symm"),DefaultVarDec("iterate1"),DefaultVarDec("iterate2"),DefaultVarDec("remove"),DefaultVarDec("merge"),DefaultVarDec("default"),DefaultVarDec("change1"),DefaultVarDec("change2"),DefaultVarDec("lookup1"),DefaultVarDec("lookup2")],Rule(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")])),Var("tbl1"),Seq(AM(CondChoice(CallNoArgs(SVar("iterate1")),Seq(BA(CallNoArgs(SVar("hashtable-keys")),Var("tbl1")),Call(SVar("filter"),[Scope(["key","val1","val2","val3"],Seq(Match(Var("key")),CondChoice(AM(BA(CallNoArgs(SVar("lookup2")),Var("key")),Var("val2")),Seq(AM(BA(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")),Var("val1")),Seq(AM(BA(CallNoArgs(SVar("merge")),NoAnnoList(Tuple([Var("val1"),Var("val2")]))),Var("val3")),Call(SVar("ior"),[CondChoice(BA(Match(Var("val1")),Var("val3")),Fail,Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl1")),CallNoArgs(SVar("change1")))),CondChoice(Seq(CallNoArgs(SVar("symm")),BA(Match(Var("val2")),Var("val3"))),Fail,Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl2")),CallNoArgs(SVar("change2"))))]))),CondChoice(AM(BA(CallNoArgs(SVar("default")),Var("key")),Var("val2")),Seq(AM(BA(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")),Var("val1")),Seq(AM(BA(CallNoArgs(SVar("merge")),NoAnnoList(Tuple([Var("val1"),Var("val2")]))),Var("val3")),Call(SVar("ior"),[CondChoice(BA(Match(Var("val1")),Var("val3")),Fail,Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl1")),CallNoArgs(SVar("change1")))),IfThen(CallNoArgs(SVar("symm")),Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl2")),CallNoArgs(SVar("change2"))))]))),CondChoice(CallNoArgs(SVar("remove")),Seq(BA(CallT(SVar("hashtable-remove"),[],[Var("key")]),Var("tbl1")),IfThen(CallNoArgs(SVar("symm")),Seq(BA(CallT(SVar("hashtable-remove"),[],[Var("key")]),Var("tbl2")),CallNoArgs(SVar("change2"))))),Fail)))))])),Build(NoAnnoList(List([])))),Var("changes1")),Seq(AM(CondChoice(CallNoArgs(SVar("iterate2")),Seq(BA(CallNoArgs(SVar("hashtable-keys")),Var("tbl2")),Call(SVar("filter"),[Scope(["key","val1","val2","val3"],Seq(Match(Var("key")),Seq(IfThen(CallNoArgs(SVar("iterate1")),Not(BA(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),CondChoice(AM(BA(CallNoArgs(SVar("lookup1")),Var("key")),Var("val1")),Seq(AM(BA(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2")),Var("val2")),Seq(AM(BA(CallNoArgs(SVar("merge")),NoAnnoList(Tuple([Var("val1"),Var("val2")]))),Var("val3")),Call(SVar("ior"),[CondChoice(BA(Match(Var("val1")),Var("val3")),Fail,Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl1")),CallNoArgs(SVar("change1")))),CondChoice(Seq(CallNoArgs(SVar("symm")),BA(Match(Var("val2")),Var("val3"))),Fail,Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl2")),CallNoArgs(SVar("change2"))))]))),CondChoice(AM(BA(CallNoArgs(SVar("default")),Var("key")),Var("val1")),Seq(AM(BA(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2")),Var("val2")),Seq(AM(BA(CallNoArgs(SVar("merge")),NoAnnoList(Tuple([Var("val1"),Var("val2")]))),Var("val3")),Seq(BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl1")),IfThen(Seq(CallNoArgs(SVar("symm")),BA(Not(Match(Var("val2"))),Var("val3"))),BA(CallT(SVar("hashtable-put"),[],[Var("key"),Var("val3")]),Var("tbl2")))))),CondChoice(CallNoArgs(SVar("remove")),Seq(BA(CallT(SVar("hashtable-remove"),[],[Var("key")]),Var("tbl1")),IfThen(CallNoArgs(SVar("symm")),Seq(BA(CallT(SVar("hashtable-remove"),[],[Var("key")]),Var("tbl2")),CallNoArgs(SVar("change2"))))),Fail))))))])),Build(NoAnnoList(List([])))),Var("changes2")),LChoice(BA(Not(ListCongNoTail([])),Var("changes1")),BA(Not(ListCongNoTail([])),Var("changes2"))))))),SDef("hashtable-merge",[DefaultVarDec("symm"),DefaultVarDec("iterate1"),DefaultVarDec("iterate2"),DefaultVarDec("remove"),DefaultVarDec("merge"),DefaultVarDec("default"),DefaultVarDec("lookup1"),DefaultVarDec("lookup2")],Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symm")),CallNoArgs(SVar("iterate1")),CallNoArgs(SVar("iterate2")),CallNoArgs(SVar("remove")),CallNoArgs(SVar("merge")),CallNoArgs(SVar("default")),CallNoArgs(SVar("change1-yes")),CallNoArgs(SVar("change2-yes")),CallNoArgs(SVar("lookup1")),CallNoArgs(SVar("lookup2"))])),RDef("hashtable-merge-func",[DefaultVarDec("iterate1"),DefaultVarDec("iterate2"),DefaultVarDec("remove"),DefaultVarDec("merge"),DefaultVarDec("default"),DefaultVarDec("lookup1"),DefaultVarDec("lookup2")],Rule(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")])),Var("tbl3"),Seq(AM(BA(CallNoArgs(SVar("hashtable-copy")),Var("tbl1")),Var("tbl3")),BA(Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-no")),CallNoArgs(SVar("iterate1")),CallNoArgs(SVar("iterate2")),CallNoArgs(SVar("remove")),CallNoArgs(SVar("merge")),CallNoArgs(SVar("default")),CallNoArgs(SVar("lookup1")),CallNoArgs(SVar("lookup2"))]),NoAnnoList(Tuple([Var("tbl3"),Var("tbl2")]))))))]),Strategies([SDefT("hashtable-intersect",[],[DefaultVarDec("tbl2")],Seq(Match(Var("tbl1")),Seq(Build(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-no")),CallNoArgs(SVar("iterate1-yes")),CallNoArgs(SVar("iterate2-no")),CallNoArgs(SVar("remove-yes")),CallNoArgs(SVar("isect")),CallNoArgs(SVar("default-no")),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2"))))])))),SDefT("hashtable-intersect-wempty",[],[DefaultVarDec("tbl2"),DefaultVarDec("emptyElt")],Seq(Match(Var("tbl1")),Seq(Build(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-no")),CallNoArgs(SVar("iterate1-yes")),CallNoArgs(SVar("iterate2-yes")),CallNoArgs(SVar("remove-no")),CallNoArgs(SVar("isect")),Build(Var("emptyElt")),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2"))))])))),SDefT("hashtable-intersect-symm-wempty",[],[DefaultVarDec("emptyElt")],Seq(Match(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-yes")),CallNoArgs(SVar("iterate1-yes")),CallNoArgs(SVar("iterate2-yes")),CallNoArgs(SVar("remove-no")),CallNoArgs(SVar("isect")),Build(Var("emptyElt")),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2"))))]))),SDefT("hashtable-intersect-symm-wempty-ignore-left",[],[DefaultVarDec("emptyElt")],Seq(Match(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-yes")),CallNoArgs(SVar("iterate1-yes")),CallNoArgs(SVar("iterate2-yes")),CallNoArgs(SVar("remove-no")),CallNoArgs(SVar("isect")),Build(Var("emptyElt")),CallNoArgs(SVar("change1-no")),CallNoArgs(SVar("change2-yes")),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2"))))])))]),Strategies([SDefT("hashtable-union",[],[DefaultVarDec("tbl2")],Seq(Match(Var("tbl1")),Seq(Build(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-no")),CallNoArgs(SVar("iterate1-no")),CallNoArgs(SVar("iterate2-yes")),CallNoArgs(SVar("remove-no")),CallNoArgs(SVar("union")),Build(NoAnnoList(List([]))),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),Fail])))),SDefT("hashtable-union-wempty",[],[DefaultVarDec("tbl2"),DefaultVarDec("emptyElt")],Seq(Match(Var("tbl1")),Seq(Build(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-no")),CallNoArgs(SVar("iterate1-no")),CallNoArgs(SVar("iterate2-yes")),CallNoArgs(SVar("remove-no")),CallNoArgs(SVar("union")),Build(Var("emptyElt")),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),Fail])))),SDefT("hashtable-union-symm-wempty",[],[DefaultVarDec("emptyElt")],Seq(Match(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Call(SVar("hashtable-merge"),[CallNoArgs(SVar("symmetric-yes")),CallNoArgs(SVar("iterate1-yes")),CallNoArgs(SVar("iterate2-yes")),CallNoArgs(SVar("remove-no")),CallNoArgs(SVar("union")),Build(Var("emptyElt")),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")))),LRule(RuleNoCond(Var("key"),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2"))))])))]),Strategies([SDefNoArgs("hashtable-eq",Call(SVar("hashtable-eq"),[CallNoArgs(SVar("eq"))])),SDef("hashtable-eq",[DefaultVarDec("eq")],Seq(Match(NoAnnoList(Tuple([Var("tbl1"),Var("tbl2")]))),Seq(Where(Seq(TupleCong(AM(CallNoArgs(SVar("hashtable-keys")),Var(ListVar("k*"))),[CallNoArgs(SVar("hashtable-keys"))]),CallNoArgs(SVar("set-eq")))),Where(BA(Call(SVar("map"),[LRule(RuleNoCond(Var("key"),App(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl1")),App(CallT(SVar("hashtable-get"),[],[Var("key")]),Var("tbl2"))])))))]),Var(ListVar("k*")))))))]),Strategies([SDefNoArgs("table-hashtable",Seq(PrimNoArgs("\"SSL_table_hashtable\""),Build(NoAnnoList(Op("Hashtable",[RootApp(Id)]))))),SDefT("lookup-table",[],[DefaultVarDec("name")],Seq(CallNoArgs(SVar("table-hashtable")),LChoice(CallT(SVar("hashtable-get"),[],[Var("name")]),Seq(Where(BA(CallNoArgs(SVar("table-create")),Var("name"))),CallT(SVar("hashtable-get"),[],[Var("name")]))))),SDefNoArgs("table-create",Seq(Match(Var("name")),Seq(Where(AM(CallNoArgs(SVar("new-hashtable")),Var("htbl"))),Where(Seq(CallNoArgs(SVar("table-hashtable")),CallT(SVar("hashtable-put"),[],[Var("name"),Var("htbl")])))))),SDefNoArgs("table-destroy",Seq(Match(Var("name")),Where(Seq(CallNoArgs(SVar("table-hashtable")),Seq(Where(Seq(CallT(SVar("lookup-table"),[],[Var("name")]),CallNoArgs(SVar("hashtable-destroy")))),CallT(SVar("hashtable-remove"),[],[Var("name")])))))),SDefNoArgs("table-put",Where(Seq(Match(NoAnnoList(Tuple([Var("name"),Var("key"),Var("value")]))),Seq(CallT(SVar("lookup-table"),[],[Var("name")]),CallT(SVar("hashtable-put"),[],[Var("key"),Var("value")]))))),SDefNoArgs("table-get",Seq(Match(NoAnnoList(Tuple([Var("name"),Var("key")]))),Seq(CallT(SVar("lookup-table"),[],[Var("name")]),CallT(SVar("hashtable-get"),[],[Var("key")])))),SDefNoArgs("table-remove",Where(Seq(Match(NoAnnoList(Tuple([Var("name"),Var("key")]))),Seq(CallT(SVar("lookup-table"),[],[Var("name")]),CallT(SVar("hashtable-remove"),[],[Var("key")]))))),SDefNoArgs("table-keys",Seq(Match(Var("name")),Seq(CallT(SVar("lookup-table"),[],[Var("name")]),CallNoArgs(SVar("hashtable-keys"))))),SDefNoArgs("table-rename",Seq(Match(NoAnnoList(Tuple([Var("from-name"),Var("to-name")]))),Seq(Where(AM(CallT(SVar("lookup-table"),[],[Var("from-name")]),Var("htbl"))),Seq(CallNoArgs(SVar("table-hashtable")),Seq(CallT(SVar("hashtable-put"),[],[Var("to-name"),Var("htbl")]),Seq(CallT(SVar("hashtable-remove"),[],[Var("from-name")]),Build(Var("to-name"))))))))]),Strategies([SDefNoArgs("table-getlist",Seq(Match(Var("name")),Seq(CallNoArgs(SVar("table-keys")),Call(SVar("map"),[LRule(RuleNoCond(Var("x"),NoAnnoList(Tuple([Var("x"),App(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("name"),Var("x")])))]))))])))),SDefNoArgs("table-putlist",Seq(Match(NoAnnoList(Tuple([Var("name"),Var("list")]))),BA(Call(SVar("map"),[Scope(["x","y"],Seq(Match(NoAnnoList(Tuple([Var("x"),Var("y")]))),BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("name"),Var("x"),Var("y")])))))]),Var("list")))),SDef("table-putlist",[DefaultVarDec("s")],Seq(Match(NoAnnoList(Tuple([Var("name"),Var("list")]))),BA(Call(SVar("map"),[Scope(["x","y"],Seq(Match(NoAnnoList(Tuple([Var("x"),Var("y")]))),BA(CallNoArgs(SVar("s")),NoAnnoList(Tuple([Var("name"),Var("x"),Var("y")])))))]),Var("list")))),SDefNoArgs("table-copy",Seq(Match(NoAnnoList(Tuple([Var("name1"),Var("name2")]))),Where(BA(CallNoArgs(SVar("table-putlist")),NoAnnoList(Tuple([Var("name2"),App(CallNoArgs(SVar("table-getlist")),Var("name1"))]))))))]),Strategies([SDefNoArgs("table-push",Seq(Match(NoAnnoList(Tuple([Var("dis"),Var("key"),Var("val")]))),Where(BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("dis"),Var("key"),NoAnnoList(ListTail([Var("val")],App(LChoice(CallNoArgs(SVar("table-get")),Build(NoAnnoList(List([])))),NoAnnoList(Tuple([Var("dis"),Var("key")])))))])))))),SDefNoArgs("table-pop",Seq(Match(NoAnnoList(Tuple([Var("dis"),Var("key")]))),Where(BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("dis"),Var("key"),App(LChoice(Seq(CallNoArgs(SVar("table-get")),CallNoArgs(SVar("Tl"))),Build(NoAnnoList(List([])))),NoAnnoList(Tuple([Var("dis"),Var("key")])))])))))),SDefNoArgs("table-pop-rm",Seq(Match(NoAnnoList(Tuple([Var("dis"),Var("key")]))),Where(GuardedLChoice(AM(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("dis"),Var("key")]))),NoAnnoList(ListTail([Wld],Var("xs")))),BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("dis"),Var("key"),Var("xs")]))),BA(CallNoArgs(SVar("table-remove")),NoAnnoList(Tuple([Var("dis"),Var("key")]))))))),SDefNoArgs("table-pop-get",Seq(Match(NoAnnoList(Tuple([Var("dis"),Var("key")]))),Seq(Where(Seq(AM(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("dis"),Var("key")]))),NoAnnoList(ListTail([Var("val")],Var("vals")))),BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("dis"),Var("key"),Var("vals")]))))),Build(Var("val"))))),SDefNoArgs("table-lookup",Seq(Match(NoAnnoList(Tuple([Var("dis"),Var("key")]))),Seq(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("dis"),Var("key")]))),CallNoArgs(SVar("Hd"))))),SDefNoArgs("table-replace",Seq(Match(NoAnnoList(Tuple([Var("dis"),Var("key"),Var("value")]))),Where(Seq(AM(BA(CallNoArgs(SVar("table-get")),NoAnnoList(Tuple([Var("dis"),Var("key")]))),NoAnnoList(ListTail([Wld],Var("values")))),BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("dis"),Var("key"),NoAnnoList(ListTail([Var("value")],Var("values")))]))))))),SDefNoArgs("table-union",Seq(Match(NoAnnoList(Tuple([Var("table"),Var("key"),Var("val")]))),Where(BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("table"),Var("key"),App(CallNoArgs(SVar("union")),NoAnnoList(Tuple([Var("val"),App(LChoice(CallNoArgs(SVar("table-get")),Build(NoAnnoList(List([])))),NoAnnoList(Tuple([Var("table"),Var("key")])))])))])))))),SDefNoArgs("table-diff",Seq(Match(NoAnnoList(Tuple([Var("table"),Var("key"),Var("val")]))),Where(BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("table"),Var("key"),App(CallNoArgs(SVar("diff")),NoAnnoList(Tuple([App(LChoice(CallNoArgs(SVar("table-get")),Build(NoAnnoList(List([])))),NoAnnoList(Tuple([Var("table"),Var("key")]))),Var("val")])))])))))),SDefNoArgs("table-append",Seq(Match(NoAnnoList(Tuple([Var("table"),Var("key"),Var("val")]))),Where(BA(CallNoArgs(SVar("table-put")),NoAnnoList(Tuple([Var("table"),Var("key"),App(CallNoArgs(SVar("union")),NoAnnoList(Tuple([App(LChoice(CallNoArgs(SVar("table-get")),Build(NoAnnoList(List([])))),NoAnnoList(Tuple([Var("table"),Var("key")]))),Var("val")])))]))))))])])
