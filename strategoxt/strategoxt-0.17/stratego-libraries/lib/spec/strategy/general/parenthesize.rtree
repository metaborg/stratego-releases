Module("strategy/general/parenthesize",[Imports([Import("collection/list/common")]),Strategies([SDef("parenthesize",[DefaultVarDec("paren"),DefaultVarDec("prios")],Seq(Where(Seq(CallNoArgs(SVar("prios")),CallNoArgs(SVar("init-parenthesation-rules")))),Call(SVar("bottomup"),[Call(SVar("try"),[Call(SVar("Disambiguate"),[CallNoArgs(SVar("paren"))])])]))),SDef("parenthesize",[DefaultVarDec("paren")],Call(SVar("bottomup"),[Call(SVar("try"),[Call(SVar("Disambiguate"),[CallNoArgs(SVar("paren"))])])])),RDef("Disambiguate",[DefaultVarDec("paren")],Rule(As(Var("e"),NoAnnoList(Explode(Var("op"),NoAnnoList(ListTail([Var("l")],Var("args")))))),NoAnnoList(Tuple([NoAnnoList(Explode(Var("op"),NoAnnoList(ListTail([Var("l'")],App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("mid'"),NoAnnoList(List([Var("r'")]))])))))))])),Seq(AM(BA(CallNoArgs(SVar("split-init-last")),Var("args")),NoAnnoList(Tuple([Var("mid"),Var("r")]))),Seq(AM(BA(Call(SVar("try"),[Seq(Test(BA(CallNoArgs(SVar("RightAssoc")),NoAnnoList(Tuple([Var("e"),RootApp(Id)])))),CallNoArgs(SVar("paren")))]),Var("l")),Var("l'")),Seq(AM(BA(Call(SVar("map"),[Seq(Test(BA(CallNoArgs(SVar("GreaterThan")),NoAnnoList(Tuple([Var("e"),RootApp(Id)])))),CallNoArgs(SVar("paren")))]),Var("mid")),Var("mid'")),AM(BA(Call(SVar("try"),[Seq(Test(BA(CallNoArgs(SVar("LeftAssoc")),NoAnnoList(Tuple([Var("e"),RootApp(Id)])))),CallNoArgs(SVar("paren")))]),Var("r")),Var("r'"))))))),RDef("Disambiguate",[DefaultVarDec("paren")],Rule(As(Var("e"),NoAnnoList(Explode(Var("op"),NoAnnoList(List([Var("l")]))))),NoAnnoList(Tuple([NoAnnoList(Explode(Var("op"),NoAnnoList(List([Var("l'")]))))])),AM(BA(Seq(Test(BA(CallNoArgs(SVar("GreaterThan")),NoAnnoList(Tuple([Var("e"),RootApp(Id)])))),CallNoArgs(SVar("paren"))),Var("l")),Var("l'"))))]),Strategies([SDefNoArgs("init-parenthesation-rules",Seq(Build(NoAnnoList(Tuple([NoAnnoList(List([])),RootApp(Id)]))),Call(SVar("repeat"),[Choice(CallNoArgs(SVar("gen-left")),Choice(CallNoArgs(SVar("gen-right")),Choice(CallNoArgs(SVar("gen-non-assoc")),CallNoArgs(SVar("gen-none")))))]))),RDefNoArgs("gen-left",Rule(NoAnnoList(Tuple([Var("greater"),NoAnnoList(ListTail([NoAnnoList(Tuple([NoAnnoList(Op("Some",[NoAnnoList(Str("\"left\""))])),Var("ops")]))],Var("rest")))])),NoAnnoList(Tuple([App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("ops"),Var("greater")]))),Var("rest")])),Seq(BA(Call(SVar("for-each-pair"),[CallNoArgs(SVar("GenLeftAssoc"))]),NoAnnoList(Tuple([Var("ops"),Var("ops")]))),BA(Call(SVar("for-each-pair"),[Seq(CallNoArgs(SVar("GenGreaterThan")),Seq(CallNoArgs(SVar("GenLeftAssoc")),CallNoArgs(SVar("GenRightAssoc"))))]),NoAnnoList(Tuple([Var("greater"),Var("ops")])))))),RDefNoArgs("gen-right",Rule(NoAnnoList(Tuple([Var("greater"),NoAnnoList(ListTail([NoAnnoList(Tuple([NoAnnoList(Op("Some",[NoAnnoList(Str("\"right\""))])),Var("ops")]))],Var("rest")))])),NoAnnoList(Tuple([App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("ops"),Var("greater")]))),Var("rest")])),Seq(BA(Call(SVar("for-each-pair"),[CallNoArgs(SVar("GenRightAssoc"))]),NoAnnoList(Tuple([Var("ops"),Var("ops")]))),BA(Call(SVar("for-each-pair"),[Seq(CallNoArgs(SVar("GenGreaterThan")),Seq(CallNoArgs(SVar("GenLeftAssoc")),CallNoArgs(SVar("GenRightAssoc"))))]),NoAnnoList(Tuple([Var("greater"),Var("ops")])))))),RDefNoArgs("gen-non-assoc",Rule(NoAnnoList(Tuple([Var("greater"),NoAnnoList(ListTail([NoAnnoList(Tuple([NoAnnoList(Op("Some",[NoAnnoList(Str("\"non-assoc\""))])),Var("ops")]))],Var("rest")))])),NoAnnoList(Tuple([App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("ops"),Var("greater")]))),Var("rest")])),Seq(BA(Call(SVar("for-each-pair"),[Seq(CallNoArgs(SVar("GenLeftAssoc")),CallNoArgs(SVar("GenRightAssoc")))]),NoAnnoList(Tuple([Var("ops"),Var("ops")]))),BA(Call(SVar("for-each-pair"),[Seq(CallNoArgs(SVar("GenGreaterThan")),Seq(CallNoArgs(SVar("GenLeftAssoc")),CallNoArgs(SVar("GenRightAssoc"))))]),NoAnnoList(Tuple([Var("greater"),Var("ops")])))))),RDefNoArgs("gen-none",Rule(NoAnnoList(Tuple([Var("greater"),NoAnnoList(ListTail([NoAnnoList(Tuple([NoAnnoList(Op("None",[])),Var("ops")]))],Var("rest")))])),NoAnnoList(Tuple([App(CallNoArgs(SVar("conc")),NoAnnoList(Tuple([Var("ops"),Var("greater")]))),Var("rest")])),BA(Call(SVar("for-each-pair"),[Seq(CallNoArgs(SVar("GenGreaterThan")),Seq(CallNoArgs(SVar("GenLeftAssoc")),CallNoArgs(SVar("GenRightAssoc"))))]),NoAnnoList(Tuple([Var("greater"),Var("ops")]))))),SDefNoArgs("GenLeftAssoc",Seq(Match(NoAnnoList(Tuple([Var("op1"),Var("op2")]))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("LeftAssoc")),RuleNoCond(NoAnnoList(Tuple([NoAnnoList(Explode(Var("op1"),Wld)),NoAnnoList(Explode(Var("op2"),Wld))])),NoAnnoList(Tuple([]))))]))),SDefNoArgs("GenRightAssoc",Seq(Match(NoAnnoList(Tuple([Var("op1"),Var("op2")]))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("RightAssoc")),RuleNoCond(NoAnnoList(Tuple([NoAnnoList(Explode(Var("op1"),Wld)),NoAnnoList(Explode(Var("op2"),Wld))])),NoAnnoList(Tuple([]))))]))),SDefNoArgs("GenGreaterThan",Seq(Match(NoAnnoList(Tuple([Var("op1"),Var("op2")]))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("GreaterThan")),RuleNoCond(NoAnnoList(Tuple([NoAnnoList(Explode(Var("op1"),Wld)),NoAnnoList(Explode(Var("op2"),Wld))])),NoAnnoList(Tuple([]))))])))])])
