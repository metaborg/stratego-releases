/**
 * sdf-desugar implements the following desugarings:
 *
 *   - remove double quotes in String literals: cons, lit
 *   - replace no-attrs by attrs([])
 *
 * @author Martin Bravenboer
 */
module stratego/sdf/desugar
imports
  stratego/sdf/syntax
  libstratego-lib
  libstratego-aterm

strategies

  sdf-parsefix =
    topdown(repeat(sdf-ParseFix); try(sdf-ParseFixOnce))

  sdf-ppfix =
    topdown(repeat(sdf-PpFix); try(sdf-PpFixOnce))

  sdf-ParseFix :
    no-attrs() -> attrs([])

  sdf-PpFix :
    attrs([]) -> no-attrs()

  sdf-ParseFix :
    term(default(t)) -> term(t)

rules

  sdf-ParseFixOnce =
    term(implode-aterm)

  sdf-PpFixOnce =
    term(explode-aterm)

  sdf-ParseFixOnce :
    lit(s) -> lit(<un-double-quote> s)

  sdf-PpFixOnce :
    lit(s) -> lit(<double-quote> s)

  sdf-ParseFixOnce :
    ci-lit(s) -> ci-lit(<un-single-quote> s)

  sdf-PpFixOnce :
    ci-lit(s) -> ci-lit(<single-quote> s)

/**
 * Workaround problem with pretty-printing seq.
 */
strategies

  /**
   * A seq where the second element is not a list, is a lookahead seq.
   */
  sdf-PpFix :
    seq(a,b) -> seq-lookahead(a,b)
    where
      <not(is-list)> b

  /**
   * A seq where the second element is a list, is a symbol
   */
  sdf-PpFix :
    seq(a, b) -> seq-symbol(a,b)
    where
      <is-list> b

signature
  constructors
    seq-symbol : a * a -> a
    seq-lookahead : a * a -> a
