module sglri
imports
  libstratego-sglr
  libstratego-xtc
  libstratego-lib
  sglri-options
  implode-asfix

strategies

  main-sglri =
    xtc-io-wrap(sglri-options,
      where(additional-sglr-config)
      ; if output(parse-and-implode) then
          <xtc-exit> 0
        else
          <xtc-exit> 1
        end
      )
      
  additional-sglr-config =
    if <geq> (<get-config> "--statistics", 1) then
      set-sglr-log-statistics(true)
      ; log-stream
      ; set-sglr-log-stream
    end

  print-config =
    if get-ambiguity-is-error then
      say(!"ambiguities: off")
    else
      say(!"ambiguities: on")
    end

strategies

  parse-and-implode =
    ?input;
    let try-get-start-symbol =
          <get-config> StartSymbol() <+ !None()

     in where(
          try-open-parse-table => tbl
        ; try-get-start-symbol => sort
        )
      ; open-input-stream => stream
      ; finally(
          parse-stream-pt(report-parse-error | tbl, sort, <path-of-input> input)
        , <fclose> stream
          ; <close-parse-table> tbl
        )

      ; if must-preserve-comments then
          asfix-anno-comments(| [ "ShortCom", "LongCom"] )
        end
  
      ; if must-preserve-positions then
          asfix-anno-position-info(|"")
        end

      ; if must-preserve-locations then
          asfix-anno-location
        end

      ; implode-asfix-using-config
    end

strategies

  path-of-input =
    ?FILE(<id>)

  path-of-input =
    ?stdin(); !"stdin"

  open-input-stream =
    ?FILE(<id>)
    ; (<fopen> (<id>, "r") <+ sglri-perror)

  open-input-stream =
    ?stdin(); stdin-stream
    
  try-open-parse-table =
    (<get-config> ParseTable()
       <+ log(|Critical(), "No parse table specified. Please use the -p option."); <xtc-exit> 1)
    ; (<fopen> (<id>, "r") <+ sglri-perror) => stream
    ; finally(read-from-stream, <fclose> stream)
    ; if not(?"parse-table"#(_)) then
        log(|Critical(), "The specified parse table file does not contain a parse table")
        ; <xtc-exit> 1
      end
    ; open-parse-table
    <+ log(|Critical(), "Could not open parse table")
    
  sglri-perror = 
    <conc-strings; perror; fail> ("sglri: ", <id>)

strategies

  report-parse-error =
    finally(
      ?input
      ; get-parse-error => error
      ; <report-error(|error)> input
    , fail
    )

strategies

  sglri-options =
      sglr-parse-table-option
    + sglr-start-symbol-option
    + Option(fail, fail, !"")

    + Option(fail, fail, !"Parse options:")
    + sglr-amb-option
    + sglr-filter-option
    + Option(fail, fail, !"")

    + Option(fail, fail, !"Implode options:")
    + implode-asfix-options
    + Option(fail, fail, !"")

    + custom-sglr-option
    + custom-implode-option
    + Option(fail, fail, !"")

    + Option(fail, fail, !"Preserving options:")

    + preserve-comments-option
    + preserve-positions-option
    + preserve-locations-option

    + Option(fail, fail, !"")
    + Option(fail, fail, !"Input/Output options:")

