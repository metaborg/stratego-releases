/**
 * Parsing with concrete object syntax
 * 
 * This program is a generic parser for meta-programs with concrete
 * object syntax (embedded syntax). 
 *
 * The program is parameterized with components for handling the
 * various parts of the parsing process. These components are
 * 
 * - a parse table
 * - an pre-explode desugaring component
 * - an exploder for exploding embedded abstract syntax
 * - a post-explode desugaring component
 * - a pretty-printer
 * 
 * These components do not have to be provided on the command line,
 * but are provided via a meta-data file. A specific meta-data file
 * can be defined for the file to be parsed. It should have the following
 * components:
 * 
 * Meta([
 *   Syntax(lang),			// name of language = main SDF module
 *   ParseTable(tbl)			
 *   PreExplodeDesugar(pre-explode),    
 *   Explode(explode),
 *   PostExplodeDesugar(post-expl),
 *   PrettyPrintTable(pp)
 * ])
 *
 * If the component names are not absolute paths to files, the components
 * are looked up in the XTC repository.
 * 
 * Not all components need to be specified. The only one required is the
 * syntax. 
 */

module parse-cs

imports 
  libstratego-lib
  libstratego-xtc 
  strategoxt-xtc-tools 
  parse-cs-lib

strategies

  /**
   * Parse a file, possibly containing concrete object syntax.
   * Obtain parse table and other processors from meta data.
   */
  io-parse-cs =
    where(<set-config> ("--ensugar", 5));
    where(<set-config> ("--verbose", 1));
    xtc-io-wrap(
      include-options <+ syntax-option 
                      <+ ensugar-option 
                      <+ pretty-print-option
    , if-verbose1(where(FILE(debug(!"Parsing with concrete syntax: "))))
      ; pcs-input-file
      ; init-language-binding
      ; pcs-parse
      ; pcs-pre-explode-desugar 
      ; pcs-explode
      ; pcs-post-explode-desugar 
      ; pcs-pretty-print
    )

