2004-07-26   Martin Bravenboer  <martin.bravenboer@gmail.com>

	* xtc/parse-cs-lib.str: syntax override (--syntax option) now also
	handles the case where other methods of meta data (e.g. meta file)
	have not defined a Syntax.
		
2004-04-22   Martin Bravenboer  <martin.bravenboer@gmail.com>

	* xtc/parse-cs-lib.str: provide reuseful parse-cs strategies in a
	library.

	* xtc/parse-cs-lib.str: added parse strategies for AsFix2 and
	AsFix2ME.

	* xtc/parse-cs-lib.str: added the TopSort feature to AST,
	AsFix2, and AsFix2ME parsing.
	
2004-02-22   Merijn de Jonge  <mdejonge@cs.uu.nl>

	* Makefile.am: added autoxt.m4 to EXTRA_DIST

	* Makefile.am: added line: ACLOCAL_AMFLAGS = -I . such that
	autoreconf can find autoxt.m4

2003-11-16  Eelco Visser  <visser@cs.uu.nl>

	* xtc/parse-cs.str: Keeping intermediate results

	* Generic program for parsing programs with embedded concrete
	syntax. The program is parameterized with meta-data indicating
	components for various aspects such as parsing, exploding,
	desugaring, and pretty-printing. The meta data can be specified in
	a .meta file specific for a program to be parsed, or it can be
	associated with an extension and registered in an XTC repository.

	For example, the following is the contents of pl.meta, the
	meta-data for Prolog programs with embedded syntax. The assumption
	(in this example) is that syntax embeddings use a standard
	(ToTerm) convention for indicating the boundary between meta- and
	object-syntax.

	  Meta([
	    Syntax("Prolog"),
	    ParseTable("Prolog.tbl"),
	    Explode("prolog-explode"),
	    PrettyPrintTable("Prolog-pretty.pp.af")
	  ])

	This information can be overridden in a file specific .meta file
	with the same extension. For example, the following indicates an
	embedding of ABIR in Prolog and a specific desugaring tool for
	this format:

	  Meta([
	    Syntax("PrologABIR"),
	    PostExplodeDesugar("abir-in-prolog-implode")
	  ])

	It overrides the syntax component, and adds a desugaring component.

	In order to define such meta-data for a whole class of programs,
	it can be defined in a meta file associated with a new
	extension. For example, the following is the contents plabir.meta,
	which defines all meta-data for preprocessing Prolog with embedded
	ABIR in files with extension .plabir.
	
	  Meta([
	    Syntax("PrologABIR"),
	    Explode("prolog-explode"),
	    PostExplodeDesugar("abir-in-prolog-implode"),
	    PrettyPrintTable("Prolog-pretty.pp.af")
	  ])
