module lib-pp-table-args
imports
  strategoxt-xtc-tools
  
signature
  constructors
    Conservative : Option

strategies

  create-pp-table-args =
    get-config-p
    ; map(ensure-pp-table-parsed; \x -> ["-p", x]\); concat

  /**
   * Specifyng  pretty-print tables should be optional. Hence no call to
   * fatal-error here when pretty-print tables are not
   * specified. Instead return an emtpy list
   */   
  get-config-p =
    <get-config> "-p" <+ ![]

  pp-options =
    ArgOption("-p"
    , where(<extend-config> ("-p", [<id>]))
    , !"-p file   Use pretty-print table in file"
    )

  pp-conservative-option =    
    Option("-c", <set-config> (Conservative(), "on"), !"-c               Conservative pretty-printing (only format where needed).") 

  is-pp-conservative-enabled =
    where(<get-config> Conservative() => "on")

strategies // to parse a pretty-print table in pp-table syntax to aterms

  ensure-pp-table-parsed =
       has-extension(|"af")
    <+ must-be-pp; lookup-or-parse

  must-be-pp =
        has-extension(|"pp")
    <+ log(|Error(),<concat-strings>["Pretty-print table must have extension .pp.af or .pp :", <id>]) ; <exit>1

  lookup-or-parse =
       lookup-pp-af <+ parse-to-temp-file

  lookup-pp-af =
      !(<add-extension; file-exists> (<id>, "af"), <id>)
    ; where((modification-time, modification-time); geq)
    ; Fst
    ; log(|Notice(),<concat-strings>["Using existing parsed pretty print-table: ",<id>])

  parse-to-temp-file =
     !FILE(<id>)
    ; xtc-parse-pp-table
    ; ?FILE(<id>)
    ; log(|Notice(),<concat-strings>["Using temporary file for parsed print-table: ",<id>])
