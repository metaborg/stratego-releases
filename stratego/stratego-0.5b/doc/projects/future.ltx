\section{Future Work}
	
	\fullslide

	\begin{itemize}

	\item Applications, applications, applications

		\begin{itemize}

		\item StrategoXML
	
		\item TransformationServlets (?)

		\item Program analysis

		\item ...

		\end{itemize}

	\item Language

		\begin{itemize}

		\item Type system (genericity)

		\item Logic (precondition for transformation)

		\item Variable bindings

		\item Dynamic programming

		\item Full higher-order

		\item Lazyness (vs failure)

		\item Injections/Subsorts?

		\end{itemize}

	\item Compiler

		\begin{itemize}

		\item New scheme; setjmp + longjmp

		\item Closures

		\item Separate compilation

		\item Benchmarking

		\item More optimizations

		\item Error messages

		\end{itemize}

	\item StrategoScript

		\begin{itemize}

		\item Signatures

		\item Overlays

		\item Incremental preprocessing
	
		\item Script compilation

		\item StrategoShell: Transformation Component Glue (?)

		\end{itemize}

	\item Library

		\begin{itemize}

		\item Organization
	
		\end{itemize}

	\item Meta-programming

		\begin{itemize}

		\item SB: Stratego Beautyfier

		\item SDoc: Stratego Documentation Generation (?)

		\item SDB: Stratego Debugger

		\item TermCheck: Format checking generator

		\end{itemize}

	\item Documentation

		\begin{itemize}

		\item Reference Manual

		\item Tutorial

		\item Library

		\item SUnit

		\end{itemize}

	\item Other target languages

		\begin{itemize}

		\item Haskell (Joost + Ralf, Eelco D.)

		\item SML (?)
		
		\item Java (JJForester?)
	
		\item ASF+SDF (Traversals ...)

		\end{itemize}

	\item Improve the Emacs mode

	\end{itemize}



