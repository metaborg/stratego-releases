Specification([Imports(["instructions","strategy","list","automaton","stratlib"]),Signature([Operations([OpDecl("Instr",FunType([Var("Strategy"),Var("Env"),Var("REnv")],Var("Instr")))])]),Rules([RDef("io-index",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])]),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])]),Where(BA(Call(SVar("fetch"),[Seq(Scope(["i","xs"],Seq(Match(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Build(Op("TCons",[Var("i"),Op("TCons",[App(Call(SVar("get-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Op("TNil",[])])])))),Match(Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])))]),Var("env")))))]),Rules([RDef("C",[],Rule(Op("Instr",[Var("Id"),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Var("Fail"),Var("env"),Var("rcs")]),Op("Goto",[Str("fail")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Test",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("Tdupl"),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Tpop"),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Not",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Var("Tdupl"),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Cpop"),Op("Cons",[Var("Crestore"),Op("Cons",[Var("Cjump"),Op("Cons",[Op("Label",[Var("fc")]),Op("Nil",[])])])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("C",[],Rule(Op("Instr",[Op("Seq",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("LChoice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Instr",[Op("Choice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Choice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Choices",[Var("s2"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("sc")),AM(Call(SVar("new"),[]),Var("fc")))))),RDef("C",[],Rule(Op("Choices",[Op("Choice",[Var("s1"),Var("s2")]),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Ccontinue",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Choices",[Var("s2"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("C",[],Rule(Op("Choices",[Op("LChoice",[Var("s1"),Var("s2")]),Var("sc"),Var("env"),Var("rcs")]),Op("Choices",[Op("Choice",[Var("s1"),Var("s2")]),Var("sc"),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Choices",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("done")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Cons",[Var("Cpop"),Op("Cons",[Op("Label",[Var("done")]),Op("Nil",[])])])])])])]),Where(Seq(Not(BA(Choice(Call(SVar("Choice"),[Id,Id]),Call(SVar("LChoice"),[Id,Id])),Var("s"))),AM(Call(SVar("new"),[]),Var("done")))))),RDef("C",[],Rule(Op("Instr",[Op("Assign",[Op("Var",[Var("x")])]),Var("env"),Var("rcs")]),Op("MoveTop",[Var("j"),Var("o")]),Where(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]))))),RDef("C",[],Rule(Op("Instr",[Op("Assign",[Op("Var",[Var("x")]),Op("Var",[Var("y")])]),Var("env"),Var("rcs")]),Op("Move",[Var("j1"),Var("o1"),Var("j2"),Var("o2")]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j1"),Op("TCons",[Var("o1"),Op("TNil",[])])])),AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("y"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j2"),Op("TCons",[Var("o2"),Op("TNil",[])])])))))),RDef("C",[],Rule(Op("Instr",[Op("Assign",[Op("Var",[Var("x")]),Var("t")]),Var("env"),Var("rcs")]),Op("Instr",[Op("Where",[Op("Seq",[Op("Build",[Var("t")]),Op("Assign",[Op("Var",[Var("x")])])])]),Var("env"),Var("rcs")]),Where(Seq(Build(Var("t")),Choice(Match(Op("Op",[Wld,Wld])),Choice(Match(Op("Int",[Wld])),Choice(Match(Op("Str",[Wld])),Match(Op("Real",[Wld])))))))))]),Rules([RDef("C",[],Rule(Op("Instr",[Op("Case",[Var("lab"),Var("x"),Var("alts"),Var("def")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Branch",[Op("Case",[Var("lab"),Var("x"),Var("alts"),Var("def")]),Var("sc"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])]),Where(AM(Call(SVar("new"),[]),Var("sc")))))]),Strategies([SDef("C",[],LChoice(Call(SVar("Cbranch"),[]),Call(SVar("CbranchOther"),[])))]),Rules([RDef("Cbranch",[],Rule(Op("Branch",[Op("Case",[Var("lab"),Op("Var",[Var("x")]),Var("alts"),Var("def")]),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Goto",[Var("lab")]),Op("Cons",[Op("Label",[Var("lab")]),Op("Cons",[Op("Alts",[Var("alts"),Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Cons",[Var("ins"),Op("Nil",[])])])])])]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])])),AM(BA(Call(SVar("DefaultLabel"),[]),Op("TCons",[Var("def"),Op("TCons",[Var("sc"),Op("TCons",[Var("env"),Op("TCons",[Var("rcs"),Op("TNil",[])])])])])),Op("TCons",[Var("fc"),Op("TCons",[Var("ins"),Op("TNil",[])])])))))),RDef("Cbranch",[],Rule(Op("Branch",[Op("Continue",[Var("lab")]),Var("sc"),Var("env"),Var("rcs")]),Op("Goto",[Var("lab")]),Id)),RDef("Cbranch",[],Rule(Op("Branch",[Op("Call",[Op("SVar",[Var("f")]),Op("Nil",[])]),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("sc")]),Op("Cons",[Op("Goto",[Var("f")]),Op("Nil",[])])])]),Where(AM(BA(Not(Call(SVar("is-toplevel-proc"),[])),Var("f")),Var("lab"))))),RDef("Cbranch",[],Rule(Op("Branch",[Op("Call",[Op("SVar",[Var("f")]),Op("Nil",[])]),Var("sc"),Var("env"),Var("rcs")]),Op("Ccall",[Var("f"),Op("Nil",[])]),Where(AM(BA(Call(SVar("is-toplevel-proc"),[]),Var("f")),Var("lab"))))),RDef("CbranchOther",[],Rule(Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Nil",[])])])]),Id)),RDef("DefaultLabel",[],Rule(Op("TCons",[Var("Fail"),Op("TCons",[Var("sc"),Op("TCons",[Var("env"),Op("TCons",[Var("rcs"),Op("TNil",[])])])])]),Op("TCons",[Str("fail"),Op("TCons",[Op("Block",[Op("Nil",[])]),Op("TNil",[])])]),Id)),RDef("DefaultLabel",[],Rule(Op("TCons",[Var("s"),Op("TCons",[Var("sc"),Op("TCons",[Var("env"),Op("TCons",[Var("rcs"),Op("TNil",[])])])])]),Op("TCons",[Var("lab"),Op("TCons",[Op("Block",[Op("Cons",[Op("Label",[Var("lab")]),Op("Cons",[Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Op("TNil",[])])]),Where(Seq(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("s"),Op("TCons",[Var("Fail"),Op("TNil",[])])])),AM(Call(SVar("new"),[]),Var("lab")))))),RDef("C",[],Rule(Op("Alts",[Op("Nil",[]),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Alts",[Op("Cons",[Op("Alt",[Var("c"),Var("args"),Var("s")]),Op("Nil",[])]),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[App(Call(SVar("TestConstructor"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("c"),Op("TCons",[Var("fc"),Op("TNil",[])])])])),Op("Cons",[Op("Block",[Var("get-args")]),Op("Cons",[Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])]),Where(AM(BA(Call(SVar("nzip0"),[Call(SVar("CArg"),[Build(Var("env")),Build(Var("x"))])]),Var("args")),Var("get-args"))))),RDef("C",[],Rule(Op("Alts",[Op("Cons",[Op("Alt",[Var("c"),Var("args"),Var("s")]),Var("alts")]),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[App(Call(SVar("TestConstructor"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("c"),Op("TCons",[Var("match-fail"),Op("TNil",[])])])])),Op("Cons",[Op("Block",[Var("get-args")]),Op("Cons",[Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("match-fail")]),Op("Cons",[Op("Alts",[Var("alts"),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(Seq(AM(Build(Var("alts")),Op("Cons",[Wld,Wld])),Seq(AM(Call(SVar("new"),[]),Var("match-fail")),AM(BA(Call(SVar("nzip0"),[Call(SVar("CArg"),[Build(Var("env")),Build(Var("x"))])]),Var("args")),Var("get-args"))))))),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Fun",[Var("f"),Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestFunFC",[Op("VAR",[Var("lab")]),Var("fc"),Op("Egetd",[Var("j"),Var("o")])]),Where(AM(BA(Call(SVar("get-afun"),[]),Op("AFun",[Var("f"),Var("n")])),Var("lab"))))),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Int",[Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestInt",[Var("j"),Var("o"),Var("n"),Var("fc")]),Id)),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Real",[Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestReal",[Var("j"),Var("o"),Var("n"),Var("fc")]),Id)),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Str",[Var("x")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestStr",[Var("j"),Var("o"),App(Call(SVar("escape"),[]),Var("x")),Var("fc")]),Id)),RDef("CArg",["env","src"],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Var",[Var("x")]),Op("TNil",[])])]),Op("MoveArg",[Var("i1"),Var("o1"),Var("i2"),Var("o2"),Var("n")]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("env"),[]),Op("TNil",[])),Op("TNil",[])])])),Op("TCons",[Var("i1"),Op("TCons",[Var("o1"),Op("TNil",[])])])),AM(Call(SVar("src"),[]),Op("TCons",[Var("i2"),Op("TCons",[Var("o2"),Op("TNil",[])])])))))),RDef("C",[],Rule(Op("Instr",[Op("Rec",[Var("x"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("sc")]),Op("Cons",[Op("Label",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Return"),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("sc"))))),RDef("C",[],Rule(Op("Instr",[Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Ccall",[Var("lab"),Op("Nil",[])]),Where(AM(BA(Call(SVar("is-toplevel-proc"),[]),Var("x")),Var("lab"))))),RDef("C",[],Rule(Op("Instr",[Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("ret")]),Op("Cons",[Op("Goto",[Var("x")]),Op("Cons",[Op("Label",[Var("ret")]),Op("Nil",[])])])])]),Where(Seq(BA(Not(Call(SVar("is-toplevel-proc"),[])),Var("x")),AM(Call(SVar("new"),[]),Var("ret")))))),RDef("C",[],Rule(Op("Instr",[Op("Let",[Var("sdef"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("y")]),Op("Cons",[Op("Instr",[Var("sdef"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("y")]),Op("Nil",[])])])])])]),Where(AM(Call(SVar("new"),[]),Var("y"))))),RDef("Ctop",[],Rule(Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("PROC",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("ENDPROC",[]),Op("Nil",[])])])])]),Id)),RDef("Ctop",[],Rule(Op("Instr",[Op("SDef",[Var("pragmas"),Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Label",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Return"),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("SDef",[Var("pragmas"),Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Path",[Var("i"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TpushIthSon",[Var("i")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("TputIthSon",[Var("i")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Cong",[Var("f"),Var("ss")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TestFunTop",[Op("VAR",[Var("lab")])]),Op("Cons",[Var("TravInit"),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Cons",[Var("AllBuild"),Op("Nil",[])])])])])]),Where(AM(BA(Call(SVar("get-afun"),[]),Op("AFun",[Var("f"),App(Call(SVar("length"),[]),Var("ss"))])),Var("lab"))))),RDef("C",[],Rule(Op("Instr",[Op("CongWld",[Var("ss")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("TravInit"),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Cons",[Var("AllBuild"),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongKids",[Var("Nil")]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongKids",[Op("Cons",[Var("s"),Var("ss")])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("OneNextSon"),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("All",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("AllInit"),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("AllNextSon",[Var("c2")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Var("AllBuild"),Op("Nil",[])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("One",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("IsAppl"),Op("Cons",[Var("OneInit"),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Var("OneNextSon"),Op("Cons",[Op("Cpush",[Var("c1")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Cpop"),Op("Cons",[Var("OneBuild"),Op("Nil",[])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Some",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("IsAppl"),Op("Cons",[Var("SomeInit"),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("SomeNextSon",[Var("c2")]),Op("Cons",[Op("Cpush",[Var("c1")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Cpop"),Op("Cons",[Var("CounterOK"),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Var("SomeBuild"),Op("Nil",[])])])])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Thread",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("ThreadInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("ThreadNextSon",[Var("c2")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("ThreadSetEnv",[]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("ThreadBuild",[]),Op("Nil",[])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Scope",[Var("xs"),Var("s")]),Var("env"),Var("i")]),Op("Block",[Op("Cons",[Op("Epushd",[Var("i"),Var("o")]),Op("Cons",[Op("Instr",[Var("s"),Op("Cons",[Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("env")]),App(Call(SVar("add"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])]))]),Op("Cons",[Op("Epopd",[Var("i"),Var("o")]),Op("Nil",[])])])])]),Where(AM(BA(Call(SVar("length"),[]),Var("xs")),Var("o"))))),RDef("C",[],Rule(Op("Instr",[Op("Where",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("Tdupl"),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Var("Tpop"),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Prim",[Var("x")]),Var("env"),Var("rcs")]),Op("Iprim",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Prim2",[Var("x"),Var("y")]),Var("env"),Var("rcs")]),Op("Iprim2",[Var("x"),Var("y")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CountRule",[Var("x")]),Var("env"),Var("rcs")]),Op("ICountRule",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Var("t")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Block",[Var("xs")]),Op("Cons",[Op("Tset",[Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")])]),Op("Nil",[])])])]),Where(AM(BA(Seq(Call(SVar("tvars"),[]),Call(SVar("map"),[Call(SVar("TestVar"),[Build(Var("env")),Build(Var("rcs"))])])),Var("t")),Var("xs"))))),RDef("TestVar",["env","rcs"],Rule(Var("x"),Var("ins"),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("env"),[]),Op("TNil",[])),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[App(Call(SVar("rcs"),[]),Op("TNil",[])),Op("TNil",[])])])),Build(Op("NotNULL",[Var("o")]))),AM(Build(Op("NotNULLd",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C",[],Rule(Op("BuildTerm",[Op("Str",[Var("x")]),Var("env"),Var("rcs")]),Op("ATmakeString",[App(Call(SVar("escape"),[]),Var("x"))]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Int",[Var("x")]),Var("env"),Var("rcs")]),Op("MakeInt",[Var("x")]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Real",[Var("x")]),Var("env"),Var("rcs")]),Op("ATmakeReal",[Var("x")]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Var",[Var("x")]),Var("env"),Var("rcs")]),Var("ins"),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[Var("rcs"),Op("TNil",[])])])),Build(Op("Eget",[Var("o")]))),AM(Build(Op("Egetd",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C",[],Rule(Op("BuildTerm",[Op("BuildDefault",[Var("t")]),Var("env"),Var("rcs")]),Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Op",[Var("f"),Var("ts")]),Var("env"),Var("rcs")]),Explode(Var("app"),Op("Cons",[Var("f"),App(Call(SVar("map"),[LRule(Rule(Var("t"),Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")]),Id))]),Var("ts"))])),Where(Seq(AM(BA(Call(SVar("length"),[]),Var("ts")),Var("len")),Seq(BA(Call(SVar("leq"),[]),Op("TCons",[Var("len"),Op("TCons",[Int(6),Op("TNil",[])])])),AM(BA(Call(SVar("conc-strings"),[]),Op("TCons",[Str("App"),Op("TCons",[App(Call(SVar("int-to-string"),[]),Var("len")),Op("TNil",[])])])),Var("app"))))))),RDef("C",[],Rule(Op("BuildTerm",[Op("Op",[Var("f"),Var("ts")]),Var("env"),Var("rcs")]),Op("AppN",[Var("f"),Explode(Str("ATmakeList"),Op("Cons",[Var("len"),Var("args")]))]),Where(Seq(AM(BA(Call(SVar("length"),[]),Var("ts")),Var("len")),Seq(BA(Call(SVar("gt"),[]),Op("TCons",[Var("len"),Op("TCons",[Int(6),Op("TNil",[])])])),AM(BA(Call(SVar("map"),[LRule(Rule(Var("t"),Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")]),Id))]),Var("ts")),Var("args"))))))),RDef("C",[],Rule(Op("BuildTerm",[Op("App",[Var("s"),Var("t")]),Var("env"),Var("rcs")]),Op("AppEncountered",[Op("App",[Var("s"),Var("t")])]),Where(Call(SVar("debug"),[Build(Str("compiler.r: App encountered: "))]))))])])