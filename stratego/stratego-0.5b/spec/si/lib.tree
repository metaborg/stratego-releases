Specification([Strategies([SDef("free-vars",["getvars","boundvars"],Rec("x",LChoice(Call(SVar("getvars"),[]),Seq(Call(SVar("split"),[Call(SVar("collect-kids"),[Call(SVar("x"),[])]),LChoice(Call(SVar("boundvars"),[]),Build(Op("Nil",[])))]),Call(SVar("diff"),[]))))),SDef("free-vars",["getvars","boundvars","boundin"],Rec("x",LChoice(Call(SVar("getvars"),[]),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("free-vars",["getvars","boundvars","boundin","eq"],Rec("x",LChoice(Call(SVar("getvars"),[]),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[Call(SVar("eq"),[])])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])])))))]),Strategies([SDef("free-vars2",["getvars","boundvars"],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),Seq(Call(SVar("split"),[Call(SVar("collect-kids"),[Call(SVar("x"),[])]),LChoice(Call(SVar("boundvars"),[]),Build(Op("Nil",[])))]),Call(SVar("diff"),[]))]),Call(SVar("union"),[])))),SDef("free-vars2",["getvars","boundvars","boundin"],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))]),Call(SVar("union"),[])))),SDef("free-vars2",["getvars","boundvars","boundin","eq"],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),LChoice(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Seq(Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[Call(SVar("eq"),[])])),Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])))),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))]),Call(SVar("union"),[]))))]),Strategies([SDef("equal",[],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Call(SVar("UfDecompose"),[]))]))]),Rules([RDef("UfIdem",[],Rule(Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("ps")]),Var("ps"),Id)),RDef("UfDecompose",[],Rule(Op("Cons",[Op("TCons",[Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TNil",[])])]),Var("ps")]),App(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("ps"),Op("TNil",[])])])),Id))]),Strategies([SDef("diff",[],Call(SVar("for"),[LRule(Rule(Var("ps"),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ps"),Op("TNil",[])])]),Id)),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),LChoice(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[LChoice(Call(SVar("UfIdem"),[]),Call(SVar("UfDecompose"),[])),Call(SVar("TNil"),[])])]),Call(SVar("UfShift"),[]))]))]),Rules([RDef("UfShift",[],Rule(Op("TCons",[Var("ps1"),Op("TCons",[Op("Cons",[Var("p"),Var("ps2")]),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Var("p"),Var("ps1")]),Op("TCons",[Var("ps2"),Op("TNil",[])])]),Id))]),Strategies([SDef("pattern-match",["isvar"],Call(SVar("for"),[LRule(Rule(Var("pairs"),Op("TCons",[Var("pairs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Var("sbs"),Id)),LChoice(Call(SVar("TCons"),[Call(SVar("UfIdem"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Choice(Call(SVar("MatchVar"),[Call(SVar("isvar"),[])]),Call(SVar("TCons"),[Call(SVar("UfDecompose"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])))]))]),Rules([RDef("MatchVar",["isvar"],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Var("ps"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("sbs")]),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("isvar"),[]),Var("x")),BA(Not(Call(SVar("fetch"),[Scope(["z"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("z"),Op("TNil",[])])])),BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("y"),Op("TCons",[Var("z"),Op("TNil",[])])]))))])),Var("sbs"))))))]),Strategies([SDef("unify",["isvar"],Call(SVar("for"),[LRule(Rule(Var("pairs"),Op("TCons",[Var("pairs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),LRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Var("sbs"),Id)),LChoice(Call(SVar("TCons"),[Call(SVar("UfIdem"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Choice(Call(SVar("UfVar"),[Call(SVar("isvar"),[])]),LChoice(Call(SVar("UfSwap"),[Call(SVar("isvar"),[])]),Call(SVar("TCons"),[Call(SVar("UfDecompose"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]))))]))]),Rules([RDef("UfVar",["isvar"],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Var("ps'"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("sbs''")]),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("isvar"),[]),Var("x")),Seq(BA(Not(Call(SVar("in"),[])),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),AM(BA(Call(SVar("substitute"),[Call(SVar("isvar"),[])]),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("Nil",[])]),Op("TCons",[Op("TCons",[Var("sbs"),Op("TCons",[Var("ps"),Op("TNil",[])])]),Op("TNil",[])])])),Op("TCons",[Var("sbs''"),Op("TCons",[Var("ps'"),Op("TNil",[])])]))))))),RDef("UfSwap",["isvar"],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Where(Seq(BA(Not(Call(SVar("isvar"),[])),Var("x")),BA(Call(SVar("isvar"),[]),Var("y"))))))]),Rules([RDef("in",[],Rule(Op("TCons",[Var("a"),Op("TCons",[Var("t"),Op("TNil",[])])]),App(Call(SVar("oncetd"),[Match(Var("a"))]),Var("t")),Id))]),Strategies([SDef("equal",["fltr"],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Seq(Call(SVar("try"),[Call(SVar("Cons"),[Call(SVar("TCons"),[Call(SVar("fltr"),[]),Call(SVar("TCons"),[Call(SVar("fltr"),[]),Call(SVar("TNil"),[])])]),Id])]),Call(SVar("UfDecompose"),[])))]))]),Strategies([SDef("equal",["fltr1","fltr2"],Call(SVar("for"),[Id,Call(SVar("Nil"),[]),LChoice(Call(SVar("UfIdem"),[]),Seq(Call(SVar("Cons"),[Seq(Call(SVar("TCons"),[Call(SVar("try"),[Call(SVar("fltr1"),[])]),Call(SVar("TCons"),[Call(SVar("try"),[Call(SVar("fltr1"),[])]),Call(SVar("TNil"),[])])]),Call(SVar("try"),[Call(SVar("fltr2"),[])])),Id]),Call(SVar("UfDecompose"),[])))]))]),Rules([RDef("RnVar",["isvar"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(Call(SVar("isvar"),[Seq(Call(SVar("split"),[Id,Build(Var("env"))]),Call(SVar("lookup"),[]))]),Var("t")),Id)),RDef("RnBinding",["bndvrs"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2"))))))),RDef("DistBinding",["s"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(All(LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id))),Var("t")),Id))]),Strategies([SDef("rename",["isvar","bndvars"],Seq(LRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[])])))]))))]),Rules([RDef("DistBinding",["s","boundin"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(Call(SVar("boundin"),[LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id)),LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env1"),Op("TNil",[])])])),Id)),Id]),Var("t")),Id))]),Strategies([SDef("rename",["isvar","bndvars","boundin"],Seq(LRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])])))]))))]),Rules([RDef("RnBinding",["bndvrs","paste"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("paste"),[Build(Var("ys"))]),Var("t")),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2")))))))]),Strategies([SDef("rename",["isvar","bndvars","boundin","paste"],Seq(LRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])])))]))))]),Strategies([SDef("subs-args",[],LChoice(Match(Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),LRule(Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TCons",[Var("t"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TNil",[])])]),Id))))]),Rules([RDef("SubsVar",["isvar","mksbs"],Rule(Var("t"),App(Call(SVar("lookup"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("sbs"),Op("TNil",[])])])),Where(Seq(AM(BA(Call(SVar("isvar"),[]),Var("t")),Var("x")),AM(Call(SVar("mksbs"),[]),Var("sbs"))))))]),Strategies([SDef("substitute",["isvar","ren"],Seq(AM(Call(SVar("subs-args"),[]),Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Var("t")),Call(SVar("alltd"),[Seq(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Call(SVar("ren"),[]))])))),SDef("substitute",["isvar"],Call(SVar("substitute"),[Call(SVar("isvar"),[]),Id])),SDef("substitute",["isvar","varshape","bndvars","boundin","paste","ren"],Seq(AM(Call(SVar("subs-args"),[]),Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("varshape"),[])]),LChoice(Seq(Call(SVar("Fst"),[]),Seq(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Call(SVar("ren"),[]))),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])]))))]))))),SDef("substitute",["isvar","varshape","bndvars","boundin","paste"],Call(SVar("substitute"),[Call(SVar("isvar"),[]),Call(SVar("varshape"),[]),Call(SVar("bndvars"),[]),Call(SVar("boundin"),[]),Call(SVar("paste"),[]),Id]))]),Strategies([SDef("create-table",[],Prim("_ST_create_table")),SDef("destroy-table",[],Prim("_ST_destroy_table")),SDef("table-put",[],Prim("_ST_table_put")),SDef("table-get",[],Prim("_ST_table_get")),SDef("table-remove",[],Prim("_ST_table_remove")),SDef("table-keys",[],Prim("_ST_table_keys")),SDef("table-getlist",[],Seq(Match(Var("name")),Seq(Call(SVar("table-keys"),[]),Call(SVar("map"),[LRule(Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("table-get"),[]),Op("TCons",[Var("name"),Op("TCons",[Var("x"),Op("TNil",[])])])),Op("TNil",[])])]),Id))])))),SDef("table-putlist",[],Seq(Match(Op("TCons",[Var("name"),Op("TCons",[Var("list"),Op("TNil",[])])])),BA(Call(SVar("map"),[Scope(["x","y"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),BA(Call(SVar("table-put"),[]),Op("TCons",[Var("name"),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])]))))]),Var("list")))),SDef("set",[],Call(SVar("table-put"),[])),SDef("get",[],Call(SVar("table-get"),[])),SDef("push-set",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("val"),Op("TNil",[])])])])),Where(BA(Call(SVar("set"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Op("Cons",[Var("val"),App(LChoice(Call(SVar("get"),[]),Build(Op("Nil",[]))),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])]))]),Op("TNil",[])])])]))))),SDef("pop-get",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Seq(Where(Seq(AM(BA(Call(SVar("get"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("Cons",[Var("x"),Var("xs")])),BA(Call(SVar("set"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("xs"),Op("TNil",[])])])])))),Build(Var("x"))))),SDef("union-set",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("val"),Op("TNil",[])])])])),Where(BA(Call(SVar("set"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[App(Call(SVar("union"),[]),Op("TCons",[Var("val"),Op("TCons",[App(LChoice(Call(SVar("get"),[]),Build(Op("Nil",[]))),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("TNil",[])])])),Op("TNil",[])])])]))))),SDef("diff-set",[],Seq(Match(Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[Var("val"),Op("TNil",[])])])])),Where(BA(Call(SVar("set"),[]),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TCons",[App(Call(SVar("diff"),[]),Op("TCons",[App(LChoice(Call(SVar("get"),[]),Build(Op("Nil",[]))),Op("TCons",[Var("table"),Op("TCons",[Var("key"),Op("TNil",[])])])),Op("TCons",[Var("val"),Op("TNil",[])])])),Op("TNil",[])])])])))))]),Strategies([SDef("exit",[],Prim("_ST_exit")),SDef("call",[],Prim("_ST_call")),SDef("call-noisy",[],Prim("_ST_call_noisy")),SDef("get-pid",[],Prim("_ST_get_pid")),SDef("rm-files",[],Seq(Match(Var("files")),Where(BA(Call(SVar("call"),[]),Op("TCons",[Str("rm"),Op("TCons",[Op("Cons",[Str("-f"),Var("files")]),Op("TNil",[])])]))))),SDef("pipe",["c","suf2"],Call(SVar("pipe'"),[Call(SVar("c"),[]),Call(SVar("suf2"),[]),Build(Op("Nil",[]))])),SDef("pipe'",["c","suf2","args"],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf2"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("call"),[]),Op("TCons",[App(Call(SVar("c"),[]),Op("TNil",[])),Op("TCons",[App(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("args"),[]),Op("TNil",[])),Op("TCons",[Op("Cons",[Str("-i"),Op("Cons",[Var("in"),Op("Cons",[Str("-o"),Op("Cons",[Var("out"),Op("Nil",[])])])])]),Op("TNil",[])])])),Op("TNil",[])])]))))))),SDef("transform-file",["s","suf"],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("TCons",[Var("in"),Op("TCons",[Var("out"),Op("TNil",[])])]))))))),SDef("apply-to-file",["s"],Seq(Match(Op("TCons",[Var("in"),Op("TCons",[Var("out"),Op("TNil",[])])])),Seq(Where(AM(BA(Seq(Call(SVar("ReadFromFile"),[]),Call(SVar("s"),[])),Var("in")),Var("trm"))),Where(BA(Call(SVar("WriteToBinaryFile"),[]),Op("TCons",[Var("out"),Op("TCons",[Var("trm"),Op("TNil",[])])])))))),SDef("copy-file",["s","new-base","new-suf"],Seq(Match(Op("TCons",[Var("base"),Op("TCons",[Var("suf"),Op("TNil",[])])])),Seq(Call(SVar("TCons"),[Call(SVar("new-base"),[]),Call(SVar("TCons"),[Call(SVar("new-suf"),[]),Call(SVar("TNil"),[])])]),Seq(Match(Op("TCons",[Var("nbase"),Op("TCons",[Var("nsuf"),Op("TNil",[])])])),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("TCons",[App(Call(SVar("conc-strings"),[]),Op("TCons",[Var("base"),Op("TCons",[Var("suf"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("conc-strings"),[]),Op("TCons",[Var("nbase"),Op("TCons",[Var("nsuf"),Op("TNil",[])])])),Op("TNil",[])])])))))))]),Signature([Sorts([Sort("Option",Nokind)]),Operations([OpDecl("Program",FunType([Var("String")],Var("Option"))),OpDecl("Undefined",FunType([Var("String")],Var("Option")))])]),Strategies([SDef("parse-options",["s"],Call(SVar("Cons"),[LRule(Rule(Var("x"),Op("Program",[Var("x")]),Id)),Rec("x",LChoice(Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))),Call(SVar("UndefinedOption"),[])))]))]),Rules([RDef("Option",["is-flag","label"],Rule(Op("Cons",[Var("flag"),Var("rest")]),Op("Cons",[App(Call(SVar("label"),[]),Op("TNil",[])),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("ArgOption",["is-flag","label"],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg"),Var("rest")])]),Op("Cons",[App(Call(SVar("label"),[]),Var("arg")),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("Arg2Option",["is-flag","label"],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg1"),Op("Cons",[Var("arg2"),Var("rest")])])]),Op("Cons",[App(Call(SVar("label"),[]),Op("TCons",[Var("arg1"),Op("TCons",[Var("arg2"),Op("TNil",[])])])),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("UndefinedOption",[],Rule(Op("Cons",[Var("x"),Var("rest")]),Op("Cons",[Op("Undefined",[Var("x")]),Var("rest")]),Id))]),Strategies([SDef("defined-option",["s"],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("option-defined",["s"],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("arg-option-value",["s"],Call(SVar("fetch"),[Call(SVar("s"),[])]))]),Signature([Operations([OpDecl("Silent",ConstType(Var("Option"))),OpDecl("Verbose",ConstType(Var("Option"))),OpDecl("Version",ConstType(Var("Option"))),OpDecl("Input",FunType([Var("String")],Var("Option"))),OpDecl("Output",FunType([Var("String")],Var("Option"))),OpDecl("Binary",ConstType(Var("Option"))),OpDecl("Statistics",ConstType(Var("Option"))),OpDecl("Help",ConstType(Var("Option"))),OpDecl("Runtime",FunType([Var("Real")],Var("Option"))),OpDecl("DeclVersion",FunType([Var("String")],Var("Option")))])]),Strategies([SDef("iowrap",["strat"],Call(SVar("iowrapO"),[Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("strat"),[]),Call(SVar("TNil"),[])])]),Fail])),SDef("iowrapO",["strat","extra-options"],Seq(Call(SVar("parse-options"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[]))]),LChoice(Call(SVar("need-help"),[]),LChoice(Seq(Call(SVar("input-file'"),[]),Seq(Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]),Seq(Call(SVar("output-file'"),[]),Call(SVar("report-success"),[])))),Call(SVar("report-failure"),[]))))),SDef("iowrapNoOutput",["strat","extra-options"],Seq(Call(SVar("parse-options"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[]))]),LChoice(Call(SVar("need-help"),[]),LChoice(Seq(Call(SVar("input-file'"),[]),Seq(Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]),Call(SVar("report-success"),[]))),Call(SVar("report-failure"),[])))))]),Strategies([SDef("io-options",[],Choice(Call(SVar("Option"),[Match(Str("-S")),Build(Op("Silent",[]))]),Choice(Call(SVar("Option"),[Match(Str("--silent")),Build(Op("Silent",[]))]),Choice(Call(SVar("Option"),[Match(Str("--verbose")),Build(Op("Verbose",[]))]),Choice(Call(SVar("Option"),[Match(Str("-v")),Build(Op("Version",[]))]),Choice(Call(SVar("Option"),[Match(Str("--version")),Build(Op("Version",[]))]),Choice(Call(SVar("ArgOption"),[Match(Str("@version")),LRule(Rule(Var("x"),Op("DeclVersion",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("-i")),LRule(Rule(Var("x"),Op("Input",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("--input")),LRule(Rule(Var("x"),Op("Input",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("-o")),LRule(Rule(Var("x"),Op("Output",[Var("x")]),Id))]),Choice(Call(SVar("ArgOption"),[Match(Str("--output")),LRule(Rule(Var("x"),Op("Output",[Var("x")]),Id))]),Choice(Call(SVar("Option"),[Match(Str("-b")),Build(Op("Binary",[]))]),Choice(Call(SVar("Option"),[Match(Str("-s")),Build(Op("Statistics",[]))]),Choice(Call(SVar("Option"),[Match(Str("--help")),Build(Op("Help",[]))]),Choice(Call(SVar("Option"),[Match(Str("-h")),Build(Op("Help",[]))]),Call(SVar("Option"),[Match(Str("-?")),Build(Op("Help",[]))])))))))))))))))),SDef("usage'",[],Where(Seq(Call(SVar("option-defined"),[Match(Op("Program",[Var("prog")]))]),Seq(BA(Call(SVar("printnl"),[]),Op("TCons",[Var("stderr"),Op("TCons",[Op("Cons",[Str("usage : "),Op("Cons",[Var("prog"),Op("Cons",[Str(" [-S] [-i file] [-o file] [-b] [-s] [--help|-h|-?]"),Op("Nil",[])])])]),Op("TNil",[])])])),BA(Call(SVar("exit"),[]),Int(1)))))),SDef("need-help",[],Seq(Call(SVar("option-defined"),[Choice(Call(SVar("Help"),[]),Call(SVar("Undefined"),[Id]))]),Call(SVar("usage'"),[]))),SDef("need-help",["u"],Seq(Call(SVar("option-defined"),[Choice(Call(SVar("Help"),[]),Choice(Call(SVar("Undefined"),[Id]),Call(SVar("Version"),[])))]),Call(SVar("u"),[]))),SDef("input-file'",[],Seq(Where(LChoice(Call(SVar("option-defined"),[Match(Op("Input",[Var("infile")]))]),AM(Build(Var("stdin")),Var("infile")))),Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("infile"))]))),SDef("apply-strategy",["strat"],Seq(Where(Call(SVar("dtime"),[])),Seq(Call(SVar("strat"),[]),Seq(Where(AM(Call(SVar("dtime"),[]),Var("runtime"))),LRule(Rule(Op("TCons",[Var("options"),Op("TCons",[Var("trm"),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Op("Runtime",[Var("runtime")]),Var("options")]),Op("TCons",[Var("trm"),Op("TNil",[])])]),Id)))))),SDef("output-file'",[],Seq(Where(Call(SVar("TCons"),[LChoice(Call(SVar("option-defined"),[Match(Op("Output",[Var("outfile")]))]),AM(Build(Var("stdout")),Var("outfile"))),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("split"),[Build(Var("outfile")),Id]),Call(SVar("TNil"),[])])]),LChoice(Call(SVar("TCons"),[Call(SVar("option-defined"),[Match(Op("Binary",[]))]),Call(SVar("TCons"),[Call(SVar("WriteToBinaryFile"),[]),Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("WriteToTextFile"),[]),Call(SVar("TNil"),[])])]))))),SDef("report-success",[],Seq(Where(Call(SVar("try"),[Seq(Call(SVar("TCons"),[Not(Call(SVar("option-defined"),[Match(Op("Silent",[]))])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("option-defined"),[Match(Op("Runtime",[Var("runtime")]))]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("option-defined"),[Match(Op("Program",[Var("prog")]))]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),BA(Call(SVar("printnl"),[]),Op("TCons",[Var("stderr"),Op("TCons",[Op("Cons",[Var("prog"),Op("Cons",[Str(" ("),Op("Cons",[Var("runtime"),Op("Cons",[Str(" secs)"),Op("Nil",[])])])])]),Op("TNil",[])])])))))])),BA(Call(SVar("exit"),[]),Int(0)))),SDef("report-failure",[],Seq(BA(Call(SVar("printnl"),[]),Op("TCons",[Var("stderr"),Op("TCons",[Op("Cons",[Str("rewriting failed"),Op("Nil",[])]),Op("TNil",[])])])),BA(Call(SVar("exit"),[]),Int(1))))]),Strategies([SDef("memo-init",[],Call(SVar("create-table"),[])),SDef("memo-purge",[],Call(SVar("destroy-table"),[]))]),Rules([RDef("memo",["name","s"],Rule(Var("t"),Var("t'"),Where(LChoice(AM(BA(Call(SVar("table-get"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Var("t"),Op("TNil",[])])])),Var("t'")),Seq(AM(BA(Call(SVar("s"),[]),Var("t")),Var("t'")),BA(Call(SVar("table-put"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Var("t"),Op("TCons",[Var("t'"),Op("TNil",[])])])])))))))]),Rules([RDef("find-in-path",[],Rule(Op("TCons",[Var("file"),Op("TCons",[Var("path"),Op("TNil",[])])]),App(Rec("x",LChoice(LRule(Rule(Op("Cons",[Var("dir"),Wld]),App(Seq(Call(SVar("concat-strings"),[]),Call(SVar("file-exists"),[])),Op("Cons",[Var("dir"),Op("Cons",[Str("/"),Op("Cons",[Var("file"),Op("Nil",[])])])])),Id)),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))),Var("path")),Id))]),Strategies([SDef("find-in-path",["mkpath"],LChoice(Call(SVar("file-exists"),[]),LChoice(Seq(Call(SVar("split"),[Id,Call(SVar("mkpath"),[])]),Call(SVar("find-in-path"),[])),LRule(Rule(Var("x"),App(Call(SVar("fatal-error"),[]),Op("Cons",[Str("no such file: "),Op("Cons",[Var("x"),Op("Nil",[])])])),Id))))),SDef("find-file",["mkpath","ext"],Seq(Call(SVar("guarantee-extension"),[Call(SVar("ext"),[])]),Call(SVar("find-in-path"),[Call(SVar("mkpath"),[])])))]),Strategies([SDef("dtime",[],Prim("_ST_dtime"))]),Signature([Sorts([Sort("File",Nokind)]),Operations([OpDecl("stdin",ConstType(Var("File"))),OpDecl("stdout",ConstType(Var("File"))),OpDecl("stderr",ConstType(Var("File")))])]),Strategies([SDef("print",[],Prim("_ST_print")),SDef("printnl",[],Prim("_ST_printnl")),SDef("printascii",[],Prim("_ST_printascii")),SDef("file-exists",[],Prim("_ST_file_exists")),SDef("open-file",[],Prim("_ST_open_file")),SDef("append-file",[],Prim("_ST_append_file")),SDef("close-file",[],Prim("_ST_close_file")),SDef("ReadFromFile",[],Prim("_ST_ReadFromFile")),SDef("WriteToBinaryFile",[],Prim("_ST_WriteToBinaryFile")),SDef("WriteToTextFile",[],Prim("_ST_WriteToTextFile")),SDef("print-stack",[],Prim("_ST_PrintStack"))]),Strategies([SDef("open",["file"],Seq(Call(SVar("file"),[]),Call(SVar("ReadFromFile"),[]))),SDef("save",["file"],Seq(Call(SVar("split"),[Call(SVar("file"),[]),Id]),Call(SVar("WriteToTextFile"),[]))),SDef("debug",[],Where(Seq(Call(SVar("split"),[Build(Var("stderr")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("printnl"),[])))),SDef("debug",["msg"],Where(Seq(Call(SVar("split"),[Build(Var("stderr")),LRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id))]),Call(SVar("printnl"),[])))),SDef("say",["msg"],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[])))),SDef("debug-stdout",["msg"],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id))]),Call(SVar("printnl"),[])))),SDef("trace",["msg","s"],Seq(Call(SVar("debug"),[Call(SVar("msg"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("succeeded: "))])),Call(SVar("debug"),[Build(Str("failed: "))])))),SDef("error",[],Where(Seq(Call(SVar("split"),[Build(Var("stderr")),Id]),Call(SVar("printnl"),[])))),SDef("fatal-error",[],Where(Seq(Call(SVar("error"),[]),BA(Call(SVar("exit"),[]),Int(1))))),SDef("printchar",[],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("printascii"),[])))),SDef("printstring",[],Where(Seq(Call(SVar("split"),[Build(Var("stdout")),LRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Call(SVar("print"),[])))),SDef("print-strings-nl",["out"],Where(Seq(Call(SVar("split"),[Call(SVar("out"),[]),Id]),Call(SVar("printnl"),[])))),SDef("obsolete",["msg"],Where(BA(Call(SVar("debug"),[Call(SVar("msg"),[])]),Str(": obsolete library strategy"))))]),Strategies([SDef("stdio",["s"],LChoice(Seq(BA(Call(SVar("ReadFromFile"),[]),Var("stdin")),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Var("stdout")),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("stdioO",["s"],LChoice(Seq(Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("stdin"))]),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Var("stdout")),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])]))))]),Strategies([SDef("is-real",[],Prim("_ST_is_real")),SDef("cos",[],Prim("_ST_cos")),SDef("sin",[],Prim("_ST_sin")),SDef("sqrt",[],Prim("_ST_sqrt"))]),Strategies([SDef("is-int",[],Prim("_ST_is_int")),SDef("minus",[],Prim("_ST_minus")),SDef("plus",[],Prim("_ST_plus")),SDef("add",[],Prim("_ST_add")),SDef("subt",[],Prim("_ST_subt")),SDef("mul",[],Prim("_ST_mul")),SDef("div",[],Prim("_ST_div")),SDef("mod",[],Prim("_ST_mod")),SDef("geq",[],Prim("_ST_geq")),SDef("gt",[],Prim("_ST_gt")),SDef("lt",[],Not(Call(SVar("geq"),[]))),SDef("leq",[],Not(Call(SVar("gt"),[]))),SDef("max",[],Prim("_ST_max")),SDef("min",[],Prim("_ST_min")),SDef("int",[],Prim("_ST_int"))]),Strategies([SDef("sum",[],Call(SVar("foldr"),[Build(Int(0)),Call(SVar("add"),[])])),SDef("average",[],Seq(Call(SVar("split"),[Call(SVar("sum"),[]),Call(SVar("length"),[])]),Call(SVar("div"),[]))),SDef("list-min",[],Call(SVar("list-accum"),[Call(SVar("min"),[])])),SDef("list-max",[],Call(SVar("list-accum"),[Call(SVar("max"),[])])),SDef("list-accum",["s"],Seq(Call(SVar("split"),[Call(SVar("Tl"),[]),Call(SVar("Hd"),[])]),Call(SVar("foldl"),[Call(SVar("s"),[])]))),SDef("add-lists",[],Call(SVar("list-accum"),[Call(SVar("zip"),[LChoice(Call(SVar("add"),[]),Build(Str("")))])])),SDef("averages",[],Scope(["len"],Seq(Where(AM(Call(SVar("length"),[]),Var("len"))),Seq(Call(SVar("add-lists"),[]),Call(SVar("map"),[Call(SVar("try"),[Call(SVar("sect"),[Call(SVar("div"),[]),Build(Var("len"))])])]))))),SDef("round-list",[],Call(SVar("map"),[LChoice(Test(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(100))])),Call(SVar("int"),[]))]))]),Strategies([SDef("mkterm",[],Prim("_ST_mkterm")),SDef("explode-term",[],Prim("_ST_explode_term")),SDef("address-lt",[],Prim("_ST_address_lt")),SDef("address",[],Prim("_ST_address"))]),Rules([RDef("sect",["op","arg"],Rule(Var("x"),App(Call(SVar("op"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("arg"),[]),Op("TNil",[])),Op("TNil",[])])])),Id))]),Strategies([SDef("new",[],Prim("_ST_new")),SDef("is-string",[],Prim("_ST_is_string")),SDef("implode-string",[],Prim("_ST_implode_string")),SDef("explode-string",[],Prim("_ST_explode_string")),SDef("conc-strings",[],Seq(Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("conc"),[]),Call(SVar("implode-string"),[])))),SDef("concat-strings",[],Seq(Call(SVar("map"),[Call(SVar("explode-string"),[])]),Seq(Call(SVar("concat"),[]),Call(SVar("implode-string"),[])))),SDef("int-to-string",[],Seq(Rec("x",Seq(Call(SVar("split"),[Seq(Call(SVar("sect"),[Call(SVar("mod"),[]),Build(Int(10))]),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(48))])),Seq(Call(SVar("sect"),[Call(SVar("div"),[]),Build(Int(10))]),Call(SVar("int"),[]))]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[LChoice(Seq(Match(Int(0)),Build(Op("Nil",[]))),Call(SVar("x"),[])),Call(SVar("TNil"),[])])]),Call(SVar("MkCons"),[])))),Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])))),SDef("string-to-int",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Call(SVar("S2I1"),[]))))),SDef("escape",[],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",LChoice(Seq(Call(SVar("Escape"),[]),Call(SVar("Cons"),[Id,Call(SVar("Cons"),[Id,Call(SVar("x"),[])])])),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("unescape",[],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",Seq(Call(SVar("try"),[Call(SVar("UnEscape"),[])]),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("string-length",[],Seq(Call(SVar("explode-string"),[]),Call(SVar("length"),[])))]),Rules([RDef("Escape",[],Rule(Op("Cons",[Int(34),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(34),Var("cs")])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(92),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(92),Var("cs")])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(10),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(110),Var("cs")])]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(34),Var("cs")])]),Op("Cons",[Int(34),Var("cs")]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(92),Var("cs")])]),Op("Cons",[Int(92),Var("cs")]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(110),Var("cs")])]),Op("Cons",[Int(10),Var("cs")]),Id)),RDef("S2I1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("n"),Id)),RDef("S2I2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Int(10),Op("TCons",[Var("n"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])])))))),RDef("S2D0",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Int(46),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Int(10),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("S2D1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Var("n"),Id)),RDef("S2D2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[App(Call(SVar("div"),[]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TCons",[Var("f"),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Var("f"),Op("TCons",[Int(10),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])]))))))]),Strategies([SDef("string-to-num",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Choice(Call(SVar("S2I1"),[]),Seq(Call(SVar("S2D0"),[]),Seq(Call(SVar("repeat"),[Call(SVar("S2D2"),[])]),Call(SVar("S2D1"),[]))))))))]),Strategies([SDef("lower-case",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("map"),[Call(SVar("lc"),[])]),Call(SVar("implode-string"),[])))),SDef("lc",[],Call(SVar("try"),[Seq(Where(Call(SVar("sect"),[Call(SVar("geq"),[]),Build(Int(65))])),Seq(Where(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(90))])),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(32))])))]))]),Rules([RDef("SplitInit",[],Rule(Var("x"),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])])]),Id)),RDef("SplitExit",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),App(Call(SVar("reverse"),[]),Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")])),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Int(32),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("y"),Var("cs")]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Where(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("y"),Op("TCons",[Int(32),Op("TNil",[])])])))))]),Strategies([SDef("split-at-space",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("SplitInit"),[]),Rec("x",LChoice(Call(SVar("SplitExit"),[]),Seq(Call(SVar("SplitNext"),[]),Call(SVar("x"),[]))))))),SDef("basename",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Match(Op("Cons",[Int(46),Wld])),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[])))),SDef("basename",["ext"],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Cons"),[Match(Int(46)),Call(SVar("ext"),[])]),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[])))),SDef("guarantee-extension",["ext"],Seq(Call(SVar("basename"),[]),Seq(Call(SVar("split"),[Id,BA(Call(SVar("ext"),[]),Op("TNil",[]))]),Call(SVar("add-extension"),[]))))]),Rules([RDef("add-extension",[],Rule(Op("TCons",[Var("name"),Op("TCons",[Var("ext"),Op("TNil",[])])]),App(Call(SVar("concat-strings"),[]),Op("Cons",[Var("name"),Op("Cons",[Str("."),Op("Cons",[Var("ext"),Op("Nil",[])])])])),Id))]),Signature([Sorts([Sort("Option",Kinds([Var("a")]))]),Operations([OpDecl("None",ConstType(Op("Option",[Var("a")]))),OpDecl("Some",FunType([Var("a")],Op("Option",[Var("a")])))])]),Strategies([SDef("option",["s"],Choice(Call(SVar("None"),[]),Call(SVar("Some"),[Call(SVar("s"),[])])))]),Signature([Sorts([Sort("Prod",Kinds([Var("ListType")]))]),Operations([OpDecl("TNil",ConstType(Op("Prod",[Op("Nil",[])]))),OpDecl("TCons",FunType([Var("a"),Op("Prod",[Var("lt")])],Op("Prod",[Op("Cons",[Var("a"),Var("lt")])]))),OpDecl("Pair",FunType([Var("a"),Var("b")],Op("Prod",[Op("Cons",[Var("a"),Op("Cons",[Var("b"),Op("Nil",[])])])])))])]),Rules([RDef("Fst",[],Rule(Op("TCons",[Var("x"),Var("tp")]),Var("x"),Id)),RDef("Snd",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Var("tp")])]),Var("y"),Id)),RDef("Third",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TCons",[Var("z"),Var("tp")])])]),Var("z"),Id)),RDef("TInd1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Var("x"),Id)),RDef("TInd2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("tp"),Op("TNil",[])])]),Id)),RDef("Dupl",[],Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("split",["f","g"],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TNil",[])])]),Id)),RDef("split3",["f","g","h"],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TCons",[App(Call(SVar("h"),[]),Var("x")),Op("TNil",[])])])]),Id)),RDef("Swap",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("Thd",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("x"),Id)),RDef("Ttl",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("xs"),Id))]),Strategies([SDef("tindex",[],Rec("x",LChoice(Call(SVar("TInd1"),[]),Seq(Call(SVar("TInd2"),[]),Call(SVar("x"),[]))))),SDef("tmap",["s"],Rec("x",Choice(Call(SVar("TNil"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("tconcat",["s"],Rec("y",Choice(LRule(Rule(Var("TNil"),Var("Nil"),Id)),Seq(LRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id)),Call(SVar("s"),[]))))),SDef("tconcat'",["s1","s2"],Rec("y",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(LRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id)),Call(SVar("s2"),[]))))),SDef("at_tsuffix",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("x"),[])])))),SDef("tcata",["s1","s2"],Rec("y",LChoice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(LRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id)),Call(SVar("s2"),[])))))]),Strategies([SDef("filter",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("filter-gen",["pred","cont"],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("pred"),[]),Call(SVar("cont"),[Call(SVar("x"),[])])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("skip1",["s"],Call(SVar("at-tail"),[Call(SVar("s"),[])])),SDef("skip2",["s"],Call(SVar("at-tail"),[Call(SVar("at-tail"),[Call(SVar("s"),[])])])),SDef("filter-option-args",["flag"],Call(SVar("filter-gen"),[Seq(Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("Tl"),[])),Call(SVar("skip1"),[])])),SDef("filter-options",["flag"],Call(SVar("filter-gen"),[Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("skip2"),[])]))]),Strategies([SDef("member",[],Call(SVar("TCons"),[Match(Var("x")),Call(SVar("TCons"),[Call(SVar("fetch"),[Match(Var("x"))]),Call(SVar("TNil"),[])])]))]),Rules([RDef("FoldR1",[],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Op("Nil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Id)),RDef("FoldR",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("TFoldR",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("FoldL",["s"],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Op("TNil",[])])]),Id)),RDef("FoldL",["s"],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("y"),Id)),RDef("lsplit",["f","g"],Rule(Var("x"),Op("Cons",[App(Call(SVar("f"),[]),Var("x")),Op("Cons",[App(Call(SVar("g"),[]),Var("x")),Op("Nil",[])])]),Id))]),Strategies([SDef("foldr1",["s1","s2"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr1",["s"],Rec("x",Seq(LChoice(Call(SVar("FoldR1"),[]),Seq(Call(SVar("FoldR"),[]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("s"),[])))),SDef("foldr",["s1","s2"],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr",["s1","s2","f"],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(LRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Op("TCons",[App(Call(SVar("f"),[]),Var("y")),Op("TCons",[App(Call(SVar("x"),[]),Var("ys")),Op("TNil",[])])]),Id)),Call(SVar("s2"),[]))))),SDef("tfoldr",["s1","s2"],Rec("x",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("TFoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldl",["s"],Call(SVar("repeat"),[Call(SVar("FoldL"),[Call(SVar("s"),[])])])),SDef("mapfoldr",["s1","s2","s3"],Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(LRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id)),Call(SVar("s3"),[])))))),SDef("mapfoldr1",["s1","s2","s3"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(LRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id)),Call(SVar("s3"),[])))))),SDef("last",[],Rec("x",LChoice(Call(SVar("Last"),[]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("init",[],Call(SVar("at-last"),[Call(SVar("Tl"),[])])),SDef("copy",[],Call(SVar("for"),[LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id)),LRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id)),LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[Var("t"),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])))))])),SDef("copy",["s"],Call(SVar("for"),[LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id)),LRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id)),LRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[App(Call(SVar("s"),[]),Var("t")),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])))))])),SDef("thread-map",["s"],Rec("x",Choice(Call(SVar(Mod("Cons","T")),[Call(SVar("s"),[]),Call(SVar("x"),[])]),Call(SVar(Mod("Nil","T")),[]))))]),Rules([RDef("Look1",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Wld]),Op("TNil",[])])]),Var("y"),Id)),RDef("Look2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Wld,Var("xs")]),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("Look1'",["keyeq"],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TNil",[])])]),Var("y"),Where(BA(Call(SVar("keyeq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])))))]),Strategies([SDef("lookup",[],Rec("x",LChoice(Call(SVar("Look1"),[]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[]))))),SDef("getfirst",["s"],Rec("x",LChoice(Seq(Call(SVar("Hd"),[]),Call(SVar("s"),[])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("lookup'",[],Scope(["x","xs"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),BA(Call(SVar("getfirst"),[Scope(["y"],Seq(Match(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Build(Var("y"))))]),Var("xs"))))),SDef("lookup",["keyeq"],Rec("x",LChoice(Call(SVar("Look1'"),[Call(SVar("keyeq"),[])]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[])))))]),Rules([RDef("HdMember",["mklst"],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[Match(Var("x"))]))))),RDef("HdMember'",["eq","mklst"],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[LRule(Rule(Var("y"),App(Call(SVar("eq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id))])))))]),Rules([RDef("union",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Build(Var("l2"))),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id))]),Strategies([SDef("unions",[],Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])]))]),Rules([RDef("diff",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id))]),Rules([RDef("diff'",["eq"],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id))]),Strategies([SDef("diff",["eq"],Call(SVar("diff'"),[Call(SVar("eq"),[])]))]),Rules([RDef("isect",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])])),Op("TNil",[])])])),Id))]),Rules([RDef("crush",["nul","sum"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]),Var("xs")),Id)),RDef("crush",["nul","sum","s"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]),Var("xs")),Id)),RDef("foldr-kids",["nul","sum"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]),Var("xs")),Id)),RDef("foldr-kids",["zero","sum","s"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("zero"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]),Var("xs")),Id))]),Strategies([SDef("collect-kids",["s"],Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("s"),[])])),SDef("collect",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))),Call(SVar("crush"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("x"),[])])))),SDef("collect",["s","skip"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))),LChoice(Seq(Call(SVar("skip"),[Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("bu-collect",["s"],LChoice(Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("collect-kids"),[LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))])),Seq(Call(SVar("s"),[]),LRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id))))),Build(Op("Nil",[])))),SDef("collect-split",["f","g"],Rec("x",LChoice(Seq(Choice(Call(SVar("is-string"),[]),Call(SVar("is-int"),[])),Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))])),Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Call(SVar("f"),[]),Call(SVar("g"),[])]))))]),Rules([RDef("CollectSplit",["s","f","g"],Rule(Explode(Var("c"),Var("as")),Op("TCons",[Var("t"),Op("TCons",[App(Call(SVar("union"),[]),Op("TCons",[Var("ys"),Op("TCons",[App(Call(SVar("unions"),[]),Var("xs")),Op("TNil",[])])])),Op("TNil",[])])]),Where(Seq(AM(BA(Seq(Call(SVar("list"),[Call(SVar("s"),[])]),Call(SVar("unzip"),[])),Var("as")),Op("TCons",[Var("bs"),Op("TCons",[Var("xs"),Op("TNil",[])])])),AM(BA(Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))]),Explode(Var("c"),Var("bs"))),Op("TCons",[Var("t"),Op("TCons",[Var("ys"),Op("TNil",[])])]))))))]),Strategies([SDef("nrofoccs",["s"],Rec("count",LChoice(Seq(Call(SVar("s"),[]),Build(Int(1))),Call(SVar("crush"),[Match(Int(0)),Call(SVar("add"),[]),Call(SVar("count"),[])])))),SDef("twicetd",["s"],Call(SVar("oncetd"),[Seq(Call(SVar("explode-term"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("at-suffix"),[Call(SVar("Cons"),[Call(SVar("oncetd"),[Call(SVar("s"),[])]),Call(SVar("oncetd"),[Call(SVar("s"),[])])])]),Call(SVar("TNil"),[])])]),Call(SVar("mkterm"),[])))])),SDef("atmostonce",["s"],Not(Call(SVar("twicetd"),[Call(SVar("s"),[])]))),SDef("atmostonce'",["s"],Scope(["n"],Seq(AM(Call(SVar("nrofoccs"),[Call(SVar("s"),[])]),Var("n")),BA(Call(SVar("leq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])))))]),Rules([RDef("SortL",["s"],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("l")])]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l")])]),Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),RDef("LSort",["s"],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l'")])]),Where(AM(BA(Call(SVar("at-suffix"),[Scope(["ys"],Seq(Match(Op("Cons",[Var("y"),Var("ys")])),Seq(Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))),Build(Var("ys")))))]),Var("l")),Var("l'"))))),RDef("Uniq",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Where(BA(Call(SVar("fetch"),[Match(Var("x"))]),Var("l"))))),RDef("LMerge",["s"],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("z"),Var("l'")]),Where(AM(BA(Call(SVar("at-suffix"),[LRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Var("ys"),Where(AM(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Var("z")))))]),Var("l")),Var("l'")))))]),Strategies([SDef("sort-list",["s"],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("isort-list",["s"],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("s"),[])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("jsort-list",["s"],Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("s"),[]),Call(SVar("try"),[Call(SVar("x"),[])]))))])),SDef("uniq",[],Call(SVar("listbu"),[Call(SVar("repeat"),[Call(SVar("Uniq"),[])])]))]),Rules([RDef("Zip1",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1a'",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1b'",[],Rule(Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1c",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1c'",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1d",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("LZip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("RZip2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("Zip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("UnZip1",[],Rule(Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UnZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("UnZip3",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip00",[],Rule(Var("xs"),Op("TCons",[Int(0),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip01",[],Rule(Var("xs"),Op("TCons",[Int(1),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("NZip2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("NZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("TZip1",[],Rule(Op("TCons",[Var("TNil"),Op("TCons",[Var("TNil"),Op("TNil",[])])]),Var("TNil"),Id)),RDef("TZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Op("TCons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("TZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[Var("x"),Var("xs")]),Id)),RDef("cart",["s"],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),App(Seq(Call(SVar("map"),[LRule(Rule(Var("x"),App(Call(SVar("map"),[LRule(Rule(Var("y"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id))]),Var("ys")),Id))]),Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])])),Var("xs")),Id)),RDef("Skip",["s"],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id))]),Strategies([SDef("genzip",["a","b","c","s"],Rec("x",Choice(Call(SVar("a"),[]),Seq(Call(SVar("b"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("c"),[])))))),SDef("zip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zip'",["s"],Call(SVar("genzip"),[LChoice(Call(SVar("Zip1a'"),[]),Call(SVar("Zip1b'"),[])),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipl",["s"],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipr",["s"],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rest-zip",["s"],Seq(Call(SVar("genzip"),[Seq(Choice(Match(Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])])),Match(Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]))),Seq(Match(Op("TCons",[Var("tla"),Op("TCons",[Var("tlb"),Op("TNil",[])])])),Build(Op("Nil",[])))),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])]),LRule(Rule(Var("pairs"),Op("TCons",[Var("tla"),Op("TCons",[Var("tlb"),Op("TCons",[Var("pairs"),Op("TNil",[])])])]),Id)))),SDef("unzip",[],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Id])),SDef("unzip",["s"],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Call(SVar("s"),[])])),SDef("nzip0",["s"],Seq(Call(SVar("NZip00"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("nzip",["s"],Seq(Call(SVar("NZip01"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("tzip",["s"],Call(SVar("genzip"),[Call(SVar("TZip1"),[]),Call(SVar("TZip2"),[]),Call(SVar("TZip3"),[]),Call(SVar("s"),[])])),SDef("lzip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("LZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rzip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("RZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipFetch",["s"],Rec("x",Seq(Call(SVar("Zip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("lzipFetch",["s"],Rec("x",Seq(Call(SVar("LZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("rzipFetch",["s"],Rec("x",Seq(Call(SVar("RZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("zipPad",["s","padding"],Rec("x",Choice(Call(SVar("Zip1"),[]),Choice(Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Choice(Seq(Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))),Seq(Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TNil"),[])])]),Call(SVar("x"),[])))))))),SDef("zip-tail",[],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))))),SDef("zipl-tail-match",["s"],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zipr-tail-match",["s"],Rec("x",Choice(Call(SVar("Zip1c'"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zip-skip",["pred","s"],Rec("x",Choice(Call(SVar("Zip1"),[]),Seq(LChoice(Seq(Call(SVar("Skip"),[Call(SVar("pred"),[])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])])),Seq(Call(SVar("Zip2"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("Zip3"),[])))))]),Strategies([SDef("tuple-zip",["s"],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("tmap"),[Call(SVar("Hd"),[])]),Call(SVar("tmap"),[Call(SVar("Tl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Seq(Call(SVar("tmap"),[Call(SVar("Nil"),[])]),Build(Op("Nil",[])))))),SDef("tuple-unzip",["s"],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("map"),[Call(SVar("Thd"),[])]),Call(SVar("map"),[Call(SVar("Ttl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),LRule(Rule(Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Op("TCons",[Var("a"),Var("b")]),Id)))),Seq(Call(SVar("map"),[Call(SVar("TNil"),[])]),Build(Op("TNil",[]))))))]),Rules([RDef("Ind1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Var("x"),Id)),RDef("Ind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("xs"),Op("TNil",[])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(2),Op("TNil",[])])]))))),RDef("Gind0",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Int(1),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("Gind1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Var("n"),Id)),RDef("Gind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("y"),Op("TCons",[Var("xs"),Op("TNil",[])])])]),Id))]),Strategies([SDef("index",[],Seq(Call(SVar("repeat"),[Call(SVar("Ind2"),[])]),Call(SVar("Ind1"),[]))),SDef("get_index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("get-index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[]))))))]),Rules([RDef("Hd",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("x"),Id)),RDef("Tl",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Id)),RDef("Last",[],Rule(Op("Cons",[Var("x"),Op("Nil",[])]),Var("x"),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("z")]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("z")])]),Id)),RDef("MkSingleton",[],Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Strategies([SDef("is-list",[],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Id]))),SDef("map",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list-some",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("list"),[Call(SVar("try"),[Call(SVar("s"),[])])])])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("list-some-filter",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("filter"),[Call(SVar("s"),[])])])),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Tl"),[]))))),SDef("length",[],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Build(Int(0))),Seq(Call(SVar("Tl"),[]),Seq(Call(SVar("x"),[]),LRule(Rule(Var("n"),App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Id))))))),SDef("fetch",["s"],Rec("x",LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("split-fetch",["s"],Seq(Call(SVar("at-suffix"),[Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Seq(Call(SVar("Cons"),[Id,Match(Var("tl"))]),Build(Op("Nil",[]))))]),Call(SVar("split"),[Id,Build(Var("tl"))]))),SDef("at-tail",["s"],Call(SVar("Cons"),[Id,Call(SVar("s"),[])])),SDef("at_tail",["s"],Seq(Call(SVar("obsolete"),[Build(Str("at_tail -> at-tail"))]),Call(SVar("Cons"),[Id,Call(SVar("s"),[])]))),SDef("at-end",["s"],Rec("x",Choice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Nil"),[]),Call(SVar("s"),[]))))),SDef("at_end",["s"],Seq(Call(SVar("obsolete"),[Build(Str("at_end -> at-end"))]),Rec("x",Choice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Nil"),[]),Call(SVar("s"),[])))))),SDef("at-suffix",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("at_suffix",["s"],Seq(Call(SVar("obsolete"),[Build(Str("at_suffix -> at-suffix"))]),Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("at_last",["s"],Seq(Call(SVar("obsolete"),[Build(Str("at_last -> at-last"))]),Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("at-last",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("listbu",["s"],Rec("x",Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[])))),SDef("listtd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("listdu",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[]))))),SDef("listdu2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s2"),[])))))]),Rules([RDef("RevInit",[],Rule(Var("xs"),Op("TCons",[Var("xs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("Rev",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("RevExit",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Var("ys"),Id))]),Strategies([SDef("reverse",[],Seq(Call(SVar("RevInit"),[]),Seq(Call(SVar("repeat"),[Call(SVar("Rev"),[])]),Call(SVar("RevExit"),[]))))]),Rules([RDef("UptoInit",[],Rule(Var("i"),Op("TCons",[Var("i"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UptoExit",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("xs"),Where(BA(Call(SVar("lt"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(0),Op("TNil",[])])]))))),RDef("UptoStep",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Op("Cons",[Var("i"),Var("xs")]),Op("TNil",[])])]),Id))]),Strategies([SDef("upto",[],Seq(Call(SVar("UptoInit"),[]),Rec("x",LChoice(Call(SVar("UptoExit"),[]),Seq(Call(SVar("UptoStep"),[]),Call(SVar("x"),[]))))))]),Rules([RDef("conc",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("at-end"),[Build(Var("l2"))]),Var("l1")),Id))]),Strategies([SDef("concat",[],Rec("x",Choice(Call(SVar("Nil"),[]),LRule(Rule(Op("Cons",[Var("l"),Var("ls")]),App(Call(SVar("at-end"),[BA(Call(SVar("x"),[]),Var("ls"))]),Var("l")),Id)))))]),Rules([RDef("Sep",["s"],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("Cons",[App(Call(SVar("s"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Var("xs")])]),Id))]),Strategies([SDef("separate-by",["s"],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Rec("x",Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Sep"),[Call(SVar("s"),[])]))))])))]),Signature([Sorts([Sort("List",Kinds([Var("Type")]))]),Operations([OpDecl("Nil",ConstType(Op("List",[Var("a")]))),OpDecl("Cons",FunType([Var("a"),Op("List",[Var("a")])],Op("List",[Var("a")])))])]),Rules([RDef("dist",["s"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(All(LRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Id))),Var("t")),Id)),RDef("d",["s"],Rule(Op("Pair",[Var("t"),Var("env")]),App(Call(SVar("s"),[]),Var("t")),Id)),RDef("t",["s"],Rule(Op("Pair",[Var("t"),Var("env")]),Op("Pair",[App(Call(SVar("s"),[]),Var("t")),Var("env")]),Id)),RDef("coll",["s"],Rule(Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TCons",[Var("zs"),Op("TNil",[])])]),Where(AM(BA(Call(SVar("unzip"),[Call(SVar("s"),[])]),Var("xs")),Op("TCons",[Var("ys"),Op("TCons",[Var("zs"),Op("TNil",[])])])))))]),Strategies([SDef("env-alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("dist"),[Call(SVar("x"),[])])))),SDef("env-topdown",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("dist"),[Call(SVar("x"),[])])))),SDef("env-topdown",["s","skip"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),Call(SVar("dist"),[Call(SVar("x"),[])]))))),SDef("env-bottomup",["s"],Rec("x",Seq(Call(SVar("split"),[Call(SVar("dist"),[Call(SVar("x"),[])]),Call(SVar("Snd"),[])]),Call(SVar("s"),[])))),SDef("thread-alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Thread(Call(SVar("x"),[])))))]),Strategies([SDef("reduce",["s"],Call(SVar("repeat"),[Rec("x",Choice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))])),SDef("outermost",["s"],Call(SVar("repeat"),[Call(SVar("oncetd"),[Call(SVar("s"),[])])])),SDef("innermost'",["s"],Call(SVar("repeat"),[Call(SVar("oncebu"),[Call(SVar("s"),[])])])),SDef("innermost",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Id)))),SDef("pseudo-innermost3",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Rec("y",Call(SVar("try"),[Seq(Call(SVar("s"),[]),Seq(All(Seq(All(Seq(All(Call(SVar("y"),[])),Call(SVar("y"),[]))),Call(SVar("y"),[]))),Call(SVar("y"),[])))])))))]),Signature([Sorts([Sort("Mark",Nokind)]),Operations([OpDecl("NF",ConstType(Var("Mark")))])]),Strategies([SDef("topdown",["s"],Rec("x",Seq(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("bottomup",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("downup",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[]))))),SDef("downup",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("downup2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("topdown",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("bottomup",["s","stop"],Rec("x",Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[])))),SDef("downup",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[]))))),SDef("downup2",["s1","s2","stop"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[]))))),SDef("don't-stop",["s"],Fail),SDef("spinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[One(Call(SVar("x"),[]))])))),SDef("spinebu",["s"],Rec("x",Seq(Call(SVar("try"),[One(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("somespinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Some(Call(SVar("x"),[]))])))),SDef("somespinebu",["s"],Rec("x",Seq(Call(SVar("try"),[Some(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("oncetd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),One(Call(SVar("x"),[]))))),SDef("oncebu",["s"],Rec("x",LChoice(One(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("oncetd-stop",["s","stop"],Rec("x",LChoice(Call(SVar("s"),[]),Seq(Not(Call(SVar("stop"),[])),One(Call(SVar("x"),[])))))),SDef("sometd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Some(Call(SVar("x"),[]))))),SDef("somebu",["s"],Rec("x",LChoice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("alldownup2",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("downup2'-obsolete",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("alltd-fold",["s1","s2"],Rec("x",LChoice(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("leaves",["s","is-leaf","skip"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("leaves",["s","is-leaf"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("is-leaf",[],Not(One(Id))),SDef("manybu",["s"],Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])])),Call(SVar("s"),[])))),SDef("manytd",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),All(Call(SVar("try"),[Call(SVar("x"),[])]))),Some(Call(SVar("x"),[]))))),SDef("somedownup",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))),Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))))),SDef("breadthfirst",["s"],Rec("x",Seq(All(Call(SVar("s"),[])),All(Call(SVar("x"),[])))))]),Strategies([SDef("repeat",["s","c"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Call(SVar("c"),[])))),SDef("repeat",["s"],Call(SVar("repeat"),[Call(SVar("s"),[]),Id])),SDef("repeat1",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("x"),[]),Call(SVar("c"),[]))))),SDef("repeat1",["s"],Call(SVar("repeat1"),[Call(SVar("s"),[]),Id])),SDef("repeat-until",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("c"),[]),Call(SVar("x"),[]))))),SDef("while",["c","s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[])))]))),SDef("do-while",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("x"),[]))])))),SDef("while-not",["c","s"],Rec("x",LChoice(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[]))))),SDef("for",["i","c","s"],Seq(Call(SVar("i"),[]),Call(SVar("repeat-until"),[Call(SVar("s"),[]),Call(SVar("c"),[])])))]),Strategies([SDef("try",["s"],LChoice(Call(SVar("s"),[]),Id)),SDef("if",["c","b"],Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("b"),[]))])),SDef("if",["c","b1","b2"],LChoice(Seq(Call(SVar("c"),[]),Call(SVar("b1"),[])),Call(SVar("b2"),[]))),SDef("ior",["a","b"],LChoice(Seq(Call(SVar("a"),[]),Call(SVar("try"),[Call(SVar("b"),[])])),Call(SVar("b"),[]))),SDef("eq",[],Scope(["x"],Match(Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))),SDef("FAIL",[],Scope(["x"],Seq(Match(Var("x")),Match(Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))))])])
