
% Copyright (C) 1998, 1999 Eelco Visser <visser@acm.org>
% 
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2, or (at your option)
% any later version.
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
% 02111-1307, USA.

\chapter{Examples}

	In this chapter we present several examples of applications of
	the strategy language.

\section{Axiomatic Transformation}

	Approach
	\begin{itemize}
	\item Define individual transformation rules based on semantics
	\item Define strategy that applies these rules
	\end{itemize}

	Issues
	\begin{itemize}
	\item Generating new variables
	\end{itemize}

	\input{../../xmpl/lambda/lambda.r}
	\input{../../xmpl/lambda/lambda-red0.r}
	\input{../../xmpl/lambda/lambda-red.r}

 \subsection{Renaming Variables}

\section{Transition Systems}

	\begin{itemize}
	\item Initialize configuration
	\item Repeatedly apply transition rules
	\item Transform final configuration into end result
	\end{itemize}

\section{Partial Evaluation}

	recursive equations 

\section{Recursive Patterns}

\section{Error Handling}

	introduce error constructor as default
