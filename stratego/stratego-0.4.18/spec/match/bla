test suite: matrix-test
successes: 0
failures: 0
test suite: match-to-matrix-test
test1
test3
  result not equal: Scope(["d_0"],Let(SDef([DontInline],"a_0",[],Seq(Assign(Var("x"),Var("d_0")),Scope(["e_0","f_0","g_0","h_0","i_0"],Let(SDef([DontInline],"b_0",[],Seq(Assign(Var("w_9"),Var("g_0")),Scope(["j_0"],Build(Var("j_0"))))),Let(SDef([DontInline],"c_0",[],Seq(Assign(Var("x_9"),Var("f_0")),Seq(Assign(Var("x_9"),Var("i_0")),Scope(["k_0"],Build(Op("B",[])))))),Seq(Assign(Var("e_0")),Case(Var("e_0"),[Alt(Fun("F",2),[Var("f_0"),Var("g_0")],Case(Var("g_0"),[Alt(Fun("G",2),[Var("h_0"),Var("i_0")],Case(Var("h_0"),[Alt(Fun("B",0),[],Case(Var("f_0"),[Alt(Fun("A",0),[],Choice(Call(SVar("b_0"),[]),Call(SVar("c_0"),[])))],Call(SVar("c_0"),[])))],Case(Var("f_0"),[Alt(Fun("A",0),[],Call(SVar("b_0"),[]))],Fail)))],Case(Var("f_0"),[Alt(Fun("A",0),[],Call(SVar("b_0"),[]))],Fail)))],Fail))))))),Seq(Assign(Var("d_0")),Call(SVar("a_0"),[]))))
  expected: Scope([[0]],Seq(Assign(Var([0])),Seq(Assign(Var("x"),Var([0])),Scope([[0],[0,0],[1,0],[0,1,0],[1,1,0]],Let(SDef("b_0",[],Scope(["w_9"],Seq(Assign(Var("w_9"),Var([1,0])),Build(Var("w_9"))))),Let(SDef("c_0",[],Scope(["x_9"],Seq(Assign(Var("x_9"),Var([0,0])),Seq(Assign(Var("x_9"),Var([1,1,0])),Build(Op("B",[])))))),Seq(Assign(Var([0])),Case(Var([0]),[Alt(Fun("F",2),[Var([0,0]),Var([1,0])],Case(Var([1,0]),[Alt(Fun("G",2),[Var([0,1,0]),Var([1,1,0])],Case(Var([0,1,0]),[Alt(Fun("B",0),[],Case(Var([0,0]),[Alt(Fun("A",0),[],Choice(Call(SVar("b_0"),[]),Call(SVar("c_0"),[])))],Call(SVar("c_0"),[])))],Case(Var([0,0]),[Alt(Fun("A",0),[],Call(SVar("b_0"),[]))],Fail)))],Case(Var([0,0]),[Alt(Fun("A",0),[],Call(SVar("b_0"),[]))],Fail)))],Fail))))))))
test4
  result not equal: Scope(["o_0","p_0","q_0","r_0","s_0"],Let(SDef([DontInline],"l_0",[],Build(Int(4))),Let(SDef([DontInline],"m_0",[],Build(Int(6))),Let(SDef([DontInline],"n_0",[],Seq(Assign(Var("x_9"),Var("p_0")),Seq(Assign(Var("x_9"),Var("s_0")),Scope(["t_0"],Build(Op("B",[])))))),Seq(Assign(Var("o_0")),Case(Var("o_0"),[Alt(Int(3),[],Call(SVar("l_0"),[])),Alt(Str("abc"),[],Call(SVar("m_0"),[])),Alt(Fun("F",2),[Var("p_0"),Var("q_0")],Case(Var("q_0"),[Alt(Fun("G",2),[Var("r_0"),Var("s_0")],Case(Var("r_0"),[Alt(Fun("B",0),[],Call(SVar("n_0"),[]))],Fail))],Fail))],Fail))))))
  expected: Scope([[0],[0,0],[1,0],[0,1,0],[1,1,0]],Seq(Assign(Var([0])),Case(Var([0]),[Alt(Int(3),[],Build(Int(4))),Alt(Str("abc"),[],Build(Int(6))),Alt(Fun("F",2),[Var([0,0]),Var([1,0])],Case(Var([1,0]),[Alt(Fun("G",2),[Var([0,1,0]),Var([1,1,0])],Case(Var([0,1,0]),[Alt(Fun("B",0),[],Scope(["x_9"],Seq(Assign(Var("x_9"),Var([0,0])),Seq(Assign(Var("x_9"),Var([1,1,0])),Build(Op("B",[]))))))],Fail))],Fail))],Fail)))
test5
  result not equal: Scope(["w_0","x_0","y_0","z_0","a_1"],Let(SDef([DontInline],"u_0",[],Seq(Assign(Var("w_9"),Var("x_0")),Scope(["b_1"],Build(Var("b_1"))))),Let(SDef([DontInline],"v_0",[],Seq(Assign(Var("x_9"),Var("x_0")),Seq(Assign(Var("x_9"),Var("a_1")),Scope(["c_1"],Build(Op("B",[])))))),Seq(Assign(Var("w_0")),Case(Var("w_0"),[Alt(Fun("F",1),[Var("x_0")],Call(SVar("u_0"),[])),Alt(Fun("F",2),[Var("x_0"),Var("y_0")],Case(Var("y_0"),[Alt(Fun("G",2),[Var("z_0"),Var("a_1")],Case(Var("z_0"),[Alt(Fun("B",0),[],Call(SVar("v_0"),[]))],Fail))],Fail))],Fail)))))
  expected: Scope([[0],[0,0],[1,0],[0,1,0],[1,1,0]],Seq(Assign(Var([0])),Case(Var([0]),[Alt(Fun("F",1),[Var([0,0])],Scope(["w_9"],Seq(Assign(Var("w_9"),Var([0,0])),Build(Var("w_9"))))),Alt(Fun("F",2),[Var([0,0]),Var([1,0])],Case(Var([1,0]),[Alt(Fun("G",2),[Var([0,1,0]),Var([1,1,0])],Case(Var([0,1,0]),[Alt(Fun("B",0),[],Scope(["x_9"],Seq(Assign(Var("x_9"),Var([0,0])),Seq(Assign(Var("x_9"),Var([1,1,0])),Build(Op("B",[]))))))],Fail))],Fail))],Fail)))
test6
  result not equal: Scope(["f_1","g_1","h_1","i_1","j_1"],Let(SDef([DontInline],"d_1",[],Build(Op("C",[]))),Let(SDef([DontInline],"e_1",[],Seq(Assign(Var("x_9"),Var("g_1")),Seq(Assign(Var("x_9"),Var("j_1")),Scope(["k_1"],Build(Op("B",[])))))),Seq(Assign(Var("f_1")),Case(Var("f_1"),[Alt(Fun("F",2),[Var("g_1"),Var("h_1")],Case(Var("h_1"),[Alt(Fun("H",0),[],Case(Var("g_1"),[Alt(Fun("A",0),[],Call(SVar("d_1"),[]))],Fail)),Alt(Fun("G",2),[Var("i_1"),Var("j_1")],Case(Var("i_1"),[Alt(Fun("B",0),[],Case(Var("g_1"),[],Call(SVar("e_1"),[])))],Fail))],Fail))],Fail)))))
  expected: Scope([[0],[0,0],[1,0],[0,1,0],[1,1,0]],Seq(Assign(Var([0])),Case(Var([0]),[Alt(Fun("F",2),[Var([0,0]),Var([1,0])],Case(Var([1,0]),[Alt(Fun("H",0),[],Case(Var([0,0]),[Alt(Fun("A",0),[],Build(Op("C",[])))],Fail)),Alt(Fun("G",2),[Var([0,1,0]),Var([1,1,0])],Case(Var([0,1,0]),[Alt(Fun("B",0),[],Case(Var([0,0]),[],Scope(["x_9"],Seq(Assign(Var("x_9"),Var([0,0])),Seq(Assign(Var("x_9"),Var([1,1,0])),Build(Op("B",[])))))))],Fail))],Fail))],Fail)))
successes: 1
failures: 4
gmake[1]: *** [check-TESTS] Error 1
gmake: *** [check-am] Error 2
