Specification([Imports(["strategy","substitution","free-variables"]),Rules([RDef("Add1",[],Rule(Op("Var",[Var("x")]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("Add2",[],Rule(Op("SVar",[Var("x")]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("IsVar",[],Rule(Op("Var",[Var("x")]),Var("x"),Id)),RDef("IsSVar",[],Rule(Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Var("x"),Id)),RDef("MkTVar",[],Rule(Var("x"),Op("Var",[Var("x")]),Id)),RDef("MkSVar",[],Rule(Var("x"),Op("SVar",[Var("x")]),Id)),RDef("MkCall",[],Rule(Var("x"),Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Id))]),Strategies([SDef("SVarShape",["s"],Call(SVar("Call"),[Call(SVar("SVar"),[Call(SVar("s"),[])]),Call(SVar("Nil"),[])]))]),Rules([RDef("Bind0",[],Rule(Op("Scope",[Var("xs"),Var("s")]),Var("xs"),Id)),RDef("Bind0",[],Rule(Op("LRule",[Op("Rule",[Var("t1"),Var("t2"),Var("s")])]),App(Call(SVar("tvars"),[]),Var("t1")),Id)),RDef("Bind1",[],Rule(Op("Let",[Op("SDef",[Var("f"),Var("xs"),Var("s1")]),Var("s2")]),Op("Cons",[Var("f"),Op("Nil",[])]),Id)),RDef("Bind2",[],Rule(Op("SDef",[Var("f"),Var("xs"),Var("s")]),Var("xs"),Id)),RDef("Bind3",[],Rule(Op("Rec",[Var("x"),Var("s")]),Op("Cons",[Var("x"),Op("Nil",[])]),Id))]),Strategies([SDef("tpaste",["nwvars"],Call(SVar("Scope"),[Call(SVar("nwvars"),[]),Id])),SDef("tboundin",["bnd","ubnd","ignore"],Call(SVar("Scope"),[Call(SVar("ignore"),[]),Call(SVar("bnd"),[])])),SDef("spaste",["nwvars"],Choice(Call(SVar("Let"),[Call(SVar("SDef"),[Seq(Call(SVar("nwvars"),[]),Call(SVar("Hd"),[])),Id,Id]),Id]),Choice(Call(SVar("SDef"),[Id,Call(SVar("nwvars"),[]),Id]),Call(SVar("Rec"),[Seq(Call(SVar("nwvars"),[]),Call(SVar("Hd"),[])),Id])))),SDef("sboundin",["bnd","ubnd","ignore"],Choice(Call(SVar("Let"),[Call(SVar("SDef"),[Call(SVar("ignore"),[]),Call(SVar("ignore"),[]),Call(SVar("ubnd"),[])]),Call(SVar("bnd"),[])]),Choice(Call(SVar("SDef"),[Call(SVar("ignore"),[]),Call(SVar("ignore"),[]),Call(SVar("bnd"),[])]),Call(SVar("Rec"),[Call(SVar("ignore"),[]),Call(SVar("bnd"),[])]))))]),Strategies([SDef("tvars",[],Call(SVar("free-vars"),[Call(SVar("Add1"),[]),Call(SVar("Bind0"),[]),Call(SVar("tboundin"),[])])),SDef("svars",[],Call(SVar("free-vars"),[Call(SVar("Add2"),[]),Choice(Call(SVar("Bind1"),[]),Choice(Call(SVar("Bind2"),[]),Call(SVar("Bind3"),[]))),Call(SVar("sboundin"),[])])),SDef("trename",[],Call(SVar("rename"),[Call(SVar("Var"),[]),Call(SVar("Bind0"),[]),Call(SVar("tboundin"),[]),Call(SVar("tpaste"),[])])),SDef("srename",[],Call(SVar("rename"),[Call(SVar("SVar"),[]),Choice(Call(SVar("Bind1"),[]),Choice(Call(SVar("Bind2"),[]),Call(SVar("Bind3"),[]))),Call(SVar("sboundin"),[]),Call(SVar("spaste"),[])])),SDef("svars-arity",[],Call(SVar("free-vars2"),[LRule(Rule(Op("Call",[Op("SVar",[Var("f")]),Var("as")]),Op("Cons",[Op("TCons",[Var("f"),Op("TCons",[App(Call(SVar("length"),[]),Var("as")),Op("TNil",[])])]),Op("Nil",[])]),Id)),Choice(Call(SVar("Bind1"),[]),Choice(Call(SVar("Bind2"),[]),Call(SVar("Bind3"),[]))),Call(SVar("sboundin"),[]),Scope(["f"],AM(Id,Op("TCons",[Op("TCons",[Var("f"),Op("TCons",[Wld,Op("TNil",[])])]),Op("TCons",[Var("f"),Op("TNil",[])])])))])),SDef("tsubs",[],Call(SVar("substitute"),[Call(SVar("IsVar"),[])])),SDef("ssubs",[],Call(SVar("substitute"),[Call(SVar("IsSVar"),[])])),SDef("tsubstitute",[],Call(SVar("substitute"),[Call(SVar("IsVar"),[]),Call(SVar("Var"),[]),Call(SVar("Bind0"),[]),Call(SVar("tboundin"),[]),Call(SVar("tpaste"),[])])),SDef("strename",[],Seq(Call(SVar("trename"),[]),Call(SVar("srename"),[]))),SDef("is_var_list",[],Call(SVar("map"),[Call(SVar("Var"),[Id])])),SDef("is_svar_list",[],Call(SVar("map"),[Call(SVar("SVar"),[Id])]))]),Strategies([SDef("conLChoice",["s"],Rec("x",Choice(Call(SVar("s"),[]),Choice(Call(SVar("LChoice"),[Call(SVar("x"),[]),Id]),Call(SVar("LChoice"),[Id,Call(SVar("x"),[])]))))),SDef("conChoice",["s"],Rec("x",Choice(Call(SVar("s"),[]),Choice(Call(SVar("Choice"),[Call(SVar("x"),[]),Id]),Call(SVar("Choice"),[Id,Call(SVar("x"),[])]))))),SDef("conChoiceL",["s"],Choice(Call(SVar("Choice"),[Call(SVar("s"),[]),Id]),Call(SVar("s"),[]))),SDef("choicebu-l'",["s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("Choice"),[Id,Call(SVar("x"),[])]),Call(SVar("s"),[]))]))),SDef("choicebu-l",["s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("Choice"),[Call(SVar("x"),[]),Call(SVar("x"),[])]),Call(SVar("s"),[]))]))),SDef("choicetd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Choice"),[Call(SVar("x"),[]),Call(SVar("x"),[])])))),SDef("choicemap",["s"],Rec("x",LChoice(Call(SVar("Choice"),[Call(SVar("x"),[]),Call(SVar("x"),[])]),Call(SVar("s"),[])))),SDef("choicebu",["s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("Choice"),[Call(SVar("x"),[]),Call(SVar("x"),[])]),Call(SVar("s"),[]))]))),SDef("firstInSeq",["s"],LChoice(Call(SVar("s"),[]),Call(SVar("Seq"),[Call(SVar("s"),[]),Id]))),SDef("lastInSeq",["s"],Call(SVar("Seq"),[Id,Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Seq"),[Not(Call(SVar("oncetd"),[Call(SVar("s"),[])])),Call(SVar("x"),[])])))]))])])