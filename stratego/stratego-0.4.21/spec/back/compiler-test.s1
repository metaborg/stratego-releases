Specification([Signature([Operations([OpDecl("Seqs",FunType([Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("Choices",FunType([Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("LChoices",FunType([Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("Lets",FunType([Op("List",[Var("SDef")]),Var("Strat")],Var("Strat"))),OpDecl("MA",FunType([Var("Term"),Var("Strat")],Var("Strat"))),OpDecl("AM",FunType([Var("Strat"),Var("Term")],Var("Strat"))),OpDecl("BA",FunType([Var("Strat"),Var("Term")],Var("Strat"))),OpDecl("BAM",FunType([Var("Strat"),Var("Term"),Var("Term")],Var("Strat"))),OpDecl("Con",FunType([Var("Var"),Var("Term"),Var("SVar")],Var("Term"))),OpDecl("App",FunType([Var("Strat"),Var("Term")],Var("Term"))),OpDecl("Explode",FunType([Var("Term"),Var("Term")],Var("Term"))),OpDecl("ExplodeCong",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("As",FunType([Var("Var"),Var("Term")],Var("Term"))),OpDecl("BuildDefault",FunType([Var("Term")],Var("Term"))),OpDecl("Rule",FunType([Var("Term"),Var("Term"),Var("Strat")],Var("Rule"))),OpDecl("LRule",FunType([Var("Rule")],Var("Strat"))),OpDecl("SRule",FunType([Var("Rule")],Var("Strat"))),OpDecl("RDef",FunType([Var("String"),Op("List",[Var("String")]),Var("Rule")],Var("RDef"))),OpDecl("Overlay",FunType([Var("String"),Op("List",[Var("String")]),Var("Term")],Var("Overlay"))),OpDecl("Signature",FunType([Op("List",[Var("BSig")])],Var("BSpec"))),OpDecl("Overlays",FunType([Op("List",[Var("Overlay")])],Var("BSpec"))),OpDecl("Rules",FunType([Op("List",[Var("RDef")])],Var("BSpec"))),OpDecl("Strategies",FunType([Op("List",[Var("SDef")])],Var("BSpec"))),OpDecl("Imports",FunType([Op("List",[Var("String")])],Var("BSpec"))),OpDecl("Specification",FunType([Op("List",[Var("BSpec")])],Var("Spec"))),OpDecl("ConstType",FunType([Var("Term")],Var("Type"))),OpDecl("FunType",FunType([Op("List",[Var("Term")]),Var("Term")],Var("Type"))),OpDecl("Sort",FunType([Var("String"),Op("List",[Var("Kind")])],Var("SortDecl"))),OpDecl("OpDecl",FunType([Var("String"),Var("Type")],Var("OpDecl"))),OpDecl("Sorts",FunType([Op("List",[Var("SortDecl")])],Var("BSig"))),OpDecl("Operations",FunType([Op("List",[Var("OpDecl")])],Var("BSig"))),OpDecl("Final",FunType([Op("List",[Var("Int")])],Var("Automaton"))),OpDecl("Case",FunType([Var("String"),Var("Path"),Op("List",[Var("Alt")]),Var("Automaton")],Var("Automaton"))),OpDecl("Alt",FunType([Var("String"),Op("List",[Var("Path")]),Var("Automaton")],Var("Automaton"))),OpDecl("Continue",FunType([Var("String")],Var("Automaton"))),OpDecl("Assign",FunType([Var("Term"),Var("Term")],Var("Term"))),OpDecl("Assign",FunType([Var("Term")],Var("Term"))),OpDecl("Wld",ConstType(Var("Term"))),OpDecl("Var",FunType([Var("String")],Var("Term"))),OpDecl("Int",FunType([Var("Int")],Var("Term"))),OpDecl("Real",FunType([Var("Real")],Var("Term"))),OpDecl("Str",FunType([Var("String")],Var("Term"))),OpDecl("Op",FunType([Var("String"),Op("List",[Var("Term")])],Var("Term"))),OpDecl("Id",ConstType(Var("Strat"))),OpDecl("Fail",ConstType(Var("Strat"))),OpDecl("Test",FunType([Var("Strat")],Var("Strat"))),OpDecl("Not",FunType([Var("Strat")],Var("Strat"))),OpDecl("Seq",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("Choice",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("LChoice",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("SVar",FunType([Var("String")],Var("SVar"))),OpDecl("Rec",FunType([Var("String"),Var("Strat")],Var("Strat"))),OpDecl("Let",FunType([Var("SDef"),Var("Strat")],Var("Strat"))),OpDecl("SDef",FunType([Var("String"),Op("List",[Var("String")]),Var("Strat")],Var("SDef"))),OpDecl("SDef",FunType([Op("List",[Var("Pragma")]),Var("String"),Op("List",[Var("String")]),Var("Strat")],Var("SDef"))),OpDecl("DontInline",ConstType(Var("Pragma"))),OpDecl("Call",FunType([Var("SVar"),Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("Path",FunType([Var("Int"),Var("Strat")],Var("Strat"))),OpDecl("Cong",FunType([Var("String"),Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("One",FunType([Var("Strat")],Var("Strat"))),OpDecl("Some",FunType([Var("Strat")],Var("Strat"))),OpDecl("All",FunType([Var("Strat")],Var("Strat"))),OpDecl("Thread",FunType([Var("Strat")],Var("Strat"))),OpDecl("Assign",FunType([Var("Term"),Var("Term")],Var("Strat"))),OpDecl("Match",FunType([Var("Term")],Var("Strat"))),OpDecl("Build",FunType([Var("Term")],Var("Strat"))),OpDecl("MatchVar",FunType([Var("String")],Var("Strat"))),OpDecl("MatchFun",FunType([Var("String")],Var("Strat"))),OpDecl("Scope",FunType([Op("List",[Var("String")]),Var("Strat")],Var("Strat"))),OpDecl("Where",FunType([Var("Strat")],Var("Strat"))),OpDecl("Mark",FunType([Var("Term")],Var("Strat"))),OpDecl("IsMark",FunType([Var("Term")],Var("Strat"))),OpDecl("AnnBuild",FunType([Var("Term"),Var("Term")],Var("Strat"))),OpDecl("AnnMatch",FunType([Var("Term"),Var("Term")],Var("Strat"))),OpDecl("AnnRemove",FunType([Var("Term")],Var("Strat"))),OpDecl("Prim",FunType([Var("String")],Var("Strat"))),OpDecl("CountRule",FunType([Var("String")],Var("Strat"))),OpDecl("Program",FunType([Var("Preamble"),Var("Instr")],Var("Program"))),OpDecl("PROCDECL",FunType([Var("String")],Var("Instr"))),OpDecl("PROC",FunType([Var("String")],Var("Instr"))),OpDecl("ENDPROC",ConstType(Var("Instr"))),OpDecl("Ccall",FunType([Var("String"),Op("List",[Var("Null")])],Var("Instr"))),OpDecl("Label",FunType([Var("String")],Var("Instr"))),OpDecl("Goto",FunType([Var("String")],Var("Instr"))),OpDecl("Block",FunType([Op("List",[Var("Instr")])],Var("Instr"))),OpDecl("Iprim",FunType([Var("String")],Var("Instr"))),OpDecl("Iprim2",FunType([Var("String"),Var("String")],Var("Instr"))),OpDecl("ICountRule",FunType([Var("String")],Var("Instr"))),OpDecl("NotNULLd",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("Ccontinue",FunType([Var("String")],Var("Instr"))),OpDecl("ATmakeString",FunType([Var("String")],Var("TermExp"))),OpDecl("MakeInt",FunType([Var("Int")],Var("TermExp"))),OpDecl("App0",FunType([Var("String")],Var("TermExp"))),OpDecl("App1",FunType([Var("String"),Var("TermExp")],Var("TermExp"))),OpDecl("App2",FunType([Var("String"),Var("TermExp"),Var("TermExp")],Var("TermExp"))),OpDecl("App3",FunType([Var("String"),Var("TermExp"),Var("TermExp"),Var("TermExp")],Var("TermExp"))),OpDecl("App4",FunType([Var("String"),Var("TermExp"),Var("TermExp"),Var("TermExp"),Var("TermExp")],Var("TermExp"))),OpDecl("App5",FunType([Var("String"),Var("TermExp"),Var("TermExp"),Var("TermExp"),Var("TermExp"),Var("TermExp")],Var("TermExp"))),OpDecl("App6",FunType([Var("String"),Var("TermExp"),Var("TermExp"),Var("TermExp"),Var("TermExp"),Var("TermExp"),Var("TermExp")],Var("TermExp"))),OpDecl("Egetd",FunType([Var("Int"),Var("Int")],Var("TermExp"))),OpDecl("Tset",FunType([Var("TermExp")],Var("Instr"))),OpDecl("Tpush",ConstType(Var("Instr"))),OpDecl("Tpop",ConstType(Var("Instr"))),OpDecl("Tdupl",ConstType(Var("Instr"))),OpDecl("Tduplinv",ConstType(Var("Instr"))),OpDecl("Tdrop",ConstType(Var("Instr"))),OpDecl("TpushIthSon",FunType([Var("Int")],Var("Instr"))),OpDecl("TputIthSon",FunType([Var("Int")],Var("Instr"))),OpDecl("IsAppl",ConstType(Var("Instr"))),OpDecl("MatchVar",FunType([Var("Int")],Var("Instr"))),OpDecl("MatchInt",FunType([Var("Int")],Var("Instr"))),OpDecl("MatchString",FunType([Var("String")],Var("Instr"))),OpDecl("MatchVard",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("MatchFun",FunType([Var("String"),Var("Int")],Var("Instr"))),OpDecl("MatchFunFC",FunType([Var("String"),Var("Int"),Var("String")],Var("Instr"))),OpDecl("BuildVar",FunType([Var("Int")],Var("Instr"))),OpDecl("BuildInt",FunType([Var("Int")],Var("Instr"))),OpDecl("BuildVard",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("BuildFun",FunType([Var("String"),Var("Int")],Var("Instr"))),OpDecl("BuildStr",FunType([Var("String")],Var("Instr"))),OpDecl("GetAnn",ConstType(Var("Instr"))),OpDecl("SetAnn",ConstType(Var("Instr"))),OpDecl("RemoveAnn",ConstType(Var("Instr"))),OpDecl("Arg",FunType([Var("Int")],Var("Instr"))),OpDecl("Cpush",FunType([Var("String")],Var("Instr"))),OpDecl("Cpop",ConstType(Var("Instr"))),OpDecl("Crestore",ConstType(Var("Instr"))),OpDecl("Cjump",ConstType(Var("Instr"))),OpDecl("Rpush",FunType([Var("String")],Var("Instr"))),OpDecl("Return",ConstType(Var("Instr"))),OpDecl("Epush",FunType([Var("Int")],Var("Instr"))),OpDecl("Epushd",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("Epop",FunType([Var("Int")],Var("Instr"))),OpDecl("Epopd",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("NewCounter",ConstType(Var("Instr"))),OpDecl("CloseCounter",ConstType(Var("Instr"))),OpDecl("CounterOK",ConstType(Var("Instr"))),OpDecl("AllInit",ConstType(Var("Instr"))),OpDecl("AllNextSon",FunType([Var("String")],Var("Instr"))),OpDecl("AllBuild",ConstType(Var("Instr"))),OpDecl("OneInit",ConstType(Var("Instr"))),OpDecl("OneNextSon",ConstType(Var("Instr"))),OpDecl("OneBuild",ConstType(Var("Instr"))),OpDecl("SomeInit",ConstType(Var("Instr"))),OpDecl("SomeNextSon",FunType([Var("String")],Var("Instr"))),OpDecl("SomeBuild",ConstType(Var("Instr"))),OpDecl("TravInit",ConstType(Var("Instr"))),OpDecl("MatchTravInit",ConstType(Var("Instr"))),OpDecl("MatchTravEnd",ConstType(Var("Instr"))),OpDecl("OneMatchNextSon",ConstType(Var("Instr"))),OpDecl("ProcCall",FunType([Var("String"),Op("List",[Var("Int")])],Var("Instr"))),OpDecl("DBlock",FunType([Op("List",[Var("RegDecl")]),Op("List",[Var("Instr")])],Var("Instr"))),OpDecl("Move",FunType([Var("Int"),Var("Int"),Var("Int"),Var("Int")],Var("Instr"))),OpDecl("MoveTop",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("MoveArg",FunType([Var("Int"),Var("Int"),Var("Int"),Var("Int"),Var("Int")],Var("Instr"))),OpDecl("TestFun",FunType([Var("Int"),Var("Int"),Var("String"),Var("Int"),Var("String")],Var("Instr"))),OpDecl("TestStr",FunType([Var("Int"),Var("Int"),Var("String"),Var("String")],Var("Instr"))),OpDecl("TestInt",FunType([Var("Int"),Var("Int"),Var("Int"),Var("String")],Var("Instr"))),OpDecl("TestReal",FunType([Var("Int"),Var("Int"),Var("Real"),Var("String")],Var("Instr"))),OpDecl("Instr",FunType([Var("Strategy"),Var("Env"),Var("REnv")],Var("Instr"))),OpDecl("TNil",ConstType(Op("Prod",[Op("Nil",[])]))),OpDecl("TCons",FunType([Var("a"),Op("Prod",[Var("lt")])],Op("Prod",[Op("Cons",[Var("a"),Var("lt")])]))),OpDecl("Pair",FunType([Var("a"),Var("b")],Op("Prod",[Op("Cons",[Var("a"),Op("Cons",[Var("b"),Op("Nil",[])])])]))),OpDecl("Nil",ConstType(Op("List",[Var("a")]))),OpDecl("Cons",FunType([Var("a"),Op("List",[Var("a")])],Op("List",[Var("a")]))),OpDecl("stdin",ConstType(Var("File"))),OpDecl("stdout",ConstType(Var("File"))),OpDecl("stderr",ConstType(Var("File")))])]),Rules([RDef("dist",["s"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(All(Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Id)))),Var("t")),Id)),RDef("d",["s"],Rule(Op("Pair",[Var("t"),Var("env")]),App(Call(SVar("s"),[]),Var("t")),Id)),RDef("t",["s"],Rule(Op("Pair",[Var("t"),Var("env")]),Op("Pair",[App(Call(SVar("s"),[]),Var("t")),Var("env")]),Id)),RDef("coll",["s"],Rule(Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TCons",[Var("zs"),Op("TNil",[])])]),Where(AM(BA(Call(SVar("unzip"),[Call(SVar("s"),[])]),Var("xs")),Op("TCons",[Var("ys"),Op("TCons",[Var("zs"),Op("TNil",[])])]))))),RDef("RnVar",["isvar"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(Call(SVar("isvar"),[Seq(Call(SVar("split"),[Id,Build(Var("env"))]),Call(SVar("lookup"),[]))]),Var("t")),Id)),RDef("RnBinding",["bndvrs"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2"))))))),RDef("DistBinding",["s"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(All(Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id)))),Var("t")),Id)),RDef("DistBinding",["s","boundin"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(Call(SVar("boundin"),[Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id))),Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env1"),Op("TNil",[])])])),Id))),Id]),Var("t")),Id)),RDef("RnBinding",["bndvrs","paste"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("paste"),[Build(Var("ys"))]),Var("t")),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2"))))))),RDef("SubsVar",["isvar","mksbs"],Rule(Var("t"),App(Call(SVar("lookup"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("sbs"),Op("TNil",[])])])),Where(Seq(AM(BA(Call(SVar("isvar"),[]),Var("t")),Var("x")),AM(Call(SVar("mksbs"),[]),Var("sbs")))))),RDef("io-index",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])]),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])]),Where(BA(Call(SVar("fetch"),[Seq(Scope(["i","xs"],Seq(AM(Id,Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Build(Op("TCons",[Var("i"),Op("TCons",[App(Call(SVar("get-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Op("TNil",[])])])))),AM(Id,Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])))]),Var("env"))))),RDef("C",[],Rule(Op("Instr",[Op("Id",[]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Fail",[]),Var("env"),Var("rcs")]),Op("Goto",[Str("fail")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Test",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpop",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Not",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Crestore",[]),Op("Cons",[Op("Cjump",[]),Op("Cons",[Op("Label",[Var("fc")]),Op("Nil",[])])])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("C",[],Rule(Op("Instr",[Op("Seq",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("LChoice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Instr",[Op("Choice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Choice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Choices",[Var("s2"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("sc")),AM(Call(SVar("new"),[]),Var("fc")))))),RDef("C",[],Rule(Op("Choices",[Op("Choice",[Var("s1"),Var("s2")]),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Ccontinue",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Choices",[Var("s2"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("C",[],Rule(Op("Choices",[Op("LChoice",[Var("s1"),Var("s2")]),Var("sc"),Var("env"),Var("rcs")]),Op("Choices",[Op("Choice",[Var("s1"),Var("s2")]),Var("sc"),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Choices",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("done")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Label",[Var("done")]),Op("Nil",[])])])])])])]),Where(Seq(Not(BA(Choice(Call(SVar("Choice"),[Id,Id]),Call(SVar("LChoice"),[Id,Id])),Var("s"))),AM(Call(SVar("new"),[]),Var("done")))))),RDef("C",[],Rule(Op("Instr",[Op("Assign",[Op("Var",[Var("x")])]),Var("env"),Var("rcs")]),Op("MoveTop",[Var("j"),Var("o")]),Where(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]))))),RDef("C",[],Rule(Op("Instr",[Op("Assign",[Op("Var",[Var("x")]),Op("Var",[Var("y")])]),Var("env"),Var("rcs")]),Op("Move",[Var("j1"),Var("o1"),Var("j2"),Var("o2")]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j1"),Op("TCons",[Var("o1"),Op("TNil",[])])])),AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("y"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j2"),Op("TCons",[Var("o2"),Op("TNil",[])])])))))),RDef("C",[],Rule(Op("Instr",[Op("Assign",[Op("Var",[Var("x")]),Var("t")]),Var("env"),Var("rcs")]),Op("Instr",[Op("Where",[Op("Seq",[Op("Build",[Var("t")]),Op("Assign",[Op("Var",[Var("x")])])])]),Var("env"),Var("rcs")]),Where(Seq(Build(Var("t")),Choice(AM(Id,Op("Op",[Wld,Wld])),Choice(AM(Id,Op("Int",[Wld])),AM(Id,Op("Str",[Wld])))))))),RDef("C",[],Rule(Op("Instr",[Op("Case",[Var("lab"),Var("x"),Var("alts"),Var("def")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Branch",[Op("Case",[Var("lab"),Var("x"),Var("alts"),Var("def")]),Var("sc"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])]),Where(AM(Call(SVar("new"),[]),Var("sc"))))),RDef("Cbranch",[],Rule(Op("Branch",[Op("Case",[Var("lab"),Op("Var",[Var("x")]),Var("alts"),Var("def")]),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Goto",[Var("lab")]),Op("Cons",[Op("Label",[Var("lab")]),Op("Cons",[Op("Alts",[Var("alts"),Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Cons",[Var("ins"),Op("Nil",[])])])])])]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])])),AM(BA(Call(SVar("DefaultLabel"),[]),Op("TCons",[Var("def"),Op("TCons",[Var("sc"),Op("TCons",[Var("env"),Op("TCons",[Var("rcs"),Op("TNil",[])])])])])),Op("TCons",[Var("fc"),Op("TCons",[Var("ins"),Op("TNil",[])])])))))),RDef("Cbranch",[],Rule(Op("Branch",[Op("Continue",[Var("lab")]),Var("sc"),Var("env"),Var("rcs")]),Op("Goto",[Var("lab")]),Id)),RDef("Cbranch",[],Rule(Op("Branch",[Op("Call",[Op("SVar",[Var("f")]),Op("Nil",[])]),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("sc")]),Op("Cons",[Op("Goto",[Var("f")]),Op("Nil",[])])])]),Where(AM(BA(Not(Call(SVar("is-toplevel-proc"),[])),Var("f")),Var("lab"))))),RDef("Cbranch",[],Rule(Op("Branch",[Op("Call",[Op("SVar",[Var("f")]),Op("Nil",[])]),Var("sc"),Var("env"),Var("rcs")]),Op("Ccall",[Var("f"),Op("Nil",[])]),Where(AM(BA(Call(SVar("is-toplevel-proc"),[]),Var("f")),Var("lab"))))),RDef("CbranchOther",[],Rule(Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Nil",[])])])]),Id)),RDef("DefaultLabel",[],Rule(Op("TCons",[Op("Fail",[]),Op("TCons",[Var("sc"),Op("TCons",[Var("env"),Op("TCons",[Var("rcs"),Op("TNil",[])])])])]),Op("TCons",[Str("fail"),Op("TCons",[Op("Block",[Op("Nil",[])]),Op("TNil",[])])]),Id)),RDef("DefaultLabel",[],Rule(Op("TCons",[Var("s"),Op("TCons",[Var("sc"),Op("TCons",[Var("env"),Op("TCons",[Var("rcs"),Op("TNil",[])])])])]),Op("TCons",[Var("lab"),Op("TCons",[Op("Block",[Op("Cons",[Op("Label",[Var("lab")]),Op("Cons",[Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Op("TNil",[])])]),Where(Seq(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("s"),Op("TCons",[Op("Fail",[]),Op("TNil",[])])])),AM(Call(SVar("new"),[]),Var("lab")))))),RDef("C",[],Rule(Op("Alts",[Op("Nil",[]),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Alts",[Op("Cons",[Op("Alt",[Var("c"),Var("args"),Var("s")]),Op("Nil",[])]),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[App(Call(SVar("TestConstructor"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("c"),Op("TCons",[Var("fc"),Op("TNil",[])])])])),Op("Cons",[Op("Block",[Var("get-args")]),Op("Cons",[Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])]),Where(AM(BA(Call(SVar("nzip0"),[Call(SVar("CArg"),[Build(Var("env")),Build(Var("x"))])]),Var("args")),Var("get-args"))))),RDef("C",[],Rule(Op("Alts",[Op("Cons",[Op("Alt",[Var("c"),Var("args"),Var("s")]),Var("alts")]),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[App(Call(SVar("TestConstructor"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("c"),Op("TCons",[Var("match-fail"),Op("TNil",[])])])])),Op("Cons",[Op("Block",[Var("get-args")]),Op("Cons",[Op("Branch",[Var("s"),Var("sc"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("match-fail")]),Op("Cons",[Op("Alts",[Var("alts"),Var("x"),Var("fc"),Var("sc"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(Seq(AM(Build(Var("alts")),Op("Cons",[Wld,Wld])),Seq(AM(Call(SVar("new"),[]),Var("match-fail")),AM(BA(Call(SVar("nzip0"),[Call(SVar("CArg"),[Build(Var("env")),Build(Var("x"))])]),Var("args")),Var("get-args"))))))),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Fun",[Var("f"),Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestFunFC",[Op("VAR",[Var("lab")]),Var("fc"),Op("Egetd",[Var("j"),Var("o")])]),Where(AM(BA(Call(SVar("get-afun"),[]),Op("AFun",[Var("f"),Var("n")])),Var("lab"))))),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Int",[Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestInt",[Var("j"),Var("o"),Var("n"),Var("fc")]),Id)),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Real",[Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestReal",[Var("j"),Var("o"),Var("n"),Var("fc")]),Id)),RDef("TestConstructor",[],Rule(Op("TCons",[Op("TCons",[Var("j"),Op("TCons",[Var("o"),Op("TNil",[])])]),Op("TCons",[Op("Str",[Var("x")]),Op("TCons",[Var("fc"),Op("TNil",[])])])]),Op("TestStr",[Var("j"),Var("o"),App(Call(SVar("escape"),[]),Var("x")),Var("fc")]),Id)),RDef("CArg",["env","src"],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Var",[Var("x")]),Op("TNil",[])])]),Op("MoveArg",[Var("i1"),Var("o1"),Var("i2"),Var("o2"),Var("n")]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("env"),[]),Op("TNil",[])),Op("TNil",[])])])),Op("TCons",[Var("i1"),Op("TCons",[Var("o1"),Op("TNil",[])])])),AM(Call(SVar("src"),[]),Op("TCons",[Var("i2"),Op("TCons",[Var("o2"),Op("TNil",[])])])))))),RDef("C",[],Rule(Op("Instr",[Op("Rec",[Var("x"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("sc")]),Op("Cons",[Op("Label",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Return",[]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("sc"))))),RDef("C",[],Rule(Op("Instr",[Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Ccall",[Var("lab"),Op("Nil",[])]),Where(AM(BA(Call(SVar("is-toplevel-proc"),[]),Var("x")),Var("lab"))))),RDef("C",[],Rule(Op("Instr",[Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("ret")]),Op("Cons",[Op("Goto",[Var("x")]),Op("Cons",[Op("Label",[Var("ret")]),Op("Nil",[])])])])]),Where(Seq(BA(Not(Call(SVar("is-toplevel-proc"),[])),Var("x")),AM(Call(SVar("new"),[]),Var("ret")))))),RDef("C",[],Rule(Op("Instr",[Op("Let",[Var("sdef"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("y")]),Op("Cons",[Op("Instr",[Var("sdef"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("y")]),Op("Nil",[])])])])])]),Where(AM(Call(SVar("new"),[]),Var("y"))))),RDef("Ctop",[],Rule(Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("PROC",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("ENDPROC",[]),Op("Nil",[])])])])]),Id)),RDef("Ctop",[],Rule(Op("Instr",[Op("SDef",[Var("pragmas"),Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Label",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Return",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("SDef",[Var("pragmas"),Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Path",[Var("i"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TpushIthSon",[Var("i")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("TputIthSon",[Var("i")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Cong",[Var("f"),Var("ss")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TestFunTop",[Op("VAR",[Var("lab")])]),Op("Cons",[Op("TravInit",[]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Cons",[Op("AllBuild",[]),Op("Nil",[])])])])])]),Where(AM(BA(Call(SVar("get-afun"),[]),Op("AFun",[Var("f"),App(Call(SVar("length"),[]),Var("ss"))])),Var("lab"))))),RDef("C",[],Rule(Op("Instr",[Op("CongWld",[Var("ss")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TravInit",[]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Cons",[Op("AllBuild",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongKids",[Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongKids",[Op("Cons",[Var("s"),Var("ss")])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("OneNextSon",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("All",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("AllInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("AllNextSon",[Var("c2")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("AllBuild",[]),Op("Nil",[])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("One",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("IsAppl",[]),Op("Cons",[Op("OneInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("OneNextSon",[]),Op("Cons",[Op("Cpush",[Var("c1")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("OneBuild",[]),Op("Nil",[])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Some",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("IsAppl",[]),Op("Cons",[Op("SomeInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("SomeNextSon",[Var("c2")]),Op("Cons",[Op("Cpush",[Var("c1")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("CounterOK",[]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("SomeBuild",[]),Op("Nil",[])])])])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Thread",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("ThreadInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("ThreadNextSon",[Var("c2")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("ThreadSetEnv",[]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("ThreadBuild",[]),Op("Nil",[])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Scope",[Var("xs"),Var("s")]),Var("env"),Var("i")]),Op("Block",[Op("Cons",[Op("Epushd",[Var("i"),Var("o")]),Op("Cons",[Op("Instr",[Var("s"),Op("Cons",[Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("env")]),App(Call(SVar("add"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])]))]),Op("Cons",[Op("Epopd",[Var("i"),Var("o")]),Op("Nil",[])])])])]),Where(AM(BA(Call(SVar("length"),[]),Var("xs")),Var("o"))))),RDef("C",[],Rule(Op("Instr",[Op("Where",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpop",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Prim",[Var("x")]),Var("env"),Var("rcs")]),Op("Iprim",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Prim2",[Var("x"),Var("y")]),Var("env"),Var("rcs")]),Op("Iprim2",[Var("x"),Var("y")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CountRule",[Var("x")]),Var("env"),Var("rcs")]),Op("ICountRule",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Var("t")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Block",[Var("xs")]),Op("Cons",[Op("Tset",[Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")])]),Op("Nil",[])])])]),Where(AM(BA(Seq(Call(SVar("tvars"),[]),Call(SVar("map"),[Call(SVar("TestVar"),[Build(Var("env")),Build(Var("rcs"))])])),Var("t")),Var("xs"))))),RDef("TestVar",["env","rcs"],Rule(Var("x"),Var("ins"),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("env"),[]),Op("TNil",[])),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[App(Call(SVar("rcs"),[]),Op("TNil",[])),Op("TNil",[])])])),Build(Op("NotNULL",[Var("o")]))),AM(Build(Op("NotNULLd",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C",[],Rule(Op("BuildTerm",[Op("Str",[Var("x")]),Var("env"),Var("rcs")]),Op("ATmakeString",[App(Call(SVar("escape"),[]),Var("x"))]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Int",[Var("x")]),Var("env"),Var("rcs")]),Op("MakeInt",[Var("x")]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Real",[Var("x")]),Var("env"),Var("rcs")]),Op("ATmakeReal",[Var("x")]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Var",[Var("x")]),Var("env"),Var("rcs")]),Var("ins"),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[Var("rcs"),Op("TNil",[])])])),Build(Op("Eget",[Var("o")]))),AM(Build(Op("Egetd",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C",[],Rule(Op("BuildTerm",[Op("BuildDefault",[Var("t")]),Var("env"),Var("rcs")]),Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("BuildTerm",[Op("Op",[Var("f"),Var("ts")]),Var("env"),Var("rcs")]),Explode(Var("app"),Op("Cons",[Var("f"),App(Call(SVar("map"),[Scope(["t"],SRule(Rule(Var("t"),Op("BuildTerm",[Var("t"),Var("env"),Var("rcs")]),Id)))]),Var("ts"))])),Where(AM(BA(Call(SVar("conc-strings"),[]),Op("TCons",[Str("App"),Op("TCons",[App(Seq(Call(SVar("length"),[]),Call(SVar("int-to-string"),[])),Var("ts")),Op("TNil",[])])])),Var("app"))))),RDef("C",[],Rule(Op("BuildTerm",[Op("App",[Var("s"),Var("t")]),Var("env"),Var("rcs")]),Op("AppEncountered",[Op("App",[Var("s"),Var("t")])]),Where(Call(SVar("debug"),[Build(Str("compiler.r: App encountered"))])))),RDef("Fst",[],Rule(Op("TCons",[Var("x"),Var("tp")]),Var("x"),Id)),RDef("Snd",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Var("tp")])]),Var("y"),Id)),RDef("Third",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TCons",[Var("z"),Var("tp")])])]),Var("z"),Id)),RDef("TInd1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Var("x"),Id)),RDef("TInd2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("tp"),Op("TNil",[])])]),Id)),RDef("Dupl",[],Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("split",["f","g"],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TNil",[])])]),Id)),RDef("split3",["f","g","h"],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TCons",[App(Call(SVar("h"),[]),Var("x")),Op("TNil",[])])])]),Id)),RDef("Swap",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("Thd",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("x"),Id)),RDef("Ttl",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("xs"),Id)),RDef("sect",["op","arg"],Rule(Var("x"),App(Call(SVar("op"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("arg"),[]),Op("TNil",[])),Op("TNil",[])])])),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(34),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(34),Var("cs")])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(92),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(92),Var("cs")])]),Id)),RDef("Escape",[],Rule(Op("Cons",[Int(10),Var("cs")]),Op("Cons",[Int(92),Op("Cons",[Int(110),Var("cs")])]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(34),Var("cs")])]),Op("Cons",[Int(34),Var("cs")]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(92),Var("cs")])]),Op("Cons",[Int(92),Var("cs")]),Id)),RDef("UnEscape",[],Rule(Op("Cons",[Int(92),Op("Cons",[Int(110),Var("cs")])]),Op("Cons",[Int(10),Var("cs")]),Id)),RDef("S2I1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("n"),Id)),RDef("S2I2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Int(10),Op("TCons",[Var("n"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])])))))),RDef("S2D0",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Int(46),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Int(10),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("S2D1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Var("n"),Id)),RDef("S2D2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[App(Call(SVar("div"),[]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TCons",[Var("f"),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Var("f"),Op("TCons",[Int(10),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])])))))),RDef("SplitInit",[],Rule(Var("x"),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])])]),Id)),RDef("SplitExit",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),App(Call(SVar("reverse"),[]),Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")])),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Int(32),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("y"),Var("cs")]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Where(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("y"),Op("TCons",[Int(32),Op("TNil",[])])]))))),RDef("add-extension",[],Rule(Op("TCons",[Var("name"),Op("TCons",[Var("ext"),Op("TNil",[])])]),App(Call(SVar("concat-strings"),[]),Op("Cons",[Var("name"),Op("Cons",[Str("."),Op("Cons",[Var("ext"),Op("Nil",[])])])])),Id)),RDef("FoldR1",[],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Op("Nil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Id)),RDef("FoldR",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("TFoldR",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("FoldL",["s"],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Op("TNil",[])])]),Id)),RDef("FoldL",["s"],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("y"),Id)),RDef("lsplit",["f","g"],Rule(Var("x"),Op("Cons",[App(Call(SVar("f"),[]),Var("x")),Op("Cons",[App(Call(SVar("g"),[]),Var("x")),Op("Nil",[])])]),Id)),RDef("Look1",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Wld]),Op("TNil",[])])]),Var("y"),Id)),RDef("Look2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Wld,Var("xs")]),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("Look1'",["keyeq"],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TNil",[])])]),Var("y"),Where(BA(Call(SVar("keyeq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),RDef("HdMember",["mklst"],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[AM(Id,Var("x"))]))))),RDef("HdMember'",["eq","mklst"],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[Scope(["y"],SRule(Rule(Var("y"),App(Call(SVar("eq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id)))]))))),RDef("union",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Build(Var("l2"))),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),RDef("diff",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),RDef("diff'",["eq"],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),RDef("isect",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])])),Op("TNil",[])])])),Id)),RDef("foldr-kids",["nul","sum"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]),Var("xs")),Id)),RDef("foldr-kids",["zero","sum","s"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("zero"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]),Var("xs")),Id)),RDef("CollectSplit",["s","f","g"],Rule(Explode(Var("f"),Var("as")),Op("TCons",[Var("t"),Op("TCons",[App(Call(SVar("union"),[]),Op("TCons",[Var("ys"),Op("TCons",[App(Call(SVar("unions"),[]),Var("xs")),Op("TNil",[])])])),Op("TNil",[])])]),Where(Seq(AM(BA(Seq(Call(SVar("list"),[Call(SVar("s"),[])]),Call(SVar("unzip"),[])),Var("as")),Op("TCons",[Var("bs"),Op("TCons",[Var("xs"),Op("TNil",[])])])),AM(BA(Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))]),Explode(Var("f"),Var("bs"))),Op("TCons",[Var("t"),Op("TCons",[Var("ys"),Op("TNil",[])])])))))),RDef("SortL",["s"],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("l")])]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l")])]),Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),RDef("LSort",["s"],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l'")])]),Where(AM(BA(Call(SVar("at_suffix"),[SRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Var("ys"),Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])))))]),Var("l")),Var("l'"))))),RDef("Uniq",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Where(BA(Call(SVar("fetch"),[AM(Id,Var("x"))]),Var("l"))))),RDef("LMerge",["s"],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("z"),Var("l'")]),Where(AM(BA(Call(SVar("at_suffix"),[SRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Var("ys"),Where(AM(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Var("z")))))]),Var("l")),Var("l'"))))),RDef("Zip1",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1a'",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1b'",[],Rule(Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1c",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1c'",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1d",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("LZip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("RZip2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("Zip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("UnZip1",[],Rule(Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UnZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("UnZip3",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip00",[],Rule(Var("xs"),Op("TCons",[Int(0),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip01",[],Rule(Var("xs"),Op("TCons",[Int(1),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("NZip2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("NZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("TZip1",[],Rule(Op("TCons",[Op("TNil",[]),Op("TCons",[Op("TNil",[]),Op("TNil",[])])]),Op("TNil",[]),Id)),RDef("TZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Op("TCons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("TZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[Var("x"),Var("xs")]),Id)),RDef("cart",["s"],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),App(Seq(Call(SVar("map"),[Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("map"),[Scope(["y"],SRule(Rule(Var("y"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id)))]),Var("ys")),Id)))]),Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])])),Var("xs")),Id)),RDef("Skip",["s"],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("Ind1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Var("x"),Id)),RDef("Ind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("xs"),Op("TNil",[])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(2),Op("TNil",[])])]))))),RDef("Gind0",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Int(1),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("Gind1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Var("n"),Id)),RDef("Gind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("y"),Op("TCons",[Var("xs"),Op("TNil",[])])])]),Id)),RDef("Hd",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("x"),Id)),RDef("Tl",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Id)),RDef("Last",[],Rule(Op("Cons",[Var("x"),Op("Nil",[])]),Var("x"),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("z")]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("z")])]),Id)),RDef("MkSingleton",[],Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("RevInit",[],Rule(Var("xs"),Op("TCons",[Var("xs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("Rev",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("RevExit",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Var("ys"),Id)),RDef("UptoInit",[],Rule(Var("i"),Op("TCons",[Var("i"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UptoExit",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("xs"),Where(BA(Call(SVar("lt"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(0),Op("TNil",[])])]))))),RDef("UptoStep",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Op("Cons",[Var("i"),Var("xs")]),Op("TNil",[])])]),Id)),RDef("conc",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("at_end"),[Build(Var("l2"))]),Var("l1")),Id)),RDef("Sep",["s"],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("Cons",[App(Call(SVar("s"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Var("xs")])]),Id))]),Strategies([SDef("env-alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("dist"),[Call(SVar("x"),[])])))),SDef("env-topdown",["s","skip"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),Call(SVar("dist"),[Call(SVar("x"),[])]))))),SDef("env-bottomup",["s"],Rec("x",Seq(Call(SVar("split"),[Call(SVar("dist"),[Call(SVar("x"),[])]),Call(SVar("Snd"),[])]),Call(SVar("s"),[])))),SDef("thread-alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Thread(Call(SVar("x"),[]))))),SDef("rename",["isvar","bndvars"],Seq(Scope(["t"],SRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id))),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[])])))])))),SDef("rename",["isvar","bndvars","boundin"],Seq(Scope(["t"],SRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id))),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])])))])))),SDef("rename",["isvar","bndvars","boundin","paste"],Seq(Scope(["t"],SRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id))),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])])))])))),SDef("subs-args",[],LChoice(AM(Id,Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Scope(["xs","ys","t"],SRule(Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TCons",[Var("t"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TNil",[])])]),Id))))),SDef("substitute",["isvar","ren"],Seq(AM(Call(SVar("subs-args"),[]),Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Var("t")),Call(SVar("alltd"),[Seq(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Call(SVar("ren"),[]))])))),SDef("substitute",["isvar"],Call(SVar("substitute"),[Call(SVar("isvar"),[]),Id])),SDef("substitute",["isvar","varshape","bndvars","boundin","paste","ren"],Seq(AM(Call(SVar("subs-args"),[]),Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("varshape"),[])]),LChoice(Seq(Call(SVar("Fst"),[]),Seq(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Call(SVar("ren"),[]))),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("x"),[]),Call(SVar("boundin"),[])]))))]))))),SDef("substitute",["isvar","varshape","bndvars","boundin","paste"],Call(SVar("substitute"),[Call(SVar("isvar"),[]),Call(SVar("varshape"),[]),Call(SVar("bndvars"),[]),Call(SVar("boundin"),[]),Call(SVar("paste"),[]),Id])),SDef("subs'",["isvar","mklst"],Seq(Call(SVar("obsolete"),[Build(Str("subs'/2"))]),Call(SVar("subs"),[Call(SVar("isvar"),[]),Call(SVar("mklst"),[])]))),SDef("subs",["isvar"],Seq(Call(SVar("obsolete"),[Build(Str("subs/1"))]),Call(SVar("substitute"),[Call(SVar("isvar"),[])]))),SDef("subs",["isvar","mklst"],Seq(Call(SVar("obsolete"),[Build(Str("subs/2"))]),Seq(Call(SVar("split"),[Call(SVar("mklst"),[]),Id]),Call(SVar("substitute"),[Call(SVar("isvar"),[])])))),SDef("subs_proper",["isvar","ren"],Seq(Call(SVar("obsolete"),[Build(Str("subs_proper/2"))]),Call(SVar("substitute"),[Call(SVar("isvar"),[]),Call(SVar("ren"),[])]))),SDef("subs_proper'",["isvar","ren","mklst"],Seq(Call(SVar("obsolete"),[Build(Str("subs_proper'/2"))]),Seq(Call(SVar("split"),[Call(SVar("mklst"),[]),Id]),Call(SVar("substitute"),[Call(SVar("isvar"),[]),Call(SVar("ren"),[])])))),SDef("C",[],LChoice(Call(SVar("Cbranch"),[]),Call(SVar("CbranchOther"),[]))),SDef("exit",[],Prim("_ST_exit")),SDef("call",[],Prim("_ST_call")),SDef("call-noisy",[],Prim("_ST_call_noisy")),SDef("get-pid",[],Prim("_ST_get_pid")),SDef("rm-files",[],Seq(AM(Id,Var("files")),Where(BA(Call(SVar("call"),[]),Op("TCons",[Str("rm"),Op("TCons",[Op("Cons",[Str("-f"),Var("files")]),Op("TNil",[])])]))))),SDef("pipe",["c","suf2"],Call(SVar("pipe'"),[Call(SVar("c"),[]),Call(SVar("suf2"),[]),Build(Op("Nil",[]))])),SDef("pipe'",["c","suf2","args"],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf2"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("call"),[]),Op("TCons",[App(Call(SVar("c"),[]),Op("TNil",[])),Op("TCons",[App(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("args"),[]),Op("TNil",[])),Op("TCons",[Op("Cons",[Str("-i"),Op("Cons",[Var("in"),Op("Cons",[Str("-o"),Op("Cons",[Var("out"),Op("Nil",[])])])])]),Op("TNil",[])])])),Op("TNil",[])])]))))))),SDef("transform-file",["s","suf"],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("TCons",[Var("in"),Op("TCons",[Var("out"),Op("TNil",[])])]))))))),SDef("apply-to-file",["s"],Seq(AM(Id,Op("TCons",[Var("in"),Op("TCons",[Var("out"),Op("TNil",[])])])),Seq(Where(AM(BA(Seq(Call(SVar("ReadFromFile"),[]),Call(SVar("s"),[])),Var("in")),Var("trm"))),Where(BA(Call(SVar("WriteToBinaryFile"),[]),Op("TCons",[Var("out"),Op("TCons",[Var("trm"),Op("TNil",[])])])))))),SDef("copy-file",["s","new-base","new-suf"],Seq(AM(Id,Op("TCons",[Var("base"),Op("TCons",[Var("suf"),Op("TNil",[])])])),Seq(Call(SVar("TCons"),[Call(SVar("new-base"),[]),Call(SVar("TCons"),[Call(SVar("new-suf"),[]),Call(SVar("TNil"),[])])]),Seq(AM(Id,Op("TCons",[Var("nbase"),Op("TCons",[Var("nsuf"),Op("TNil",[])])])),Where(BA(Call(SVar("apply-to-file"),[Call(SVar("s"),[])]),Op("TCons",[App(Call(SVar("conc-strings"),[]),Op("TCons",[Var("base"),Op("TCons",[Var("suf"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("conc-strings"),[]),Op("TCons",[Var("nbase"),Op("TCons",[Var("nsuf"),Op("TNil",[])])])),Op("TNil",[])])]))))))),SDef("dtime",[],Prim("_ST_dtime")),SDef("is-int",[],Prim("_ST_is_int")),SDef("minus",[],Prim("_ST_minus")),SDef("plus",[],Prim("_ST_plus")),SDef("add",[],Prim("_ST_add")),SDef("subt",[],Prim("_ST_subt")),SDef("mul",[],Prim("_ST_mul")),SDef("div",[],Prim("_ST_div")),SDef("mod",[],Prim("_ST_mod")),SDef("geq",[],Prim("_ST_geq")),SDef("gt",[],Prim("_ST_gt")),SDef("lt",[],Not(Call(SVar("geq"),[]))),SDef("leq",[],Not(Call(SVar("gt"),[]))),SDef("max",[],Prim("_ST_max")),SDef("min",[],Prim("_ST_min")),SDef("int",[],Prim("_ST_int")),SDef("tindex",[],Rec("x",LChoice(Call(SVar("TInd1"),[]),Seq(Call(SVar("TInd2"),[]),Call(SVar("x"),[]))))),SDef("tmap",["s"],Rec("x",Choice(Call(SVar("TNil"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("tconcat",["s"],Rec("y",Choice(SRule(Rule(Op("TNil",[]),Op("Nil",[]),Id)),Seq(Scope(["x","xs"],SRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id))),Call(SVar("s"),[]))))),SDef("tconcat'",["s1","s2"],Rec("y",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Scope(["x","xs"],SRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id))),Call(SVar("s2"),[]))))),SDef("at_tsuffix",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("x"),[])])))),SDef("tcata",["s1","s2"],Rec("y",LChoice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Scope(["x","xs"],SRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id))),Call(SVar("s2"),[]))))),SDef("repeat",["s","c"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Call(SVar("c"),[])))),SDef("repeat",["s"],Call(SVar("repeat"),[Call(SVar("s"),[]),Id])),SDef("repeat1",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("x"),[]),Call(SVar("c"),[]))))),SDef("repeat1",["s"],Call(SVar("repeat1"),[Call(SVar("s"),[]),Id])),SDef("repeat-until",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("c"),[]),Call(SVar("x"),[]))))),SDef("while",["c","s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[])))]))),SDef("do-while",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("x"),[]))])))),SDef("while-not",["c","s"],Rec("x",LChoice(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[]))))),SDef("for",["i","c","s"],Seq(Call(SVar("i"),[]),Call(SVar("repeat-until"),[Call(SVar("s"),[]),Call(SVar("c"),[])]))),SDef("new",[],Prim("_ST_new")),SDef("is-string",[],Prim("_ST_is_string")),SDef("implode-string",[],Prim("_ST_implode_string")),SDef("explode-string",[],Prim("_ST_explode_string")),SDef("conc-strings",[],Seq(Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("conc"),[]),Call(SVar("implode-string"),[])))),SDef("concat-strings",[],Seq(Call(SVar("map"),[Call(SVar("explode-string"),[])]),Seq(Call(SVar("concat"),[]),Call(SVar("implode-string"),[])))),SDef("int-to-string",[],Seq(Rec("x",Seq(Call(SVar("split"),[Seq(Call(SVar("sect"),[Call(SVar("mod"),[]),Build(Int(10))]),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(48))])),Seq(Call(SVar("sect"),[Call(SVar("div"),[]),Build(Int(10))]),Call(SVar("int"),[]))]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[LChoice(Seq(AM(Id,Int(0)),Build(Op("Nil",[]))),Call(SVar("x"),[])),Call(SVar("TNil"),[])])]),Call(SVar("MkCons"),[])))),Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])))),SDef("string-to-int",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Call(SVar("S2I1"),[]))))),SDef("escape",[],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",LChoice(Seq(Call(SVar("Escape"),[]),Call(SVar("Cons"),[Id,Call(SVar("Cons"),[Id,Call(SVar("x"),[])])])),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("unescape",[],Seq(Call(SVar("explode-string"),[]),Seq(Rec("x",Seq(Call(SVar("try"),[Call(SVar("UnEscape"),[])]),LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Nil"),[])))),Call(SVar("implode-string"),[])))),SDef("string-length",[],Seq(Call(SVar("explode-string"),[]),Call(SVar("length"),[]))),SDef("string-to-num",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Choice(Call(SVar("S2I1"),[]),Seq(Call(SVar("S2D0"),[]),Seq(Call(SVar("repeat"),[Call(SVar("S2D2"),[])]),Call(SVar("S2D1"),[])))))))),SDef("lower-case",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("map"),[Call(SVar("lc"),[])]),Call(SVar("implode-string"),[])))),SDef("lc",[],Call(SVar("try"),[Seq(Where(Call(SVar("sect"),[Call(SVar("geq"),[]),Build(Int(65))])),Seq(Where(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(90))])),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(32))])))])),SDef("split-at-space",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("SplitInit"),[]),Rec("x",LChoice(Call(SVar("SplitExit"),[]),Seq(Call(SVar("SplitNext"),[]),Call(SVar("x"),[]))))))),SDef("basename",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(AM(Id,Op("Cons",[Int(46),Wld])),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[])))),SDef("basename",["ext"],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Cons"),[Match(Int(46)),Call(SVar("ext"),[])]),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[])))),SDef("guarantee-extension",["ext"],Seq(Call(SVar("basename"),[]),Seq(Call(SVar("split"),[Id,BA(Call(SVar("ext"),[]),Op("TNil",[]))]),Call(SVar("add-extension"),[])))),SDef("filter",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("filter-gen",["pred","cont"],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("pred"),[]),Call(SVar("cont"),[Call(SVar("x"),[])])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("skip1",["s"],Call(SVar("at_tail"),[Call(SVar("s"),[])])),SDef("skip2",["s"],Call(SVar("at_tail"),[Call(SVar("at_tail"),[Call(SVar("s"),[])])])),SDef("filter-option-args",["flag"],Call(SVar("filter-gen"),[Seq(Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("Tl"),[])),Call(SVar("skip1"),[])])),SDef("filter-options",["flag"],Call(SVar("filter-gen"),[Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("skip2"),[])])),SDef("member",[],Call(SVar("TCons"),[AM(Id,Var("x")),Call(SVar("TCons"),[Call(SVar("fetch"),[AM(Id,Var("x"))]),Call(SVar("TNil"),[])])])),SDef("foldr1",["s1","s2"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr1",["s"],Rec("x",Seq(LChoice(Call(SVar("FoldR1"),[]),Seq(Call(SVar("FoldR"),[]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("s"),[])))),SDef("foldr",["s1","s2"],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr",["s1","s2","f"],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Scope(["y","ys"],SRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Op("TCons",[App(Call(SVar("f"),[]),Var("y")),Op("TCons",[App(Call(SVar("x"),[]),Var("ys")),Op("TNil",[])])]),Id))),Call(SVar("s2"),[]))))),SDef("tfoldr",["s1","s2"],Rec("x",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("TFoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldl",["s"],Call(SVar("repeat"),[Call(SVar("FoldL"),[Call(SVar("s"),[])])])),SDef("mapfoldr",["s1","s2","s3"],Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(Scope(["a","b"],SRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id))),Call(SVar("s3"),[])))))),SDef("mapfoldr1",["s1","s2","s3"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(Scope(["a","b"],SRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id))),Call(SVar("s3"),[])))))),SDef("last",[],Rec("x",LChoice(Call(SVar("Last"),[]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("init",[],Call(SVar("at-last"),[Call(SVar("Tl"),[])])),SDef("copy",[],Call(SVar("for"),[Scope(["n","t"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id))),Scope(["t","ts"],SRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id))),Scope(["n","t","ts"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[Var("t"),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))))))])),SDef("copy",["s"],Call(SVar("for"),[Scope(["n","t"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id))),Scope(["t","ts"],SRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id))),Scope(["n","t","ts"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[App(Call(SVar("s"),[]),Var("t")),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))))))])),SDef("lookup",[],Rec("x",LChoice(Call(SVar("Look1"),[]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[]))))),SDef("getfirst",["s"],Rec("x",LChoice(Seq(Call(SVar("Hd"),[]),Call(SVar("s"),[])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("lookup'",[],Scope(["x","xs"],Seq(AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),BA(Call(SVar("getfirst"),[Scope(["y"],SRule(Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("y"),Id)))]),Var("xs"))))),SDef("lookup",["keyeq"],Rec("x",LChoice(Call(SVar("Look1'"),[Call(SVar("keyeq"),[])]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[]))))),SDef("unions",[],Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])])),SDef("diff",["eq"],Call(SVar("diff'"),[Call(SVar("eq"),[])])),SDef("collect-kids",["s"],Call(SVar("foldr-kids"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("s"),[])])),SDef("collect",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Scope(["y"],SRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id)))),Call(SVar("collect-kids"),[Call(SVar("x"),[])])))),SDef("collect",["s","skip"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Scope(["y"],SRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id)))),LChoice(Seq(Call(SVar("skip"),[Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("bu-collect",["s"],LChoice(Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("collect-kids"),[LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))])),Seq(Call(SVar("s"),[]),Scope(["y"],SRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id)))))),Build(Op("Nil",[])))),SDef("collect-split",["f","g"],Rec("x",LChoice(Seq(Choice(Call(SVar("is-string"),[]),Call(SVar("is-int"),[])),Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))])),Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Call(SVar("f"),[]),Call(SVar("g"),[])])))),SDef("nrofoccs",["s"],Rec("count",LChoice(Seq(Call(SVar("s"),[]),Build(Int(1))),Call(SVar("foldr-kids"),[Match(Int(0)),Call(SVar("add"),[]),Call(SVar("count"),[])])))),SDef("twicetd",["s"],Call(SVar("oncetd"),[Seq(Call(SVar("explode-term"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("at_suffix"),[Call(SVar("Cons"),[Call(SVar("oncetd"),[Call(SVar("s"),[])]),Call(SVar("oncetd"),[Call(SVar("s"),[])])])]),Call(SVar("TNil"),[])])]),Call(SVar("mkterm"),[])))])),SDef("atmostonce",["s"],Not(Call(SVar("twicetd"),[Call(SVar("s"),[])]))),SDef("atmostonce'",["s"],Scope(["n"],Seq(AM(Call(SVar("nrofoccs"),[Call(SVar("s"),[])]),Var("n")),BA(Call(SVar("leq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))))),SDef("sort-list",["s"],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("isort-list",["s"],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("s"),[])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("jsort-list",["s"],Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("s"),[]),Call(SVar("try"),[Call(SVar("x"),[])]))))])),SDef("uniq",[],Call(SVar("listbu"),[Call(SVar("repeat"),[Call(SVar("Uniq"),[])])])),SDef("genzip",["a","b","c","s"],Rec("x",Choice(Call(SVar("a"),[]),Seq(Call(SVar("b"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("c"),[])))))),SDef("zip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zip'",["s"],Call(SVar("genzip"),[LChoice(Call(SVar("Zip1a'"),[]),Call(SVar("Zip1b'"),[])),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipl",["s"],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipr",["s"],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rest-zip",["s"],Seq(Call(SVar("genzip"),[Seq(Choice(AM(Id,Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])])),AM(Id,Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]))),Seq(AM(Id,Op("TCons",[Var("tla"),Op("TCons",[Var("tlb"),Op("TNil",[])])])),Build(Op("Nil",[])))),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])]),Scope(["pairs"],SRule(Rule(Var("pairs"),Op("TCons",[Var("tla"),Op("TCons",[Var("tlb"),Op("TCons",[Var("pairs"),Op("TNil",[])])])]),Id))))),SDef("unzip",[],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Id])),SDef("unzip",["s"],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Call(SVar("s"),[])])),SDef("nzip0",["s"],Seq(Call(SVar("NZip00"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("nzip",["s"],Seq(Call(SVar("NZip01"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("tzip",["s"],Call(SVar("genzip"),[Call(SVar("TZip1"),[]),Call(SVar("TZip2"),[]),Call(SVar("TZip3"),[]),Call(SVar("s"),[])])),SDef("lzip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("LZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rzip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("RZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipFetch",["s"],Rec("x",Seq(Call(SVar("Zip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("lzipFetch",["s"],Rec("x",Seq(Call(SVar("LZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("rzipFetch",["s"],Rec("x",Seq(Call(SVar("RZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("zipPad",["s","padding"],Rec("x",Choice(Call(SVar("Zip1"),[]),Choice(Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Choice(Seq(Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))),Seq(Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TNil"),[])])]),Call(SVar("x"),[])))))))),SDef("zip-tail",[],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))))),SDef("zipl-tail-match",["s"],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zipr-tail-match",["s"],Rec("x",Choice(Call(SVar("Zip1c'"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zip-skip",["pred","s"],Rec("x",Choice(Call(SVar("Zip1"),[]),Seq(LChoice(Seq(Call(SVar("Skip"),[Call(SVar("pred"),[])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])])),Seq(Call(SVar("Zip2"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("Zip3"),[]))))),SDef("tuple-zip",["s"],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("tmap"),[Call(SVar("Hd"),[])]),Call(SVar("tmap"),[Call(SVar("Tl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Seq(Call(SVar("tmap"),[Call(SVar("Nil"),[])]),Build(Op("Nil",[])))))),SDef("tuple-unzip",["s"],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("map"),[Call(SVar("Thd"),[])]),Call(SVar("map"),[Call(SVar("Ttl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Scope(["a","b"],SRule(Rule(Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Op("TCons",[Var("a"),Var("b")]),Id))))),Seq(Call(SVar("map"),[Call(SVar("TNil"),[])]),Build(Op("TNil",[])))))),SDef("index",[],Seq(Call(SVar("repeat"),[Call(SVar("Ind2"),[])]),Call(SVar("Ind1"),[]))),SDef("get_index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("get-index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("is-list",[],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Id]))),SDef("map",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list-some",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("list"),[Call(SVar("try"),[Call(SVar("s"),[])])])])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("list-some-filter",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("filter"),[Call(SVar("s"),[])])])),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Tl"),[]))))),SDef("length",[],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Build(Int(0))),Seq(Call(SVar("Tl"),[]),Seq(Call(SVar("x"),[]),Scope(["n"],SRule(Rule(Var("n"),App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Id)))))))),SDef("fetch",["s"],Rec("x",LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("split-fetch",["s"],Seq(Call(SVar("at_suffix"),[Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Seq(Call(SVar("Cons"),[Id,AM(Id,Var("tl"))]),Build(Op("Nil",[]))))]),Call(SVar("split"),[Id,Build(Var("tl"))]))),SDef("at_tail",["s"],Call(SVar("Cons"),[Id,Call(SVar("s"),[])])),SDef("at_end",["s"],Rec("x",Choice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Nil"),[]),Call(SVar("s"),[]))))),SDef("at_suffix",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("at_last",["s"],Seq(Call(SVar("obsolete"),[Build(Str("at_last -> at-last"))]),Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("at-last",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("listbu",["s"],Rec("x",Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[])))),SDef("listtd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("listdu",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[]))))),SDef("listdu2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s2"),[]))))),SDef("reverse",[],Seq(Call(SVar("RevInit"),[]),Seq(Call(SVar("repeat"),[Call(SVar("Rev"),[])]),Call(SVar("RevExit"),[])))),SDef("upto",[],Seq(Call(SVar("UptoInit"),[]),Rec("x",LChoice(Call(SVar("UptoExit"),[]),Seq(Call(SVar("UptoStep"),[]),Call(SVar("x"),[])))))),SDef("concat",[],Rec("x",Choice(Call(SVar("Nil"),[]),Scope(["l","ls"],SRule(Rule(Op("Cons",[Var("l"),Var("ls")]),App(Call(SVar("at_end"),[BA(Call(SVar("x"),[]),Var("ls"))]),Var("l")),Id)))))),SDef("separate-by",["s"],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Rec("x",Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Sep"),[Call(SVar("s"),[])]))))]))),SDef("try",["s"],LChoice(Call(SVar("s"),[]),Id)),SDef("if",["c","b"],Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("b"),[]))])),SDef("if",["c","b1","b2"],LChoice(Seq(Call(SVar("c"),[]),Call(SVar("b1"),[])),Call(SVar("b2"),[]))),SDef("ior",["a","b"],LChoice(Seq(Call(SVar("a"),[]),Call(SVar("try"),[Call(SVar("b"),[])])),Call(SVar("b"),[]))),SDef("eq",[],Scope(["x"],AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))),SDef("FAIL",[],Scope(["x"],Seq(AM(Id,Var("x")),AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]))))),SDef("topdown",["s"],Rec("x",Seq(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("bottomup",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("downup",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[]))))),SDef("downup",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("downup2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("topdown",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("bottomup",["s","stop"],Rec("x",Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[])))),SDef("downup",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[]))))),SDef("downup2",["s1","s2","stop"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[]))))),SDef("don't-stop",["s"],Fail),SDef("spinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[One(Call(SVar("x"),[]))])))),SDef("spinebu",["s"],Rec("x",Seq(Call(SVar("try"),[One(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("somespinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Some(Call(SVar("x"),[]))])))),SDef("somespinebu",["s"],Rec("x",Seq(Call(SVar("try"),[Some(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("oncetd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),One(Call(SVar("x"),[]))))),SDef("oncebu",["s"],Rec("x",LChoice(One(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("oncetd-stop",["s","stop"],Rec("x",LChoice(Call(SVar("s"),[]),Seq(Not(Call(SVar("stop"),[])),One(Call(SVar("x"),[])))))),SDef("sometd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Some(Call(SVar("x"),[]))))),SDef("somebu",["s"],Rec("x",LChoice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("alldownup2",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("downup2'-obsolete",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("leaves",["s","is-leaf","skip"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("leaves",["s","is-leaf"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("is-leaf",[],Not(One(Id))),SDef("manybu",["s"],Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])])),Call(SVar("s"),[])))),SDef("manytd",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),All(Call(SVar("try"),[Call(SVar("x"),[])]))),Some(Call(SVar("x"),[]))))),SDef("somedownup",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))),Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))))),SDef("breadthfirst",["s"],Rec("x",Seq(All(Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("print",[],Prim("_ST_print")),SDef("printnl",[],Prim("_ST_printnl")),SDef("printascii",[],Prim("_ST_printascii")),SDef("file-exists",[],Prim("_ST_file_exists")),SDef("open-file",[],Prim("_ST_open_file")),SDef("append-file",[],Prim("_ST_append_file")),SDef("close-file",[],Prim("_ST_close_file")),SDef("ReadFromFile",[],Prim("_ST_ReadFromFile")),SDef("WriteToBinaryFile",[],Prim("_ST_WriteToBinaryFile")),SDef("WriteToTextFile",[],Prim("_ST_WriteToTextFile")),SDef("print-stack",[],Prim("_ST_PrintStack")),SDef("open",["file"],Seq(Call(SVar("file"),[]),Call(SVar("ReadFromFile"),[]))),SDef("save",["file"],Seq(Call(SVar("split"),[Call(SVar("file"),[]),Id]),Call(SVar("WriteToTextFile"),[]))),SDef("debug",[],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)))]),Call(SVar("printnl"),[])))),SDef("debug",["msg"],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id)))]),Call(SVar("printnl"),[])))),SDef("say",["msg"],Where(Seq(Call(SVar("msg"),[]),Call(SVar("debug"),[])))),SDef("debug-stdout",["msg"],Where(Seq(Call(SVar("split"),[Build(Op("stdout",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id)))]),Call(SVar("printnl"),[])))),SDef("trace",["msg","s"],Seq(Call(SVar("debug"),[Call(SVar("msg"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("succeeded: "))])),Call(SVar("debug"),[Build(Str("failed: "))])))),SDef("error",[],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Id]),Call(SVar("printnl"),[])))),SDef("fatal-error",[],Where(Seq(Call(SVar("error"),[]),BA(Call(SVar("exit"),[]),Int(1))))),SDef("printchar",[],Where(Seq(Call(SVar("split"),[Build(Op("stdout",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)))]),Call(SVar("printascii"),[])))),SDef("printstring",[],Where(Seq(Call(SVar("split"),[Build(Op("stdout",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)))]),Call(SVar("print"),[])))),SDef("print-strings-nl",["out"],Where(Seq(Call(SVar("split"),[Call(SVar("out"),[]),Id]),Call(SVar("printnl"),[])))),SDef("obsolete",["msg"],Where(BA(Call(SVar("debug"),[Call(SVar("msg"),[])]),Str(": obsolete library strategy")))),SDef("stdio",["s"],LChoice(Seq(BA(Call(SVar("ReadFromFile"),[]),Op("stdin",[])),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Op("stdout",[])),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])])))),SDef("stdioO",["s"],LChoice(Seq(Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Op("stdin",[]))]),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Op("stdout",[])),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])])))),SDef("init-record",[],Build(Op("TCons",[Int(0),Op("TCons",[Int(0),Op("TNil",[])])]))),SDef("record-success",[],Call(SVar("TCons"),[Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("add"),[]),Op("TCons",[Var("x"),Op("TCons",[Int(1),Op("TNil",[])])])),Id))),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])])),SDef("record-failure",[],Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("add"),[]),Op("TCons",[Var("x"),Op("TCons",[Int(1),Op("TNil",[])])])),Id))),Call(SVar("TNil"),[])])])),SDef("check-for-failures",[],LChoice(Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Match(Int(0)),Call(SVar("TNil"),[])])]),BA(Call(SVar("exit"),[]),Int(0))),BA(Call(SVar("exit"),[]),Int(1)))),SDef("report-test",[],Call(SVar("TCons"),[Call(SVar("debug"),[Build(Str("successes: "))]),Call(SVar("TCons"),[Call(SVar("debug"),[Build(Str("failures: "))]),Call(SVar("TNil"),[])])])),SDef("test-suite",["name","tests"],Seq(Call(SVar("name"),[]),Seq(Call(SVar("debug"),[Build(Str("test suite: "))]),Seq(Call(SVar("init-record"),[]),Seq(Call(SVar("tests"),[]),Seq(Call(SVar("report-test"),[]),Call(SVar("check-for-failures"),[]))))))),SDef("do-test",["nr","s"],Seq(Where(Seq(Call(SVar("nr"),[]),Call(SVar("debug"),[]))),LChoice(Seq(Where(Call(SVar("s"),[])),Call(SVar("record-success"),[])),Call(SVar("record-failure"),[])))),SDef("testing",["nr","s"],Call(SVar("do-test"),[Call(SVar("nr"),[]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("  succeeded: "))])),Seq(Call(SVar("debug"),[Build(Str("  failed: "))]),Call(SVar("FAIL"),[])))])),SDef("apply-test",["name","s","in","out"],Call(SVar("do-test"),[Call(SVar("name"),[]),Seq(LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  failed")),Call(SVar("FAIL"),[]))),Seq(AM(Call(SVar("out"),[]),Var("tmp'")),LChoice(AM(Build(Var("tmp'")),Var("tmp")),Seq(Seq(BA(Call(SVar("debug"),[Build(Str("  result not equal: "))]),Var("tmp")),BA(Call(SVar("debug"),[Build(Str("  expected: "))]),Var("tmp'"))),Call(SVar("FAIL"),[])))))])),SDef("apply-test",["name","s","in"],Call(SVar("do-test"),[Call(SVar("name"),[]),LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  failed")),Call(SVar("FAIL"),[])))])),SDef("apply-and-check",["name","s","in","check"],Call(SVar("do-test"),[Call(SVar("name"),[]),Seq(LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  application failed")),Call(SVar("FAIL"),[]))),LChoice(BA(Call(SVar("check"),[]),Var("tmp")),Seq(BA(Call(SVar("debug"),[Build(Str("  check failed: "))]),Var("tmp")),Call(SVar("FAIL"),[]))))])),SDef("apply-and-fail",["name","s","in","out"],Call(SVar("do-test"),[Call(SVar("name"),[]),LChoice(Seq(Seq(Call(SVar("in"),[]),Not(Call(SVar("s"),[]))),BA(Call(SVar("debug"),[]),Str("  failed"))),Seq(BA(Call(SVar("debug"),[]),Str("  succeeded")),Call(SVar("FAIL"),[])))])),SDef("apply-and-show",["name","s","in"],Call(SVar("do-test"),[Call(SVar("name"),[]),Seq(LChoice(Seq(Call(SVar("in"),[]),AM(Call(SVar("s"),[]),Var("tmp"))),Seq(BA(Call(SVar("debug"),[]),Str("  failed")),Call(SVar("FAIL"),[]))),BA(Call(SVar("debug"),[]),Op("Cons",[Str("  succeeded; result: "),Op("Cons",[Var("tmp"),Op("Nil",[])])])))])),SDef("main",[],Call(SVar("test-suite"),[Build(Str("compiler-test")),Call(SVar("test1"),[])])),SDef("test1",[],Call(SVar("apply-test"),[Build(Str("test1")),Call(SVar("topdown"),[Call(SVar("repeat"),[Call(SVar("C"),[])])]),Call(SVar("open"),[Build(Str("data/choices1-dfa.trm"))]),Call(SVar("open"),[Build(Str("data/choices1-ins.trm"))])]))])])
