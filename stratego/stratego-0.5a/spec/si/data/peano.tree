Specification([Strategies([SDef("try",["s"],LChoice(Call(SVar("s"),[]),Id)),SDef("if",["c","b"],Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("b"),[]))])),SDef("if",["c","b1","b2"],LChoice(Seq(Call(SVar("c"),[]),Call(SVar("b1"),[])),Call(SVar("b2"),[]))),SDef("ior",["a","b"],LChoice(Seq(Call(SVar("a"),[]),Call(SVar("try"),[Call(SVar("b"),[])])),Call(SVar("b"),[]))),SDef("eq",[],Scope(["x"],Match(Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))),SDef("FAIL",[],Scope(["x"],Seq(Match(Var("x")),Match(Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))))]),Strategies([SDef("topdown",["s"],Rec("x",Seq(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("bottomup",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("downup",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[]))))),SDef("downup",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("downup2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("topdownS",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("bottomupS",["s","stop"],Rec("x",Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[])))),SDef("downupS",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[]))))),SDef("downupS",["s1","s2","stop"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[]))))),SDef("don't-stop",["s"],Fail),SDef("spinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[One(Call(SVar("x"),[]))])))),SDef("spinebu",["s"],Rec("x",Seq(Call(SVar("try"),[One(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("somespinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Some(Call(SVar("x"),[]))])))),SDef("somespinebu",["s"],Rec("x",Seq(Call(SVar("try"),[Some(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("oncetd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),One(Call(SVar("x"),[]))))),SDef("oncebu",["s"],Rec("x",LChoice(One(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("oncetd-stop",["s","stop"],Rec("x",LChoice(Call(SVar("s"),[]),Seq(Not(Call(SVar("stop"),[])),One(Call(SVar("x"),[])))))),SDef("sometd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Some(Call(SVar("x"),[]))))),SDef("somebu",["s"],Rec("x",LChoice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("alldownup2",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("downup2'-obsolete",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("alltd-fold",["s1","s2"],Rec("x",LChoice(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("leaves",["s","is-leaf","skip"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("leaves",["s","is-leaf"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("is-leaf",[],Not(One(Id))),SDef("manybu",["s"],Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])])),Call(SVar("s"),[])))),SDef("manytd",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),All(Call(SVar("try"),[Call(SVar("x"),[])]))),Some(Call(SVar("x"),[]))))),SDef("somedownup",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))),Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))))),SDef("breadthfirst",["s"],Rec("x",Seq(All(Call(SVar("s"),[])),All(Call(SVar("x"),[])))))]),Strategies([SDef("repeat",["s","c"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Call(SVar("c"),[])))),SDef("repeat",["s"],Call(SVar("repeat"),[Call(SVar("s"),[]),Id])),SDef("repeat1",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("x"),[]),Call(SVar("c"),[]))))),SDef("repeat1",["s"],Call(SVar("repeat1"),[Call(SVar("s"),[]),Id])),SDef("repeat-until",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("c"),[]),Call(SVar("x"),[]))))),SDef("while",["c","s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[])))]))),SDef("do-while",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("x"),[]))])))),SDef("while-not",["c","s"],Rec("x",LChoice(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[]))))),SDef("for",["i","c","s"],Seq(Call(SVar("i"),[]),Call(SVar("repeat-until"),[Call(SVar("s"),[]),Call(SVar("c"),[])])))]),Strategies([SDef("reduce",["s"],Call(SVar("repeat"),[Rec("x",Choice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))])),SDef("outermost",["s"],Call(SVar("repeat"),[Call(SVar("oncetd"),[Call(SVar("s"),[])])])),SDef("innermost'",["s"],Call(SVar("repeat"),[Call(SVar("oncebu"),[Call(SVar("s"),[])])])),SDef("innermost",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Id)))),SDef("pseudo-innermost3",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Rec("y",Call(SVar("try"),[Seq(Call(SVar("s"),[]),Seq(All(Seq(All(Seq(All(Call(SVar("y"),[])),Call(SVar("y"),[]))),Call(SVar("y"),[]))),Call(SVar("y"),[])))])))))]),Signature([Sorts([Sort("Nat",Nokind)]),Operations([OpDecl("Zero",ConstType(Var("Nat"))),OpDecl("Succ",FunType([Var("Nat")],Var("Nat"))),OpDecl("Plus",FunType([Var("Nat"),Var("Nat")],Var("Nat"))),OpDecl("Mul",FunType([Var("Nat"),Var("Nat")],Var("Nat"))),OpDecl("Mod",FunType([Var("Nat"),Var("Nat")],Var("Nat")))])]),Rules([RDef("P1",[],Rule(Op("Plus",[Var("Zero"),Var("x")]),Var("x"),Id)),RDef("P2",[],Rule(Op("Plus",[Op("Succ",[Var("x")]),Var("y")]),Op("Succ",[Op("Plus",[Var("x"),Var("y")])]),Id)),RDef("P3",[],Rule(Op("Mul",[Var("Zero"),Var("x")]),Var("Zero"),Id)),RDef("P4",[],Rule(Op("Mul",[Op("Succ",[Var("x")]),Var("y")]),Op("Plus",[Var("y"),Op("Mul",[Var("x"),Var("y")])]),Id)),RDef("P5",[],Rule(Op("Sub",[Var("x"),Var("Zero")]),Var("x"),Id)),RDef("P6",[],Rule(Op("Sub",[Op("Succ",[Var("x")]),Op("Succ",[Var("y")])]),Op("Sub",[Var("x"),Var("y")]),Id))]),Strategies([SDef("eval-peano",[],Call(SVar("innermost"),[Choice(Call(SVar("P1"),[]),Choice(Call(SVar("P2"),[]),Choice(Call(SVar("P3"),[]),Choice(Call(SVar("P4"),[]),Choice(Call(SVar("P5"),[]),Call(SVar("P6"),[]))))))]))])])
