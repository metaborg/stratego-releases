[SDef("implode-string",[],Scope([],Prim("_ST_implode_string"))),SDef("Cons",["h_9","i_9"],Cong("Cons",[Call(SVar("h_9"),[]),Call(SVar("i_9"),[])])),SDef("try",["j_19"],Scope([],LChoice(Call(SVar("j_19"),[]),Id))),SDef("explode-string",[],Scope([],Prim("_ST_explode_string"))),SDef("basename",[],Scope([],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("y_20",LChoice(Call(SVar("Cons"),[Id,Call(SVar("y_20"),[])]),Seq(Seq(Id,Match(Op("Cons",[Int(46),Wld]))),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[]))))),SDef("FAIL",[],Scope([],Scope(["b_9"],Seq(Seq(Id,Match(Var("b_9"))),Seq(Id,Match(Op("TCons",[Var("b_9"),Op("TCons",[Var("b_9"),Op("TNil",[])])]))))))),SDef("debug",[],Scope([],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["r_8"],Seq(Match(Var("r_8")),Seq(Where(Id),Seq(Build(Op("Cons",[Var("r_8"),Op("Nil",[])])),Id))))]),Call(SVar("printnl"),[]))))),SDef("record-failure",[],Scope([],Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Scope(["w_8"],Seq(Match(Var("w_8")),Seq(Where(Id),Seq(Seq(Build(Op("TCons",[Var("w_8"),Op("TCons",[Int(1),Op("TNil",[])])])),Call(SVar("add"),[])),Id)))),Call(SVar("TNil"),[])])]))),SDef("add",[],Scope([],Prim("_ST_add"))),SDef("record-success",[],Scope([],Call(SVar("TCons"),[Scope(["v_8"],Seq(Match(Var("v_8")),Seq(Where(Id),Seq(Seq(Build(Op("TCons",[Var("v_8"),Op("TCons",[Int(1),Op("TNil",[])])])),Call(SVar("add"),[])),Id)))),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]))),SDef("do-test",["b_18","c_18"],Scope([],Seq(Where(Seq(Call(SVar("b_18"),[]),Call(SVar("debug"),[]))),LChoice(Seq(Where(Call(SVar("c_18"),[])),Call(SVar("record-success"),[])),Call(SVar("record-failure"),[]))))),SDef("apply-test",["f_18","g_18","h_18","i_18"],Scope(["x_8","y_8"],Call(SVar("do-test"),[Call(SVar("f_18"),[]),Seq(LChoice(Seq(Call(SVar("h_18"),[]),Seq(Call(SVar("g_18"),[]),Match(Var("x_8")))),Seq(Seq(Build(Str("  failed")),Call(SVar("debug"),[])),Call(SVar("FAIL"),[]))),Seq(Seq(Call(SVar("i_18"),[]),Match(Var("y_8"))),LChoice(Seq(Build(Var("y_8")),Match(Var("x_8"))),Seq(Seq(Seq(Build(Var("x_8")),Call(SVar("debug"),[Build(Str("  result not equal: "))])),Seq(Build(Var("y_8")),Call(SVar("debug"),[Build(Str("  expected: "))]))),Call(SVar("FAIL"),[])))))]))),SDef("basename-test",[],Scope([],Call(SVar("apply-test"),[Build(Str("basename-test")),Call(SVar("basename"),[]),Build(Str("./number.r")),Build(Str("./number"))]))),SDef("exit",[],Scope([],Prim("_ST_exit"))),SDef("check-for-failures",[],Scope([],LChoice(Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Match(Int(0)),Call(SVar("TNil"),[])])]),Seq(Build(Int(0)),Call(SVar("exit"),[]))),Seq(Build(Int(1)),Call(SVar("exit"),[]))))),SDef("TNil",[],Cong("TNil",[])),SDef("TCons",["d_9","e_9"],Cong("TCons",[Call(SVar("d_9"),[]),Call(SVar("e_9"),[])])),SDef("report-test",[],Scope([],Call(SVar("TCons"),[Call(SVar("debug"),[Build(Str("successes: "))]),Call(SVar("TCons"),[Call(SVar("debug"),[Build(Str("failures: "))]),Call(SVar("TNil"),[])])]))),SDef("init-record",[],Scope([],Build(Op("TCons",[Int(0),Op("TCons",[Int(0),Op("TNil",[])])])))),SDef("printnl",[],Scope([],Prim("_ST_printnl"))),SDef("split",["j_9","k_9"],Scope(["v_0"],Seq(Match(Var("v_0")),Seq(Where(Id),Seq(Scope(["d_23"],Seq(Seq(Build(Var("v_0")),Seq(Call(SVar("j_9"),[]),Seq(Match(Var("d_23")),Id))),Scope(["h_23"],Seq(Seq(Build(Var("v_0")),Seq(Call(SVar("k_9"),[]),Seq(Match(Var("h_23")),Id))),Build(Op("TCons",[Var("d_23"),Op("TCons",[Var("h_23"),Op("TNil",[])])])))))),Id))))),SDef("debug",["v_17"],Scope([],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["s_8"],Seq(Match(Var("s_8")),Seq(Where(Id),Seq(Scope(["r_23"],Seq(Seq(Build(Op("TNil",[])),Seq(Call(SVar("v_17"),[]),Seq(Match(Var("r_23")),Id))),Build(Op("Cons",[Var("r_23"),Op("Cons",[Var("s_8"),Op("Nil",[])])])))),Id))))]),Call(SVar("printnl"),[]))))),SDef("test-suite",["z_17","a_18"],Scope([],Seq(Call(SVar("z_17"),[]),Seq(Call(SVar("debug"),[Build(Str("test suite: "))]),Seq(Call(SVar("init-record"),[]),Seq(Call(SVar("a_18"),[]),Seq(Call(SVar("report-test"),[]),Call(SVar("check-for-failures"),[])))))))),SDef("main",[],Scope([],Call(SVar("test-suite"),[Build(Str("string-test")),Call(SVar("basename-test"),[])])))]
