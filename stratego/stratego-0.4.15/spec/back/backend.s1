Specification([Signature([Operations([OpDecl("stdin",ConstType(Var("File"))),OpDecl("stdout",ConstType(Var("File"))),OpDecl("stderr",ConstType(Var("File"))),OpDecl("Program",FunType([Var("String")],Var("Option"))),OpDecl("Undefined",FunType([Var("String")],Var("Option"))),OpDecl("Silent",ConstType(Var("Option"))),OpDecl("Verbose",ConstType(Var("Option"))),OpDecl("Version",ConstType(Var("Option"))),OpDecl("Input",FunType([Var("String")],Var("Option"))),OpDecl("Output",FunType([Var("String")],Var("Option"))),OpDecl("Binary",ConstType(Var("Option"))),OpDecl("Statistics",ConstType(Var("Option"))),OpDecl("Help",ConstType(Var("Option"))),OpDecl("Runtime",FunType([Var("Real")],Var("Option"))),OpDecl("DeclVersion",FunType([Var("String")],Var("Option"))),OpDecl("None",ConstType(Op("Option",[Var("a")]))),OpDecl("Some",FunType([Var("a")],Op("Option",[Var("a")]))),OpDecl("NF",ConstType(Var("Mark"))),OpDecl("Down",FunType([Var("Int"),Var("Aut")],Var("Aut"))),OpDecl("Up",FunType([Var("Aut")],Var("Aut"))),OpDecl("Accept",FunType([Op("List",[Var("Int")])],Var("Aut"))),OpDecl("Case",FunType([Op("List",[Var("Aut")]),Var("Aut")],Var("Aut"))),OpDecl("MatchVars",FunType([Op("List",[Var("String")]),Var("Path"),Var("Aut")],Var("Aut"))),OpDecl("MatchFunA",FunType([Var("String"),Op("List",[Var("String")]),Var("Path"),Var("Aut")],Var("Aut"))),OpDecl("MatchTerm",FunType([Var("Path"),Var("Term"),Var("Aut")],Var("Aut"))),OpDecl("TNil",ConstType(Op("Prod",[Op("Nil",[])]))),OpDecl("TCons",FunType([Var("a"),Op("Prod",[Var("lt")])],Op("Prod",[Op("Cons",[Var("a"),Var("lt")])]))),OpDecl("Pair",FunType([Var("a"),Var("b")],Op("Prod",[Op("Cons",[Var("a"),Op("Cons",[Var("b"),Op("Nil",[])])])]))),OpDecl("Wld",ConstType(Var("Term"))),OpDecl("Var",FunType([Var("String")],Var("Term"))),OpDecl("Int",FunType([Var("Int")],Var("Term"))),OpDecl("Real",FunType([Var("Real")],Var("Term"))),OpDecl("Str",FunType([Var("String")],Var("Term"))),OpDecl("Op",FunType([Var("String"),Op("List",[Var("Term")])],Var("Term"))),OpDecl("Id",ConstType(Var("Strat"))),OpDecl("Fail",ConstType(Var("Strat"))),OpDecl("Test",FunType([Var("Strat")],Var("Strat"))),OpDecl("Not",FunType([Var("Strat")],Var("Strat"))),OpDecl("Seq",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("Choice",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("LChoice",FunType([Var("Strat"),Var("Strat")],Var("Strat"))),OpDecl("SVar",FunType([Var("String")],Var("SVar"))),OpDecl("Rec",FunType([Var("String"),Var("Strat")],Var("Strat"))),OpDecl("Let",FunType([Var("SDef"),Var("Strat")],Var("Strat"))),OpDecl("SDef",FunType([Var("String"),Op("List",[Var("String")]),Var("Strat")],Var("SDef"))),OpDecl("Call",FunType([Var("SVar"),Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("Path",FunType([Var("Int"),Var("Strat")],Var("Strat"))),OpDecl("Cong",FunType([Var("String"),Op("List",[Var("Strat")])],Var("Strat"))),OpDecl("One",FunType([Var("Strat")],Var("Strat"))),OpDecl("Some",FunType([Var("Strat")],Var("Strat"))),OpDecl("All",FunType([Var("Strat")],Var("Strat"))),OpDecl("Kids",ConstType(Var("Strat"))),OpDecl("Thread",FunType([Var("Strat")],Var("Strat"))),OpDecl("Match",FunType([Var("Term")],Var("Strat"))),OpDecl("Build",FunType([Var("Term")],Var("Strat"))),OpDecl("MatchVar",FunType([Var("String")],Var("Strat"))),OpDecl("MatchFun",FunType([Var("String")],Var("Strat"))),OpDecl("Scope",FunType([Op("List",[Var("String")]),Var("Strat")],Var("Strat"))),OpDecl("Where",FunType([Var("Strat")],Var("Strat"))),OpDecl("Mark",FunType([Var("Term")],Var("Strat"))),OpDecl("IsMark",FunType([Var("Term")],Var("Strat"))),OpDecl("AnnBuild",FunType([Var("Term"),Var("Term")],Var("Strat"))),OpDecl("AnnMatch",FunType([Var("Term"),Var("Term")],Var("Strat"))),OpDecl("AnnRemove",FunType([Var("Term")],Var("Strat"))),OpDecl("Prim",FunType([Var("String")],Var("Strat"))),OpDecl("CountRule",FunType([Var("String")],Var("Strat"))),OpDecl("Nil",ConstType(Op("List",[Var("a")]))),OpDecl("Cons",FunType([Var("a"),Op("List",[Var("a")])],Op("List",[Var("a")]))),OpDecl("Label",FunType([Var("String")],Var("Instr"))),OpDecl("Goto",FunType([Var("String")],Var("Instr"))),OpDecl("Block",FunType([Op("List",[Var("Instr")])],Var("Instr"))),OpDecl("Iprim",FunType([Var("String")],Var("Instr"))),OpDecl("Iprim2",FunType([Var("String"),Var("String")],Var("Instr"))),OpDecl("ICountRule",FunType([Var("String")],Var("Instr"))),OpDecl("Tpush",ConstType(Var("Instr"))),OpDecl("Tpop",ConstType(Var("Instr"))),OpDecl("Tdupl",ConstType(Var("Instr"))),OpDecl("Tduplinv",ConstType(Var("Instr"))),OpDecl("Tdrop",ConstType(Var("Instr"))),OpDecl("TpushIthSon",FunType([Var("Int")],Var("Instr"))),OpDecl("TputIthSon",FunType([Var("Int")],Var("Instr"))),OpDecl("IsAppl",ConstType(Var("Instr"))),OpDecl("MatchVar",FunType([Var("Int")],Var("Instr"))),OpDecl("MatchVard",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("MatchFun",FunType([Var("String"),Var("Int")],Var("Instr"))),OpDecl("MatchFunFC",FunType([Var("String"),Var("Int"),Var("String")],Var("Instr"))),OpDecl("BuildVar",FunType([Var("Int")],Var("Instr"))),OpDecl("BuildVard",FunType([Var("Int"),Var("Int")],Var("Instr"))),OpDecl("BuildFun",FunType([Var("String"),Var("Int")],Var("Instr"))),OpDecl("GetAnn",ConstType(Var("Instr"))),OpDecl("SetAnn",ConstType(Var("Instr"))),OpDecl("RemoveAnn",ConstType(Var("Instr"))),OpDecl("Cpush",FunType([Var("String")],Var("Instr"))),OpDecl("Cpop",ConstType(Var("Instr"))),OpDecl("Crestore",ConstType(Var("Instr"))),OpDecl("Cjump",ConstType(Var("Instr"))),OpDecl("Rpush",FunType([Var("String")],Var("Instr"))),OpDecl("Return",ConstType(Var("Instr"))),OpDecl("Epush",FunType([Var("Int")],Var("Instr"))),OpDecl("Epop",FunType([Var("Int")],Var("Instr"))),OpDecl("NewCounter",ConstType(Var("Instr"))),OpDecl("CloseCounter",ConstType(Var("Instr"))),OpDecl("CounterOK",ConstType(Var("Instr"))),OpDecl("AllInit",ConstType(Var("Instr"))),OpDecl("AllNextSon",FunType([Var("String")],Var("Instr"))),OpDecl("AllBuild",ConstType(Var("Instr"))),OpDecl("OneInit",ConstType(Var("Instr"))),OpDecl("OneNextSon",ConstType(Var("Instr"))),OpDecl("OneBuild",ConstType(Var("Instr"))),OpDecl("SomeInit",ConstType(Var("Instr"))),OpDecl("SomeNextSon",FunType([Var("String")],Var("Instr"))),OpDecl("SomeBuild",ConstType(Var("Instr"))),OpDecl("TravInit",ConstType(Var("Instr"))),OpDecl("MatchTravInit",ConstType(Var("Instr"))),OpDecl("MatchTravEnd",ConstType(Var("Instr"))),OpDecl("OneMatchNextSon",ConstType(Var("Instr"))),OpDecl("ProcCall",FunType([Var("String"),Op("List",[Var("Int")])],Var("Instr"))),OpDecl("DBlock",FunType([Op("List",[Var("RegDecl")]),Op("List",[Var("Instr")])],Var("Instr"))),OpDecl("Instr",FunType([Var("Strategy"),Var("Env"),Var("REnv")],Var("Instr")))])]),Rules([RDef("BlkFlat'",[],Rule(Op("Block",[Var("is")]),Op("Block",[Var("is'")]),Where(AM(BA(Rec("x",Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("try"),[Call(SVar("BlkFlatAux"),[])])))),Var("is")),Var("is'"))))),RDef("BlkFlatAux",[],Rule(Op("Cons",[Op("Block",[Var("is1")]),Var("is2")]),App(Call(SVar("conc"),[]),Op("TCons",[Var("is1"),Op("TCons",[Var("is2"),Op("TNil",[])])])),Id)),RDef("BlkFlat1",[],Rule(Op("Cons",[Op("Block",[Op("Nil",[])]),Var("is")]),Var("is"),Id)),RDef("BlkFlat2",[],Rule(Op("Cons",[Op("Block",[Op("Cons",[Var("i"),Var("is")])]),Var("is'")]),Op("Cons",[Var("i"),Op("Cons",[Op("Block",[Var("is")]),Var("is'")])]),Id)),RDef("PH",[],Rule(Op("Cons",[Op("MatchVar",[Var("n")]),Op("Cons",[Op("BuildVar",[Var("n")]),Var("is")])]),Op("Cons",[Op("MatchVar",[Var("n")]),Var("is")]),Id)),RDef("PH",[],Rule(Op("Cons",[Op("MatchFun",[Var("f"),Var("n")]),Op("Cons",[Op("TravInit",[]),Op("Cons",[Op("AllBuild",[]),Var("is")])])]),Op("Cons",[Op("MatchFun",[Var("f"),Var("n")]),Var("is")]),Id)),RDef("PH",[],Rule(Op("Cons",[Op("Epush",[Int(0)]),Var("is")]),Var("is"),Id)),RDef("PH",[],Rule(Op("Cons",[Op("Epop",[Int(0)]),Var("is")]),Var("is"),Id)),RDef("PH",[],Rule(Op("Cons",[Op("Epush",[Var("n")]),Op("Cons",[Op("Epush",[Var("m")]),Var("is")])]),Op("Cons",[Op("Epush",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Var("m"),Op("TNil",[])])]))]),Var("is")]),Id)),RDef("PH",[],Rule(Op("Cons",[Op("Epop",[Var("n")]),Op("Cons",[Op("Epop",[Var("m")]),Var("is")])]),Op("Cons",[Op("Epop",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Var("m"),Op("TNil",[])])]))]),Var("is")]),Id)),RDef("PH",[],Rule(Op("Cons",[Op("Arg",[Var("n")]),Op("Cons",[Op("Tpop",[]),Var("is")])]),Var("is"),Id)),RDef("PH",[],Rule(Op("Cons",[Op("Goto",[Var("l")]),Op("Cons",[Op("Label",[Var("l")]),Var("is")])]),Op("Cons",[Op("Label",[Var("l")]),Var("is")]),Id)),RDef("PH'",[],Rule(Op("Cons",[Op("Goto",[Var("l")]),Con(Var("is"),Op("Cons",[Op("Label",[Var("l")]),Op("Cons",[Op("Goto",[Var("l'")]),Var("is'")])]),Call(SVar("oncetd"),[]))]),Op("Cons",[Op("Goto",[Var("l'")]),Var("is")]),Id)),RDef("DblLbls",[],Rule(Op("Cons",[Op("Label",[Var("l1")]),Op("Cons",[Op("Label",[Var("l2")]),Var("is")])]),Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Label",[Var("l1")]),Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Var("is")])])]),Id)),RDef("SbsU",[],Rule(Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Label",[Var("l2")]),Var("is")])]),Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Label",[Var("l1")]),Var("is")])]),Id)),RDef("SbsU",[],Rule(Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Goto",[Var("l2")]),Var("is")])]),Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Goto",[Var("l1")]),Var("is")])]),Id)),RDef("SbsU",[],Rule(Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Cpush",[Var("l2")]),Var("is")])]),Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Cpush",[Var("l1")]),Var("is")])]),Id)),RDef("SbsU",[],Rule(Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Rpush",[Var("l2")]),Var("is")])]),Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Op("Cons",[Op("Rpush",[Var("l1")]),Var("is")])]),Id)),RDef("SbsD",[],Rule(Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Op("Cons",[Op("Label",[Var("l2")]),Var("is")])]),Op("Cons",[Op("Label",[Var("l1")]),Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Var("is")])]),Id)),RDef("SbsD",[],Rule(Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Op("Cons",[Op("Goto",[Var("l2")]),Var("is")])]),Op("Cons",[Op("Goto",[Var("l1")]),Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Var("is")])]),Id)),RDef("SbsD",[],Rule(Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Op("Cons",[Op("Cpush",[Var("l2")]),Var("is")])]),Op("Cons",[Op("Cpush",[Var("l1")]),Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Var("is")])]),Id)),RDef("SbsD",[],Rule(Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Op("Cons",[Op("Rpush",[Var("l2")]),Var("is")])]),Op("Cons",[Op("Rpush",[Var("l1")]),Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Var("is")])]),Id)),RDef("Up",[],Rule(Op("Cons",[Var("i"),Op("Cons",[Op("LabelSubsU",[Var("l1"),Var("l2")]),Var("is")])]),Op("Cons",[Op("LabelSubsU",[Var("l1"),Var("l2")]),Op("Cons",[Var("i"),Var("is")])]),Where(Not(AM(BA(Id,Var("i")),Op("LabelSubsU",[Wld,Wld])))))),RDef("Down",[],Rule(Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Op("Cons",[Var("i"),Var("is")])]),Op("Cons",[Var("i"),Op("Cons",[Op("LabelSubsD",[Var("l1"),Var("l2")]),Var("is")])]),Where(Not(AM(BA(Id,Var("i")),Op("LabelSubsD",[Wld,Wld])))))),RDef("UnSbsU",[],Rule(Op("Cons",[Op("LabelSubsU",[Var("l2"),Var("l1")]),Var("is")]),Var("is"),Id)),RDef("UnSbsD",[],Rule(Op("Cons",[Op("LabelSubsD",[Var("l2"),Var("l1")]),Op("Nil",[])]),Op("Nil",[]),Id)),RDef("I1",[],Rule(Op("Test",[Op("Id",[])]),Op("Id",[]),Id)),RDef("I2",[],Rule(Op("Not",[Op("Id",[])]),Op("Fail",[]),Id)),RDef("I3",[],Rule(Op("Seq",[Op("Id",[]),Var("s")]),Var("s"),Id)),RDef("I4",[],Rule(Op("Seq",[Var("s"),Op("Id",[])]),Var("s"),Id)),RDef("I5",[],Rule(Op("Choice",[Var("s"),Op("Id",[])]),Var("s"),Id)),RDef("I6",[],Rule(Op("Choice",[Op("Id",[]),Var("s")]),Var("s"),Id)),RDef("I7",[],Rule(Op("LChoice",[Op("Id",[]),Var("s")]),Op("Id",[]),Id)),RDef("I8",[],Rule(Op("Scope",[Var("xs"),Op("Id",[])]),Op("Id",[]),Id)),RDef("I9",[],Rule(Op("Rec",[Var("x"),Op("Id",[])]),Op("Id",[]),Id)),RDef("I10",[],Rule(Op("All",[Op("Id",[])]),Op("Id",[]),Id)),RDef("I11",[],Rule(Op("Path",[Var("i"),Op("Id",[])]),Op("Id",[]),Id)),RDef("I12",[],Rule(Op("Where",[Op("Id",[])]),Op("Id",[]),Id)),RDef("I14",[],Rule(Op("CongWld",[Var("ss")]),Op("Id",[]),Where(BA(Call(SVar("map"),[AM(Id,Op("Id",[]))]),Var("ss"))))),RDef("I15",[],Rule(Op("App",[Op("Id",[]),Var("t")]),Var("t"),Id)),RDef("I16",[],Rule(Op("Match",[Op("Wld",[])]),Op("Id",[]),Id)),RDef("I13",[],Rule(Op("Cong",[Var("f"),Var("ss")]),Op("MatchFunA",[Op("Fun",[Var("f"),App(Call(SVar("length"),[]),Var("ss"))]),Op("Nil",[]),Op("Nil",[]),Op("Id",[])]),Where(BA(Call(SVar("map"),[AM(Id,Op("Id",[]))]),Var("ss"))))),RDef("F1",[],Rule(Op("Test",[Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F2",[],Rule(Op("Not",[Op("Fail",[])]),Op("Id",[]),Id)),RDef("F3",[],Rule(Op("Seq",[Op("Fail",[]),Var("s")]),Op("Fail",[]),Id)),RDef("F4",[],Rule(Op("Seq",[Var("s"),Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F5",[],Rule(Op("Scope",[Var("xs"),Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F6",[],Rule(Op("Rec",[Var("x"),Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F7",[],Rule(Op("Some",[Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F8",[],Rule(Op("One",[Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F9",[],Rule(Op("Path",[Var("i"),Op("Fail",[])]),Op("Fail",[]),Id)),RDef("F10",[],Rule(Op("Cong",[Var("f"),Var("ls")]),Op("Fail",[]),Where(BA(Call(SVar("fetch"),[AM(Id,Op("Fail",[]))]),Var("ls"))))),RDef("F11",[],Rule(Op("Choice",[Op("Fail",[]),Var("s")]),Var("s"),Id)),RDef("F12",[],Rule(Op("Choice",[Var("s"),Op("Fail",[])]),Var("s"),Id)),RDef("F13",[],Rule(Op("LChoice",[Op("Fail",[]),Var("s")]),Var("s"),Id)),RDef("F14",[],Rule(Op("LChoice",[Var("s"),Op("Fail",[])]),Var("s"),Id)),RDef("F15",[],Rule(Op("Where",[Op("Fail",[])]),Op("Fail",[]),Id)),RDef("Comm",[],Rule(Op("Choice",[Var("x"),Var("y")]),Op("Choice",[Var("y"),Var("x")]),Id)),RDef("Ass",[],Rule(Op("Choice",[Op("Choice",[Var("x"),Var("y")]),Var("z")]),Op("Choice",[Var("x"),Op("Choice",[Var("y"),Var("z")])]),Id)),RDef("Ass",[],Rule(Op("Seq",[Op("Seq",[Var("x"),Var("y")]),Var("z")]),Op("Seq",[Var("x"),Op("Seq",[Var("y"),Var("z")])]),Id)),RDef("Ass",[],Rule(Op("LChoice",[Op("LChoice",[Var("x"),Var("y")]),Var("z")]),Op("LChoice",[Var("x"),Op("LChoice",[Var("y"),Var("z")])]),Id)),RDef("LAss",[],Rule(Op("Seq",[Var("s1"),Op("Seq",[Var("s2"),Var("s3")])]),Op("Seq",[Op("Seq",[Var("s1"),Var("s2")]),Var("s3")]),Id)),RDef("P",[],Rule(Op("Choice",[Var("x"),Var("x")]),Var("x"),Id)),RDef("P",[],Rule(Op("LChoice",[Var("x"),Var("x")]),Var("x"),Id)),RDef("P'",[],Rule(Op("Choice",[Var("s"),Con(Var("s'"),Var("s"),Call(SVar("oncetd"),[]))]),Con(Var("s'"),Var("s"),Call(SVar("conChoice"),[])),Id)),RDef("P'",[],Rule(Op("LChoice",[Var("s"),Con(Var("s'"),Var("s"),Call(SVar("oncetd"),[]))]),Op("LChoice",[Var("s"),Con(Var("s'"),Op("Id",[]),Call(SVar("conLChoice"),[]))]),Id)),RDef("P",[],Rule(Op("Where",[Op("Where",[Var("s")])]),Op("Where",[Var("s")]),Id)),RDef("P",[],Rule(Op("Not",[Op("Not",[Var("s")])]),Op("Test",[Var("s")]),Id)),RDef("P",[],Rule(Op("Test",[Op("Test",[Var("s")])]),Op("Test",[Var("s")]),Id)),RDef("P",[],Rule(Op("Where",[Op("Seq",[Op("Where",[Var("s1")]),Op("Seq",[Op("Build",[Var("t")]),Var("s2")])])]),Op("Where",[Op("Seq",[Var("s1"),Op("Seq",[Op("Build",[Var("t")]),Var("s2")])])]),Id)),RDef("Cspecial",[],StratRule(Call(SVar("Instr"),[Call(SVar("Repeat"),[AM(Id,Var("s1")),AM(Id,Var("s2"))]),AM(Id,Var("env")),AM(Id,Var("rcs"))]),Build(Op("Block",[Op("Cons",[Op("Cpush",[Var("end_loop")]),Op("Cons",[Op("Label",[Var("loop")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Tduplinv",[]),Op("Cons",[Op("Goto",[Var("loop")]),Op("Cons",[Op("Label",[Var("end_loop")]),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])])])])),Where(Seq(AM(Call(SVar("new"),[]),Var("loop")),AM(Call(SVar("new"),[]),Var("end_loop")))))),RDef("CsOncetd",[],StratRule(Call(SVar("Instr"),[Call(SVar("Oncetd"),[Seq(AM(Id,Var("s")),Call(SVar("IsMatch"),[]))]),AM(Id,Var("env")),AM(Id,Var("rcs"))]),Build(Op("Block",[Op("Cons",[Op("Rpush",[Var("endloop")]),Op("Cons",[Op("Label",[Var("startloop")]),Op("Cons",[Op("Cpush",[Var("else")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Goto",[Var("repeat")]),Op("Cons",[Op("Label",[Var("else")]),Op("Cons",[Op("IsAppl",[]),Op("Cons",[Op("MatchTravInit",[]),Op("Cons",[Op("Label",[Var("nextson")]),Op("Cons",[Op("OneMatchNextSon",[]),Op("Cons",[Op("Cpush",[Var("nextson")]),Op("Cons",[Op("Rpush",[Var("doneit")]),Op("Cons",[Op("Goto",[Var("startloop")]),Op("Cons",[Op("Label",[Var("doneit")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("MatchTravEnd",[]),Op("Cons",[Op("Label",[Var("repeat")]),Op("Cons",[Op("Return",[]),Op("Cons",[Op("Label",[Var("endloop")]),Op("Nil",[])])])])])])])])])])])])])])])])])])])])])])),Where(Seq(AM(Call(SVar("new"),[]),Var("startloop")),Seq(AM(Call(SVar("new"),[]),Var("else")),Seq(AM(Call(SVar("new"),[]),Var("nextson")),Seq(AM(Call(SVar("new"),[]),Var("doneit")),Seq(AM(Call(SVar("new"),[]),Var("repeat")),AM(Call(SVar("new"),[]),Var("endloop")))))))))),RDef("CsFetch",[],StratRule(Call(SVar("Instr"),[Call(SVar("Fetch"),[Seq(AM(Id,Var("s")),Call(SVar("IsMatch"),[]))]),AM(Id,Var("env")),AM(Id,Var("rcs"))]),Build(Op("Block",[Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Label",[Var("a")]),Op("Cons",[Op("MatchFun",[Str("Cons"),Int(2)]),Op("Cons",[Op("Cpush",[Var("b")]),Op("Cons",[Op("Arg",[Int(0)]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpop",[]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Goto",[Var("end")]),Op("Cons",[Op("Label",[Var("b")]),Op("Cons",[Op("Arg",[Int(1)]),Op("Cons",[Op("Tdrop",[]),Op("Cons",[Op("Goto",[Var("a")]),Op("Cons",[Op("Label",[Var("end")]),Op("Cons",[Op("Tpop",[]),Op("Nil",[])])])])])])])])])])])])])])])])])),Where(Seq(AM(Call(SVar("new"),[]),Var("a")),Seq(AM(Call(SVar("new"),[]),Var("b")),AM(Call(SVar("new"),[]),Var("end"))))))),RDef("UfIdem",[],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Var("ps"),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Id)),RDef("UfVar",["isvar"],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Var("ps'"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("sbs''")]),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("isvar"),[]),Var("x")),Seq(BA(Not(Call(SVar("in"),[])),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),AM(BA(Call(SVar("subs"),[Call(SVar("isvar"),[]),Build(Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("Nil",[])]))]),Op("TCons",[Var("sbs"),Op("TCons",[Var("ps"),Op("TNil",[])])])),Op("TCons",[Var("sbs''"),Op("TCons",[Var("ps'"),Op("TNil",[])])]))))))),RDef("UfSwap",["isvar"],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Where(Seq(BA(Not(Call(SVar("isvar"),[])),Var("x")),BA(Call(SVar("isvar"),[]),Var("y")))))),RDef("UfDecompose",[],Rule(Op("TCons",[Op("Cons",[Op("TCons",[Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TNil",[])])]),Var("ps")]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("ps"),Op("TNil",[])])])),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Id)),RDef("Option",["is-flag","label"],Rule(Op("Cons",[Var("flag"),Var("rest")]),Op("Cons",[App(Call(SVar("label"),[]),Op("TNil",[])),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("ArgOption",["is-flag","label"],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg"),Var("rest")])]),Op("Cons",[App(Call(SVar("label"),[]),Var("arg")),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("Arg2Option",["is-flag","label"],Rule(Op("Cons",[Var("flag"),Op("Cons",[Var("arg1"),Op("Cons",[Var("arg2"),Var("rest")])])]),Op("Cons",[App(Call(SVar("label"),[]),Op("TCons",[Var("arg1"),Op("TCons",[Var("arg2"),Op("TNil",[])])])),Var("rest")]),Where(BA(Call(SVar("is-flag"),[]),Var("flag"))))),RDef("UndefinedOption",[],Rule(Op("Cons",[Var("x"),Var("rest")]),Op("Cons",[Op("Undefined",[Var("x")]),Var("rest")]),Id)),RDef("memo",["name","s"],Rule(Var("t"),Var("t'"),Where(LChoice(AM(BA(Call(SVar("table-get"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Var("t"),Op("TNil",[])])])),Var("t'")),Seq(AM(BA(Call(SVar("s"),[]),Var("t")),Var("t'")),BA(Call(SVar("table-put"),[]),Op("TCons",[App(Call(SVar("name"),[]),Op("TNil",[])),Op("TCons",[Var("t"),Op("TCons",[Var("t'"),Op("TNil",[])])])]))))))),RDef("find-in-path",[],Rule(Op("TCons",[Var("file"),Op("TCons",[Var("path"),Op("TNil",[])])]),App(Rec("x",LChoice(Scope(["dir"],SRule(Rule(Op("Cons",[Var("dir"),Wld]),App(Seq(Call(SVar("concat-strings"),[]),Call(SVar("file-exists"),[])),Op("Cons",[Var("dir"),Op("Cons",[Str("/"),Op("Cons",[Var("file"),Op("Nil",[])])])])),Id))),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))),Var("path")),Id)),RDef("sect",["op","arg"],Rule(Var("x"),App(Call(SVar("op"),[]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("arg"),[]),Op("TNil",[])),Op("TNil",[])])])),Id)),RDef("S2I1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("n"),Id)),RDef("S2I2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Int(10),Op("TCons",[Var("n"),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])])))))),RDef("S2D0",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Int(46),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Int(10),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("S2D1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Var("n"),Id)),RDef("S2D2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("f"),Op("TCons",[Op("Cons",[Var("m"),Var("ms")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("add"),[]),Op("TCons",[Var("n"),Op("TCons",[App(Call(SVar("div"),[]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),Op("TCons",[Var("f"),Op("TNil",[])])])),Op("TNil",[])])])),Op("TCons",[App(Call(SVar("mul"),[]),Op("TCons",[Var("f"),Op("TCons",[Int(10),Op("TNil",[])])])),Op("TCons",[Var("ms"),Op("TNil",[])])])]),Where(Seq(BA(Call(SVar("geq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(48),Op("TNil",[])])])),BA(Call(SVar("leq"),[]),Op("TCons",[Var("m"),Op("TCons",[Int(57),Op("TNil",[])])])))))),RDef("SplitInit",[],Rule(Var("x"),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])])]),Id)),RDef("SplitExit",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),App(Call(SVar("reverse"),[]),Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")])),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Int(32),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Op("Cons",[App(Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])),Var("cs")),Var("xs")]),Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("SplitNext",[],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("cs"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("y"),Var("cs")]),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Where(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("y"),Op("TCons",[Int(32),Op("TNil",[])])]))))),RDef("add-extension",[],Rule(Op("TCons",[Var("name"),Op("TCons",[Var("ext"),Op("TNil",[])])]),App(Call(SVar("concat-strings"),[]),Op("Cons",[Var("name"),Op("Cons",[Str("."),Op("Cons",[Var("ext"),Op("Nil",[])])])])),Id)),RDef("Aut1",[],Rule(Op("MatchTerm",[Var("p"),Op("Wld",[]),Var("c")]),Op("MatchVars",[Op("Nil",[]),Var("p"),Var("c")]),Id)),RDef("Aut4",[],Rule(Op("MatchTerm",[Var("p"),Op("Var",[Var("x")]),Var("c")]),Op("MatchVars",[Op("Cons",[Var("x"),Op("Nil",[])]),Var("p"),Var("c")]),Id)),RDef("Aut4a",[],Rule(Op("MatchTerm",[Var("p"),Op("As",[Op("Var",[Var("x")]),Var("t")]),Var("c")]),Op("MatchVars",[Op("Cons",[Var("x"),Op("Nil",[])]),Var("p"),Op("MatchTerm",[Var("p"),Var("t"),Var("c")])]),Id)),RDef("Aut2",[],Rule(Op("MatchTerm",[Var("p"),Op("Str",[Var("x")]),Var("c")]),Op("MatchFunA",[Op("Str",[Var("x")]),Op("Nil",[]),Var("p"),Var("c")]),Id)),RDef("Aut3",[],Rule(Op("MatchTerm",[Var("p"),Op("Int",[Var("x")]),Var("c")]),Op("MatchFunA",[Op("Int",[Var("x")]),Op("Nil",[]),Var("p"),Var("c")]),Id)),RDef("Aut3",[],Rule(Op("MatchTerm",[Var("p"),Op("Real",[Var("x")]),Var("c")]),Op("MatchFunA",[Op("Real",[Var("x")]),Op("Nil",[]),Var("p"),Var("c")]),Id)),RDef("Aut5",[],Rule(Op("MatchTerm",[Var("p"),Op("Op",[Var("f"),Var("ts")]),Var("c")]),Op("MatchFunA",[Op("Fun",[Var("f"),App(Call(SVar("length"),[]),Var("ts"))]),Op("Nil",[]),Var("p"),Op("MatchKids",[Int(0),Var("p"),Var("ts"),Var("c")])]),Id)),RDef("Aut6",[],Rule(Op("MatchKids",[Var("n"),Var("p"),Op("Nil",[]),Var("c")]),Var("c"),Id)),RDef("Aut7",[],Rule(Op("MatchKids",[Var("n"),Var("p"),Op("Cons",[Var("t"),Var("ts")]),Var("c")]),Op("Down",[Var("n"),Op("MatchTerm",[Op("Cons",[Var("n"),Var("p")]),Var("t"),Op("Up",[Op("MatchKids",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Var("p"),Var("ts"),Var("c")])])])]),Id)),RDef("Aut8",[],Rule(Op("MatchTerm",[Var("p"),Op("BuildDefault",[Var("t")]),Var("c")]),Op("MatchVars",[Op("Nil",[]),Var("p"),Var("c")]),Id)),RDef("AutInit",[],Rule(Op("Pat",[Var("t"),Var("s")]),Op("MatchTerm",[Op("Nil",[]),Var("t"),Op("Accept",[Var("s")])]),Id)),RDef("O",[],Rule(Op("Down",[Var("n"),Op("Up",[Var("c")])]),Var("c"),Id)),RDef("O",[],Rule(Op("MatchVars",[Op("Nil",[]),Var("p"),Var("c")]),Var("c"),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Down",[Var("n"),Var("c1")]),Op("Down",[Var("n"),Var("c2")])]),Op("Down",[Var("n"),Op("Merge",[Var("c1"),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Up",[Var("c1")]),Op("Up",[Var("c2")])]),Op("Up",[Op("Merge",[Var("c1"),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Accept",[Var("s1")]),Op("Accept",[Var("s2")])]),Op("Accept",[Op("Choice",[Var("s1"),Var("s2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Down",[Var("n"),Var("c1")]),Op("Up",[Var("c2")])]),Op("Down",[Var("n"),Op("Merge",[Var("c1"),Op("Up",[Op("Up",[Var("c2")])])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Up",[Var("c1")]),Op("Down",[Var("n"),Var("c2")])]),Op("Down",[Var("n"),Op("Merge",[Op("Up",[Op("Up",[Var("c1")])]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("Up",[Var("c2")])]),Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Op("Merge",[Var("c1"),Op("Up",[Var("c2")])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Up",[Var("c1")]),Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c2")])]),Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Op("Merge",[Op("Up",[Var("c1")]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("Up",[Var("c2")])]),Op("MatchVars",[Var("xs"),Var("p"),Op("Merge",[Var("c1"),Op("Up",[Var("c2")])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Up",[Var("c1")]),Op("MatchVars",[Var("xs"),Var("p"),Var("c2")])]),Op("MatchVars",[Var("xs"),Var("p"),Op("Merge",[Op("Up",[Var("c1")]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Up",[Var("c")]),Op("Case",[Var("cs")])]),Op("Case",[App(Call(SVar("map"),[Scope(["c'"],Seq(AM(Id,Var("c'")),Build(Op("Merge",[Op("Up",[Var("c")]),Var("c'")]))))]),Var("cs"))]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Case",[Var("cs")]),Op("Up",[Var("c")])]),Op("Case",[App(Call(SVar("map"),[Scope(["c'"],Seq(AM(Id,Var("c'")),Build(Op("Merge",[Op("Up",[Var("c")]),Var("c'")]))))]),Var("cs"))]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Up",[Var("c1")]),Op("Accept",[Var("c2")])]),Op("Up",[Op("Merge",[Var("c1"),Op("Accept",[Var("c2")])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Accept",[Var("c1")]),Op("Up",[Var("c2")])]),Op("Up",[Op("Merge",[Op("Accept",[Var("c1")]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Down",[Var("n"),Var("c1")]),Op("Accept",[Var("c2")])]),Op("Down",[Var("n"),Op("Merge",[Var("c1"),Op("Up",[Op("Accept",[Var("c2")])])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Accept",[Var("c1")]),Op("Down",[Var("n"),Var("c2")])]),Op("Down",[Var("n"),Op("Merge",[Op("Up",[Op("Accept",[Var("c1")])]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("Accept",[Var("c2")])]),Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Op("Merge",[Var("c1"),Op("Accept",[Var("c2")])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Accept",[Var("c1")]),Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c2")])]),Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Op("Merge",[Op("Accept",[Var("c1")]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("Accept",[Var("c2")])]),Op("MatchVars",[Var("xs"),Var("p"),Op("Merge",[Var("c1"),Op("Accept",[Var("c2")])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Accept",[Var("c1")]),Op("MatchVars",[Var("xs"),Var("p"),Var("c2")])]),Op("MatchVars",[Var("xs"),Var("p"),Op("Merge",[Op("Accept",[Var("c1")]),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Accept",[Var("c")]),Op("Case",[Var("cs")])]),Op("Case",[App(Call(SVar("map"),[Scope(["c'"],Seq(AM(Id,Var("c'")),Build(Op("Merge",[Op("Accept",[Var("c")]),Var("c'")]))))]),Var("cs"))]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("Case",[Var("cs")]),Op("Accept",[Var("c")])]),Op("Case",[App(Call(SVar("map"),[Scope(["c'"],Seq(AM(Id,Var("c'")),Build(Op("Merge",[Op("Accept",[Var("c")]),Var("c'")]))))]),Var("cs"))]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("MatchVars",[Var("ys"),Var("p"),Var("c2")])]),Op("MatchVars",[App(Call(SVar("conc"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("MatchFunA",[Var("f"),Var("ys"),Var("p"),Var("c2")])]),Op("MatchFunA",[Var("f"),App(Call(SVar("union"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("MatchFunA",[Var("g"),Var("ys"),Var("p"),Var("c2")])]),Op("Case",[Op("Cons",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("Cons",[Op("MatchFunA",[Var("g"),Var("ys"),Var("p"),Var("c2")]),Op("Nil",[])])])]),Where(BA(Not(Call(SVar("eq"),[])),Op("TCons",[Var("f"),Op("TCons",[Var("g"),Op("TNil",[])])]))))),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("ys"),Var("p"),Var("c1")]),Op("MatchVars",[Var("xs"),Var("p"),Var("c2")])]),Op("Case",[Op("Cons",[Op("MatchFunA",[Var("f"),App(Call(SVar("union"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Op("Cons",[Op("MatchVars",[Var("xs"),Var("p"),Var("c2")]),Op("Nil",[])])])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("MatchFunA",[Var("f"),Var("ys"),Var("p"),Var("c2")])]),Op("Case",[Op("Cons",[Op("MatchFunA",[Var("f"),App(Call(SVar("union"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Op("Cons",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("Nil",[])])])]),Id)),RDef("Mrg",[],Rule(Op("Merge2",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("MatchFunA",[Var("f"),Var("ys"),Var("p"),Var("c2")])]),Op("MatchFunA",[Var("f"),App(Call(SVar("union"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Id)),RDef("Mrg",[],Rule(Op("Merge2",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("MatchVars",[Var("ys"),Var("p"),Var("c2")])]),Op("MatchVars",[App(Call(SVar("conc"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Id)),RDef("MrgInsert1",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("Case",[Var("cs")])]),Op("Case",[Var("cs'")]),Where(AM(BA(Call(SVar("fetch"),[Scope(["ys","c2"],Seq(AM(Id,Op("MatchFunA",[Var("f"),Var("ys"),Var("p"),Var("c2")])),Build(Op("MatchFunA",[Var("f"),App(Call(SVar("union"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]))))]),Var("cs")),Var("cs'"))))),RDef("MrgInsert2",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("Case",[Var("cs")])]),Op("Case",[Op("Cons",[Op("MatchFunA",[Var("f"),App(Call(SVar("union"),[]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Var("p"),Op("Merge",[Var("c1"),Var("c2")])]),Var("cs")])]),Where(BA(Call(SVar("fetch"),[AM(Id,Op("MatchVars",[Var("ys"),Var("p"),Var("c2")]))]),Var("cs"))))),RDef("MrgInsert3",[],Rule(Op("Merge",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Op("Case",[Var("cs")])]),Op("Case",[Op("Cons",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("c1")]),Var("cs")])]),Id)),RDef("Mrg",[],Rule(Op("Merge",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Op("Case",[Var("cs")])]),Op("Case",[Var("cs'")]),Where(Seq(AM(BA(Call(SVar("map"),[Scope(["c2"],Seq(AM(Id,Var("c2")),Build(Op("Merge2",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Var("c2")]))))]),Var("cs")),Var("cs''")),AM(LChoice(Seq(BA(Call(SVar("fetch"),[Call(SVar("MatchVars"),[Id,Id,Id])]),Var("cs")),Build(Var("cs''"))),Build(Op("Cons",[Op("MatchVars",[Var("xs"),Var("p"),Var("c1")]),Var("cs''")]))),Var("cs'")))))),RDef("mk-merge",[],Rule(Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Op("Merge",[Var("a"),Var("b")]),Id)),RDef("C2L",[],Rule(Op("Choice",[Var("s1"),Var("s2")]),App(Call(SVar("conc"),[]),Op("TCons",[Var("s1"),Op("TCons",[Var("s2"),Op("TNil",[])])])),Id)),RDef("dist",["s"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(All(Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Id)))),Var("t")),Id)),RDef("d",["s"],Rule(Op("Pair",[Var("t"),Var("env")]),App(Call(SVar("s"),[]),Var("t")),Id)),RDef("t",["s"],Rule(Op("Pair",[Var("t"),Var("env")]),Op("Pair",[App(Call(SVar("s"),[]),Var("t")),Var("env")]),Id)),RDef("coll",["s"],Rule(Explode(Var("f"),Var("xs")),Op("TCons",[Explode(Var("f"),Var("ys")),Op("TCons",[Var("zs"),Op("TNil",[])])]),Where(AM(BA(Call(SVar("unzip"),[Call(SVar("s"),[])]),Var("xs")),Op("TCons",[Var("ys"),Op("TCons",[Var("zs"),Op("TNil",[])])]))))),RDef("RnVar",["isvar"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(Call(SVar("isvar"),[Seq(Call(SVar("split"),[Id,Build(Var("env"))]),Call(SVar("lookup"),[]))]),Var("t")),Id)),RDef("RnBinding",["bndvrs","paste"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("paste"),[Build(Var("ys"))]),Var("t")),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),Where(Seq(AM(BA(Call(SVar("bndvrs"),[]),Var("t")),Var("xs")),Seq(AM(Call(SVar("map"),[Call(SVar("new"),[])]),Var("ys")),AM(BA(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Op("TCons",[Var("env1"),Op("TNil",[])])])),Var("env2"))))))),RDef("DistBinding",["boundin","s"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env1"),Op("TCons",[Var("env2"),Op("TNil",[])])])]),App(Call(SVar("boundin"),[Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env2"),Op("TNil",[])])])),Id))),Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env1"),Op("TNil",[])])])),Id))),Id]),Var("t")),Id)),RDef("SubsVar",["isvar","mksbs"],Rule(Op("TCons",[Var("t"),Op("TCons",[Var("env"),Op("TNil",[])])]),App(Call(SVar("lookup"),[]),Op("TCons",[Var("t"),Op("TCons",[Var("sbs"),Op("TNil",[])])])),Where(Seq(BA(Call(SVar("isvar"),[Id]),Var("t")),AM(Call(SVar("mksbs"),[]),Var("sbs")))))),RDef("in",[],Rule(Op("TCons",[Var("a"),Op("TCons",[Var("t"),Op("TNil",[])])]),App(Call(SVar("oncetd"),[AM(Id,Var("a"))]),Var("t")),Id)),RDef("subs",["isvar"],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ts"),Op("TCons",[Var("t"),Op("TNil",[])])])]),App(Call(SVar("subs"),[Call(SVar("isvar"),[]),BA(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ts"),Op("TNil",[])])]))]),Var("t")),Id)),RDef("FoldR1",[],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Op("Nil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Id)),RDef("FoldR",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("TFoldR",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("FoldL",["s"],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Op("TNil",[])])]),Id)),RDef("FoldL",["s"],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("y"),Id)),RDef("lsplit",["f","g"],Rule(Var("x"),Op("Cons",[App(Call(SVar("f"),[]),Var("x")),Op("Cons",[App(Call(SVar("g"),[]),Var("x")),Op("Nil",[])])]),Id)),RDef("Look1",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Wld]),Op("TNil",[])])]),Var("y"),Id)),RDef("Look2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Wld,Var("xs")]),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("Look1'",["keyeq"],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Wld]),Op("TNil",[])])]),Var("y"),Where(BA(Call(SVar("keyeq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),RDef("HdMember",["mklst"],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[AM(Id,Var("x"))]))))),RDef("HdMember'",["eq","mklst"],Rule(Op("Cons",[Var("x"),Var("xs")]),Var("xs"),Where(Seq(Call(SVar("mklst"),[]),Call(SVar("fetch"),[Scope(["y"],SRule(Rule(Var("y"),App(Call(SVar("eq"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id)))]))))),RDef("union",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Build(Var("l2"))),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),RDef("diff",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember"),[Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),RDef("diff'",["eq"],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Rec("x",LChoice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("HdMember'"),[Call(SVar("eq"),[]),Build(Var("l2"))]),Call(SVar("x"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),Var("l1")),Id)),RDef("isect",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[App(Call(SVar("diff"),[]),Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])])),Op("TNil",[])])])),Id)),RDef("foldr-kids",["nul","sum"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("nul"),[]),Call(SVar("sum"),[])]),Var("xs")),Id)),RDef("foldr-kids",["zero","sum","s"],Rule(Explode(Wld,Var("xs")),App(Call(SVar("foldr"),[Call(SVar("zero"),[]),Call(SVar("sum"),[]),Call(SVar("s"),[])]),Var("xs")),Id)),RDef("SortL",["s"],Rule(Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("l")])]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l")])]),Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]))))),RDef("LSort",["s"],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("y"),Op("Cons",[Var("x"),Var("l'")])]),Where(AM(BA(Call(SVar("at_suffix"),[SRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Var("ys"),Where(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])))))]),Var("l")),Var("l'"))))),RDef("Uniq",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Where(BA(Call(SVar("fetch"),[AM(Id,Var("x"))]),Var("l"))))),RDef("LMerge",["s"],Rule(Op("Cons",[Var("x"),Var("l")]),Op("Cons",[Var("z"),Var("l'")]),Where(AM(BA(Call(SVar("at_suffix"),[SRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Var("ys"),Where(AM(BA(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Var("z")))))]),Var("l")),Var("l'"))))),RDef("Zip1",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1a'",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Wld,Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1b'",[],Rule(Op("TCons",[Wld,Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip1c",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("x"),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1c'",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Var("x"),Id)),RDef("Zip1d",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Cons",[Wld,Wld]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("Zip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("LZip2",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("RZip2",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("Zip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("UnZip1",[],Rule(Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UnZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("UnZip3",[],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip0",[],Rule(Var("xs"),Op("TCons",[Int(1),Op("TCons",[Var("xs"),Op("TNil",[])])]),Id)),RDef("NZip1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Nil",[]),Id)),RDef("NZip2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("NZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("Cons",[Var("x"),Var("xs")]),Id)),RDef("TZip1",[],Rule(Op("TCons",[Op("TNil",[]),Op("TCons",[Op("TNil",[]),Op("TNil",[])])]),Op("TNil",[]),Id)),RDef("TZip2",[],Rule(Op("TCons",[Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Op("TCons",[Var("y"),Var("ys")]),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("TZip3",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[Var("x"),Var("xs")]),Id)),RDef("cart",["s"],Rule(Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),App(Seq(Call(SVar("map"),[Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("map"),[Scope(["y"],SRule(Rule(Var("y"),App(Call(SVar("s"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),Id)))]),Var("ys")),Id)))]),Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])])),Var("xs")),Id)),RDef("Skip",["s"],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("x"),Op("TCons",[Op("TCons",[Var("xs"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TNil",[])])]),Id)),RDef("Ind1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Var("x"),Id)),RDef("Ind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("xs"),Op("TNil",[])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(2),Op("TNil",[])])]))))),RDef("Gind0",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Int(1),Op("TCons",[Var("x"),Op("TCons",[Var("ys"),Op("TNil",[])])])]),Id)),RDef("Gind1",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Var("n"),Id)),RDef("Gind2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Var("y"),Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("y"),Op("TCons",[Var("xs"),Op("TNil",[])])])]),Id)),RDef("Hd",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("x"),Id)),RDef("Tl",[],Rule(Op("Cons",[Var("x"),Var("l")]),Var("l"),Id)),RDef("Last",[],Rule(Op("Cons",[Var("x"),Op("Nil",[])]),Var("x"),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("MkCons",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Op("Cons",[Var("y"),Var("z")]),Op("TNil",[])])]),Op("Cons",[Var("x"),Op("Cons",[Var("y"),Var("z")])]),Id)),RDef("MkSingleton",[],Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)),RDef("RevInit",[],Rule(Var("xs"),Op("TCons",[Var("xs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("Rev",[],Rule(Op("TCons",[Op("Cons",[Var("x"),Var("xs")]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Op("TCons",[Var("xs"),Op("TCons",[Op("Cons",[Var("x"),Var("ys")]),Op("TNil",[])])]),Id)),RDef("RevExit",[],Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("ys"),Op("TNil",[])])]),Var("ys"),Id)),RDef("UptoInit",[],Rule(Var("i"),Op("TCons",[Var("i"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id)),RDef("UptoExit",[],Rule(Op("TCons",[Int(0),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("xs"),Id)),RDef("UptoStep",[],Rule(Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Op("Cons",[Var("i"),Var("xs")]),Op("TNil",[])])]),Id)),RDef("conc",[],Rule(Op("TCons",[Var("l1"),Op("TCons",[Var("l2"),Op("TNil",[])])]),App(Call(SVar("at_end"),[Build(Var("l2"))]),Var("l1")),Id)),RDef("Concat",["x"],Rule(Op("Cons",[Var("l"),Var("ls")]),App(Call(SVar("at_end"),[BA(Call(SVar("x"),[]),Var("ls"))]),Var("l")),Id)),RDef("Sep",["s"],Rule(Op("Cons",[Var("x"),Var("xs")]),Op("Cons",[App(Call(SVar("s"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Var("xs")])]),Id)),RDef("Fst",[],Rule(Op("TCons",[Var("x"),Var("tp")]),Var("x"),Id)),RDef("Snd",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Var("tp")])]),Var("y"),Id)),RDef("Third",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TCons",[Var("z"),Var("tp")])])]),Var("z"),Id)),RDef("TInd1",[],Rule(Op("TCons",[Int(1),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Var("x"),Id)),RDef("TInd2",[],Rule(Op("TCons",[Var("n"),Op("TCons",[Op("TCons",[Var("x"),Var("tp")]),Op("TNil",[])])]),Op("TCons",[App(Call(SVar("minus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("tp"),Op("TNil",[])])]),Id)),RDef("Dupl",[],Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("split",["f","g"],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TNil",[])])]),Id)),RDef("split3",["f","g","h"],Rule(Var("x"),Op("TCons",[App(Call(SVar("f"),[]),Var("x")),Op("TCons",[App(Call(SVar("g"),[]),Var("x")),Op("TCons",[App(Call(SVar("h"),[]),Var("x")),Op("TNil",[])])])]),Id)),RDef("Swap",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Op("TCons",[Var("y"),Op("TCons",[Var("x"),Op("TNil",[])])]),Id)),RDef("Thd",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("x"),Id)),RDef("Ttl",[],Rule(Op("TCons",[Var("x"),Var("xs")]),Var("xs"),Id)),RDef("io-index",[],Rule(Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])]),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])]),Where(BA(Call(SVar("fetch"),[Seq(Scope(["i","xs"],Seq(AM(Id,Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Build(Op("TCons",[Var("i"),Op("TCons",[App(Call(SVar("get-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Op("TNil",[])])])))),AM(Id,Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])))]),Var("env"))))),RDef("C",[],Rule(Op("Instr",[Op("Id",[]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Fail",[]),Var("env"),Var("rcs")]),Op("Goto",[Str("fail")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Test",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpop",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Not",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Crestore",[]),Op("Cons",[Op("Cjump",[]),Op("Cons",[Op("Label",[Var("fc")]),Op("Nil",[])])])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("C",[],Rule(Op("Instr",[Op("Seq",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("LChoice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("sc")),AM(Call(SVar("new"),[]),Var("fc")))))),RDef("C",[],Rule(Op("Instr",[Op("Choice",[Var("s1"),Var("s2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Cpush",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s1"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("sc")),AM(Call(SVar("new"),[]),Var("fc")))))),RDef("C",[],Rule(Op("Instr",[Op("Down",[Var("n"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Arg",[Var("n")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Up",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tpop",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Accept",[Var("s")]),Var("env"),Var("rcs")]),Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("MatchVars",[Op("Nil",[]),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("MatchVars",[Op("Cons",[Var("x"),Var("xs")]),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Var("ins"),Op("Cons",[Op("Instr",[Op("MatchVars",[Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[Var("rcs"),Op("TNil",[])])])),Build(Op("MatchVar",[Var("o")]))),AM(Build(Op("MatchVard",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C",[],Rule(Op("Instr",[Op("MatchFunA",[Op("Fun",[Var("f"),Var("n")]),Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchFun",[Var("f"),Var("n")]),Op("Cons",[Op("Instr",[Op("MatchVars",[Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("MatchFunA",[Op("Str",[Var("x")]),Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchString",[Var("x")]),Op("Cons",[Op("Instr",[Op("MatchVars",[Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("MatchFunA",[Op("Int",[Var("x")]),Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchInt",[Var("x")]),Op("Cons",[Op("Instr",[Op("MatchVars",[Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("MatchFunA",[Op("Real",[Var("x")]),Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchReal",[Var("x")]),Op("Cons",[Op("Instr",[Op("MatchVars",[Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Case",[Var("cs")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Op("Cases",[Var("cs'"),Var("sc")]),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("sc")),AM(LChoice(BA(Call(SVar("at_suffix"),[Scope(["cs"],Seq(Call(SVar("Cons"),[Seq(Call(SVar("MatchVars"),[Id,Id,Id]),AM(Id,Var("s"))),AM(Id,Var("cs"))]),Build(Var("cs"))))]),Var("cs")),Seq(AM(Build(Op("Fail",[])),Var("s")),Build(Var("cs")))),Var("cs'")))))),RDef("C",[],Rule(Op("Instr",[Op("Cases",[Op("Nil",[]),Var("sc")]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Cases",[Op("Cons",[Op("MatchFunA",[Var("f"),Var("xs"),Var("p"),Var("s")]),Var("cases")]),Var("sc")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[App(Call(SVar("CasePrefix"),[]),Op("TCons",[Var("f"),Op("TCons",[Var("fc"),Op("TNil",[])])])),Op("Cons",[Op("Instr",[Op("MatchVars",[Var("xs"),Var("p"),Var("s")]),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Instr",[Op("Cases",[Var("cases"),Var("sc")]),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("CasePrefix",[],Rule(Op("TCons",[Op("Fun",[Var("f"),Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchFunFC",[Var("f"),Var("n"),Var("fc")]),Id)),RDef("CasePrefix",[],Rule(Op("TCons",[Op("Int",[Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchIntFC",[Var("n"),Var("fc")]),Id)),RDef("CasePrefix",[],Rule(Op("TCons",[Op("Real",[Var("n")]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchRealFC",[Var("n"),Var("fc")]),Id)),RDef("CasePrefix",[],Rule(Op("TCons",[Op("Str",[Var("x")]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchStringFC",[Var("x"),Var("fc")]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Case",[Var("cases"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Op("Cases",[Var("cases"),Var("sc")]),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])]),Where(AM(Call(SVar("new"),[]),Var("sc"))))),RDef("C'",[],Rule(Op("Instr",[Op("Cases",[Op("Nil",[]),Var("sc")]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Cases",[Op("Cons",[Op("Seq",[Var("s1"),Var("s2")]),Var("cases")]),Var("sc")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[App(Call(SVar("CasePrefix"),[]),Op("TCons",[Var("s1"),Op("TCons",[Var("fc"),Op("TNil",[])])])),Op("Cons",[Op("Instr",[Var("s2"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Instr",[Op("Cases",[Var("cases"),Var("sc")]),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("CasePrefix'",[],Rule(Op("TCons",[Op("MatchFun",[Var("f")]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchFunFC",[Var("f"),Var("fc")]),Id)),RDef("CasePrefix'",[],Rule(Op("TCons",[Op("Match",[Op("Int",[Var("n")])]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchIntFC",[Var("n"),Var("fc")]),Id)),RDef("CasePrefix'",[],Rule(Op("TCons",[Op("Match",[Op("Real",[Var("n")])]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchRealFC",[Var("n"),Var("fc")]),Id)),RDef("CasePrefix'",[],Rule(Op("TCons",[Op("Match",[Op("Str",[Var("x")])]),Op("TCons",[Var("fc"),Op("TNil",[])])]),Op("MatchStringFC",[Var("x"),Var("fc")]),Id)),RDef("C''",[],Rule(Op("Instr",[Op("Case",[Var("cases")]),Var("env"),Var("rcs")]),Op("Instr",[Op("Cases",[Var("cases"),Var("sc")]),Var("env"),Var("rcs")]),Where(AM(Call(SVar("new"),[]),Var("sc"))))),RDef("C''",[],Rule(Op("Instr",[Op("Cases",[Op("Nil",[]),Var("sc")]),Var("env"),Var("rcs")]),Op("Label",[Var("sc")]),Id)),RDef("C''",[],Rule(Op("Instr",[Op("Cases",[Op("Cons",[Op("TCons",[Var("f"),Op("TCons",[Var("s"),Op("TNil",[])])]),Op("Nil",[])]),Var("sc")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchFun",[Var("f")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])]),Id)),RDef("C''",[],Rule(Op("Instr",[Op("Cases",[Op("Cons",[Op("TCons",[Var("f"),Op("TCons",[Var("s"),Op("TNil",[])])]),Var("cases")]),Var("sc")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchFunFC",[Var("f"),Var("fc")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("sc")]),Op("Cons",[Op("Label",[Var("fc")]),Op("Cons",[Op("Instr",[Op("Cases",[Var("cases"),Var("sc")]),Var("env"),Var("rcs")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("fc"))))),RDef("C",[],Rule(Op("Instr",[Op("Rec",[Var("x"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("sc")]),Op("Cons",[Op("Label",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Return",[]),Op("Cons",[Op("Label",[Var("sc")]),Op("Nil",[])])])])])])]),Where(AM(Call(SVar("new"),[]),Var("sc"))))),RDef("C",[],Rule(Op("Instr",[Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Rpush",[Var("ret")]),Op("Cons",[Op("Goto",[Var("x")]),Op("Cons",[Op("Label",[Var("ret")]),Op("Nil",[])])])])]),Where(AM(Call(SVar("new"),[]),Var("ret"))))),RDef("C",[],Rule(Op("Instr",[Op("Let",[Var("sdef"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("y")]),Op("Cons",[Op("Instr",[Var("sdef"),Var("env"),Var("rcs")]),Op("Cons",[Op("Label",[Var("y")]),Op("Nil",[])])])])])]),Where(AM(Call(SVar("new"),[]),Var("y"))))),RDef("C",[],Rule(Op("Instr",[Op("SDef",[Var("x"),Op("Nil",[]),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Label",[Var("x")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Return",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Path",[Var("i"),Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TpushIthSon",[Var("i")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("TputIthSon",[Var("i")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Cong",[Var("f"),Var("ss")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("MatchFun",[Var("f"),App(Call(SVar("length"),[]),Var("ss"))]),Op("Cons",[Op("TravInit",[]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Cons",[Op("AllBuild",[]),Op("Nil",[])])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongWld",[Var("ss")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("TravInit",[]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Cons",[Op("AllBuild",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongKids",[Op("Nil",[])]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CongKids",[Op("Cons",[Var("s"),Var("ss")])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("OneNextSon",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Op("CongKids",[Var("ss")]),Var("env"),Var("rcs")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("All",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("AllInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("AllNextSon",[Var("c2")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("AllBuild",[]),Op("Nil",[])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("One",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("IsAppl",[]),Op("Cons",[Op("OneInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("OneNextSon",[]),Op("Cons",[Op("Cpush",[Var("c1")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("OneBuild",[]),Op("Nil",[])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Some",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("IsAppl",[]),Op("Cons",[Op("SomeInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("SomeNextSon",[Var("c2")]),Op("Cons",[Op("Cpush",[Var("c1")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Cpop",[]),Op("Cons",[Op("CounterOK",[]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("SomeBuild",[]),Op("Nil",[])])])])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Thread",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("ThreadInit",[]),Op("Cons",[Op("Label",[Var("c1")]),Op("Cons",[Op("ThreadNextSon",[Var("c2")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("ThreadSetEnv",[]),Op("Cons",[Op("Goto",[Var("c1")]),Op("Cons",[Op("Label",[Var("c2")]),Op("Cons",[Op("ThreadBuild",[]),Op("Nil",[])])])])])])])])])]),Where(Seq(AM(Call(SVar("new"),[]),Var("c1")),AM(Call(SVar("new"),[]),Var("c2")))))),RDef("C",[],Rule(Op("Instr",[Op("Scope",[Var("xs"),Var("s")]),Var("env"),Var("i")]),Op("Block",[Op("Cons",[Op("Epushd",[Var("i"),Var("o")]),Op("Cons",[Op("Instr",[Var("s"),Op("Cons",[Op("TCons",[Var("i"),Op("TCons",[Var("xs"),Op("TNil",[])])]),Var("env")]),App(Call(SVar("add"),[]),Op("TCons",[Var("i"),Op("TCons",[Int(1),Op("TNil",[])])]))]),Op("Cons",[Op("Epopd",[Var("i"),Var("o")]),Op("Nil",[])])])])]),Where(AM(BA(Call(SVar("length"),[]),Var("xs")),Var("o"))))),RDef("C",[],Rule(Op("Instr",[Op("Where",[Var("s")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tdupl",[]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpop",[]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Prim",[Var("x")]),Var("env"),Var("rcs")]),Op("Iprim",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Prim2",[Var("x"),Var("y")]),Var("env"),Var("rcs")]),Op("Iprim2",[Var("x"),Var("y")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("CountRule",[Var("x")]),Var("env"),Var("rcs")]),Op("ICountRule",[Var("x")]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Match",[Op("Var",[Var("x")])]),Var("env"),Var("rcs")]),Var("ins"),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[Var("rcs"),Op("TNil",[])])])),Build(Op("MatchVar",[Var("o")]))),AM(Build(Op("MatchVard",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C'",[],Rule(Op("Instr",[Op("MatchFun",[Var("f")]),Var("env"),Var("rcs")]),Op("MatchFun",[Var("f")]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Match",[Op("Str",[Var("x")])]),Var("env"),Var("rcs")]),Op("MatchString",[Var("x")]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Match",[Op("Int",[Var("n")])]),Var("env"),Var("rcs")]),Op("MatchInt",[Var("n")]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Match",[Op("Real",[Var("n")])]),Var("env"),Var("rcs")]),Op("MatchReal",[Var("n")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("Str",[Var("x")])]),Var("env"),Var("rcs")]),Op("BuildStr",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("Int",[Var("x")])]),Var("env"),Var("rcs")]),Op("BuildInt",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("Real",[Var("x")])]),Var("env"),Var("rcs")]),Op("BuildReal",[Var("x")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("Var",[Var("x")])]),Var("env"),Var("rcs")]),Var("ins"),Where(Seq(AM(BA(Call(SVar("io-index"),[]),Op("TCons",[Var("x"),Op("TCons",[Var("env"),Op("TNil",[])])])),Op("TCons",[Var("i"),Op("TCons",[Var("o"),Op("TNil",[])])])),LChoice(Seq(BA(Call(SVar("eq"),[]),Op("TCons",[Var("i"),Op("TCons",[Var("rcs"),Op("TNil",[])])])),Build(Op("BuildVar",[Var("o")]))),AM(Build(Op("BuildVard",[Var("i"),Var("o")])),Var("ins"))))))),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("BuildDefault",[Var("t")])]),Var("env"),Var("rcs")]),Op("Instr",[Op("Build",[Var("t")]),Var("env"),Var("rcs")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("Op",[Var("f"),Var("ts")])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("BuildKids",[Var("ts"),Var("env"),Var("rcs")]),Op("Cons",[Op("BuildFun",[Var("f"),App(Call(SVar("length"),[]),Var("ts"))]),Op("Nil",[])])])]),Id)),RDef("C",[],Rule(Op("BuildKids",[Op("Nil",[]),Var("env"),Var("rcs")]),Op("Block",[Op("Nil",[])]),Id)),RDef("C",[],Rule(Op("BuildKids",[Op("Cons",[Var("t"),Var("ts")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Op("Build",[Var("t")]),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpush",[]),Op("Cons",[Op("BuildKids",[Var("ts"),Var("env"),Var("rcs")]),Op("Nil",[])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("Build",[Op("App",[Var("s"),Var("t")])]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Instr",[Op("Build",[Var("t")]),Var("env"),Var("rcs")]),Op("Cons",[Op("Instr",[Var("s"),Var("env"),Var("rcs")]),Op("Nil",[])])])]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Tpop",[]),Var("env"),Var("rcs")]),Op("Tpop",[]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Tpush",[]),Var("env"),Var("rcs")]),Op("Tpush",[]),Id)),RDef("C'",[],Rule(Op("Instr",[Op("Arg",[Var("n")]),Var("env"),Var("rcs")]),Op("Arg",[Var("n")]),Id)),RDef("C",[],Rule(Op("Instr",[Op("GetAnn",[]),Var("env"),Var("rcs")]),Op("GetAnn",[]),Id)),RDef("C",[],Rule(Op("Instr",[Op("AnnBuild",[Var("t1"),Var("t2")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tpush",[]),Op("Cons",[Op("Instr",[Op("Build",[Var("t1")]),Var("env"),Var("rcs")]),Op("Cons",[Op("Tpush",[]),Op("Cons",[Op("Instr",[Op("Build",[Var("t2")]),Var("env"),Var("rcs")]),Op("Cons",[Op("SetAnn",[]),Op("Nil",[])])])])])])]),Id)),RDef("C",[],Rule(Op("Instr",[Op("AnnRemove",[Var("t")]),Var("env"),Var("rcs")]),Op("Block",[Op("Cons",[Op("Tpush",[]),Op("Cons",[Op("Instr",[Op("Build",[Var("t")]),Var("env"),Var("rcs")]),Op("Cons",[Op("RemoveAnn",[]),Op("Nil",[])])])])]),Id)),RDef("MkInstr",[],Rule(Var("s"),Op("Instr",[Var("s"),Op("Nil",[]),Int(0)]),Id)),RDef("Assemble",[],Rule(Var("is"),Op("Block",[Op("Cons",[Op("Rpush",[Var("ready")]),Op("Cons",[Op("Goto",[Str("main")]),Op("Cons",[Op("Block",[Var("is")]),Op("Cons",[Op("Label",[Var("ready")]),Op("Nil",[])])])])])]),Where(AM(Call(SVar("new"),[]),Var("ready")))))]),Strategies([SDef("dtime",[],Prim("_ST_dtime")),SDef("print",[],Prim("_ST_print")),SDef("printnl",[],Prim("_ST_printnl")),SDef("printascii",[],Prim("_ST_printascii")),SDef("file-exists",[],Prim("_ST_file_exists")),SDef("open-file",[],Prim("_ST_open_file")),SDef("append-file",[],Prim("_ST_append_file")),SDef("close-file",[],Prim("_ST_close_file")),SDef("ReadFromFile",[],Prim("_ST_ReadFromFile")),SDef("WriteToBinaryFile",[],Prim("_ST_WriteToBinaryFile")),SDef("WriteToTextFile",[],Prim("_ST_WriteToTextFile")),SDef("print-stack",[],Prim("_ST_PrintStack")),SDef("debug",[],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)))]),Call(SVar("printnl"),[])))),SDef("debug",["msg"],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[App(Call(SVar("msg"),[]),Op("TNil",[])),Op("Cons",[Var("x"),Op("Nil",[])])]),Id)))]),Call(SVar("printnl"),[])))),SDef("trace",["msg","s"],Seq(Call(SVar("debug"),[Call(SVar("msg"),[])]),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("debug"),[Build(Str("succeeded: "))])),Call(SVar("debug"),[Build(Str("failed: "))])))),SDef("error",[],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Id]),Call(SVar("printnl"),[])))),SDef("fatal-error",[],Where(Seq(Call(SVar("error"),[]),BA(Call(SVar("exit"),[]),Int(1))))),SDef("printchar",[],Where(Seq(Call(SVar("split"),[Build(Op("stdout",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)))]),Call(SVar("printascii"),[])))),SDef("printstring",[],Where(Seq(Call(SVar("split"),[Build(Op("stdout",[])),Scope(["x"],SRule(Rule(Var("x"),Op("Cons",[Var("x"),Op("Nil",[])]),Id)))]),Call(SVar("print"),[])))),SDef("obsolete",["msg"],Where(BA(Call(SVar("debug"),[Call(SVar("msg"),[])]),Str(": obsolete library strategy")))),SDef("stdio",["s"],LChoice(Seq(BA(Call(SVar("ReadFromFile"),[]),Op("stdin",[])),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Op("stdout",[])),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])])))),SDef("stdioO",["s"],LChoice(Seq(Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Op("stdin",[]))]),Seq(Call(SVar("s"),[]),Seq(Call(SVar("split"),[Build(Op("stdout",[])),Id]),Call(SVar("WriteToTextFile"),[])))),BA(Call(SVar("fatal-error"),[]),Op("Cons",[Str("** rewriting failed"),Op("Nil",[])])))),SDef("flatten-blocks",[],Rec("x",Call(SVar("try"),[Choice(Call(SVar("Nil"),[]),Choice(Call(SVar("Block"),[Call(SVar("x"),[])]),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Rec("y",Call(SVar("try"),[Choice(Call(SVar("BlkFlat1"),[]),Seq(Call(SVar("BlkFlat2"),[]),Seq(Call(SVar("Cons"),[Id,Call(SVar("y"),[])]),Call(SVar("y"),[]))))])))))]))),SDef("ph",[],Rec("y",Call(SVar("try"),[Choice(Seq(Call(SVar("PH"),[]),Call(SVar("y"),[])),Choice(Call(SVar("SbsU"),[]),Seq(Call(SVar("Up"),[]),LChoice(Call(SVar("SbsU"),[]),Call(SVar("Cons"),[Id,Call(SVar("y"),[])])))))]))),SDef("phdown",[],Call(SVar("repeat"),[Choice(Call(SVar("PH"),[]),Choice(Call(SVar("DblLbls"),[]),LChoice(Call(SVar("SbsD"),[]),Choice(Call(SVar("UnSbsD"),[]),Call(SVar("Down"),[])))))])),SDef("phup",[],Call(SVar("repeat"),[Choice(Call(SVar("PH"),[]),LChoice(Call(SVar("SbsU"),[]),Rec("x",Seq(Call(SVar("Up"),[]),Call(SVar("Cons"),[Id,Call(SVar("try"),[Call(SVar("x"),[])])])))))])),SDef("peephole'",[],Call(SVar("Block"),[Seq(Call(SVar("listbu"),[Call(SVar("ph"),[])]),Seq(Call(SVar("repeat"),[Call(SVar("UnSbsU"),[])]),Call(SVar("listtd"),[Call(SVar("try"),[LChoice(Call(SVar("SbsD"),[]),LChoice(Call(SVar("UnSbsD"),[]),Call(SVar("Down"),[])))])])))])),SDef("peephole'",[],Call(SVar("Block"),[Seq(Call(SVar("listdu2"),[Call(SVar("phdown"),[]),Call(SVar("phup"),[])]),Call(SVar("repeat"),[Call(SVar("UnSbsU"),[])]))])),SDef("peephole",[],Call(SVar("try"),[Call(SVar("Block"),[Call(SVar("listdu"),[Call(SVar("repeat"),[Call(SVar("PH"),[])])])])])),SDef("ElimId",[],Choice(Call(SVar("I1"),[]),Choice(Call(SVar("I2"),[]),Choice(Call(SVar("I3"),[]),Choice(Call(SVar("I4"),[]),Choice(Call(SVar("I5"),[]),Choice(Call(SVar("I6"),[]),Choice(Call(SVar("I7"),[]),Choice(Call(SVar("I8"),[]),Choice(Call(SVar("I9"),[]),Choice(Call(SVar("I10"),[]),Choice(Call(SVar("I11"),[]),Choice(Call(SVar("I12"),[]),Choice(Call(SVar("I13"),[]),Choice(Call(SVar("I14"),[]),Choice(Call(SVar("I15"),[]),Call(SVar("I16"),[]))))))))))))))))),SDef("F",[],Choice(Call(SVar("F1"),[]),Choice(Call(SVar("F2"),[]),Choice(Call(SVar("F3"),[]),Choice(Call(SVar("F4"),[]),Choice(Call(SVar("F5"),[]),Choice(Call(SVar("F6"),[]),Choice(Call(SVar("F7"),[]),Choice(Call(SVar("F8"),[]),Choice(Call(SVar("F9"),[]),Choice(Call(SVar("F10"),[]),Choice(Call(SVar("F11"),[]),Choice(Call(SVar("F12"),[]),Choice(Call(SVar("F13"),[]),Choice(Call(SVar("F14"),[]),Call(SVar("F15"),[])))))))))))))))),SDef("Repeat",["s1","s2"],Scope(["x"],Call(SVar("Rec"),[AM(Id,Var("x")),Call(SVar("LChoice"),[Seq(Call(SVar("repeat"),[Call(SVar("LAss"),[])]),Call(SVar("Seq"),[Seq(Not(Call(SVar("oncetd"),[Call(SVar("SVar"),[AM(Id,Var("x"))])])),Call(SVar("s1"),[])),Call(SVar("Call"),[Call(SVar("SVar"),[AM(Id,Var("x"))]),Call(SVar("Nil"),[])])])),Seq(Not(Call(SVar("oncetd"),[Call(SVar("SVar"),[AM(Id,Var("x"))])])),Call(SVar("s2"),[]))])]))),SDef("Repeat",["s1","s2"],Scope(["x","s1'","str"],Call(SVar("Rec"),[AM(Id,Var("x")),Call(SVar("LChoice"),[Seq(Call(SVar("repeat"),[Call(SVar("LAss"),[])]),Seq(AM(Id,Op("Seq",[Var("s1'"),Op("Seq",[Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])]),Op("Countrule",[Var("str")])])])),Seq(Build(Op("Seq",[Op("Seq",[Var("s1'"),Op("CountRule",[Var("str")])]),Op("Call",[Op("SVar",[Var("x")]),Op("Nil",[])])])),Call(SVar("Seq"),[Seq(Not(Call(SVar("oncetd"),[Call(SVar("SVar"),[AM(Id,Var("x"))])])),Call(SVar("s1"),[])),Id])))),Seq(Not(Call(SVar("oncetd"),[Call(SVar("SVar"),[AM(Id,Var("x"))])])),Call(SVar("s2"),[]))])]))),SDef("IsMatch",[],Not(Call(SVar("oncetd"),[Call(SVar("Build"),[Id])]))),SDef("Oncetd",["s"],Scope(["x"],Call(SVar("Rec"),[AM(Id,Var("x")),Call(SVar("LChoice"),[Call(SVar("s"),[]),Call(SVar("One"),[Call(SVar("Call"),[Call(SVar("SVar"),[AM(Id,Var("x"))]),Call(SVar("Nil"),[])])])])]))),SDef("Cspecial",[],Call(SVar("CsOncetd"),[])),SDef("Fetch",["s"],Scope(["x"],Call(SVar("Rec"),[AM(Id,Var("x")),Call(SVar("LChoice"),[Call(SVar("Cong"),[Match(Str("Cons")),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("Cons"),[Call(SVar("Id"),[]),Call(SVar("Nil"),[])])])]),Call(SVar("Cong"),[Match(Str("Cons")),Call(SVar("Cons"),[Call(SVar("Id"),[]),Call(SVar("Cons"),[Call(SVar("Call"),[Call(SVar("SVar"),[AM(Id,Var("x"))]),Call(SVar("Nil"),[])]),Call(SVar("Nil"),[])])])])])]))),SDef("Fetch",["s"],Scope(["x"],Call(SVar("Rec"),[AM(Id,Var("x")),Call(SVar("LChoice"),[Call(SVar("Seq"),[Call(SVar("Cong"),[Match(Str("Cons")),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("Cons"),[Call(SVar("Id"),[]),Call(SVar("Nil"),[])])])]),Call(SVar("CountRule"),[Match(Str("Cons"))])]),Call(SVar("Seq"),[Call(SVar("Cong"),[Match(Str("Cons")),Call(SVar("Cons"),[Call(SVar("Id"),[]),Call(SVar("Cons"),[Call(SVar("Call"),[Call(SVar("SVar"),[AM(Id,Var("x"))]),Call(SVar("Nil"),[])]),Call(SVar("Nil"),[])])])]),Call(SVar("CountRule"),[Match(Str("Cons"))])])])]))),SDef("Cspecial",[],Call(SVar("CsFetch"),[])),SDef("free-vars",["getvars","boundvars"],Rec("x",LChoice(Call(SVar("getvars"),[]),Seq(Call(SVar("split"),[Call(SVar("collect-kids"),[Call(SVar("x"),[])]),LChoice(Call(SVar("boundvars"),[]),Build(Op("Nil",[])))]),Call(SVar("diff"),[]))))),SDef("free-vars",["getvars","boundvars","boundin"],Rec("x",LChoice(Call(SVar("getvars"),[]),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("free-vars",["getvars","boundvars","boundin","eq"],Rec("x",LChoice(Call(SVar("getvars"),[]),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[Call(SVar("eq"),[])])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("free-vars2",["getvars","boundvars"],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),Seq(Call(SVar("split"),[Call(SVar("collect-kids"),[Call(SVar("x"),[])]),LChoice(Call(SVar("boundvars"),[]),Build(Op("Nil",[])))]),Call(SVar("diff"),[]))]),Call(SVar("union"),[])))),SDef("free-vars2",["getvars","boundvars","boundin"],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),LChoice(Seq(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[])),Call(SVar("x"),[]),Build(Op("Nil",[]))]))),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))]),Call(SVar("union"),[])))),SDef("free-vars2",["getvars","boundvars","boundin","eq"],Rec("x",Seq(Call(SVar("split"),[LChoice(Call(SVar("getvars"),[]),Build(Op("Nil",[]))),LChoice(Scope(["vs"],Seq(Where(AM(Call(SVar("boundvars"),[]),Var("vs"))),Seq(Call(SVar("boundin"),[Seq(Call(SVar("split"),[Call(SVar("x"),[]),Build(Var("vs"))]),Call(SVar("diff"),[Call(SVar("eq"),[])])),Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])))),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))]),Call(SVar("union"),[])))),SDef("unify",["isvar"],Call(SVar("for"),[Scope(["pairs"],SRule(Rule(Var("pairs"),Op("TCons",[Var("pairs"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id))),Scope(["sbs"],SRule(Rule(Op("TCons",[Op("Nil",[]),Op("TCons",[Var("sbs"),Op("TNil",[])])]),Var("sbs"),Id))),Choice(Call(SVar("UfIdem"),[]),Choice(Call(SVar("UfVar"),[Call(SVar("isvar"),[])]),LChoice(Call(SVar("UfSwap"),[Call(SVar("isvar"),[])]),Call(SVar("UfDecompose"),[]))))])),SDef("create-table",[],Prim("_ST_create_table")),SDef("destroy-table",[],Prim("_ST_destroy_table")),SDef("table-put",[],Prim("_ST_table_put")),SDef("table-get",[],Prim("_ST_table_get")),SDef("table-remove",[],Prim("_ST_table_remove")),SDef("table-keys",[],Prim("_ST_table_keys")),SDef("table-getlist",[],Seq(AM(Id,Var("name")),Seq(Call(SVar("table-keys"),[]),Call(SVar("map"),[Scope(["x"],SRule(Rule(Var("x"),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("table-get"),[]),Op("TCons",[Var("name"),Op("TCons",[Var("x"),Op("TNil",[])])])),Op("TNil",[])])]),Id)))])))),SDef("table-putlist",[],Seq(AM(Id,Op("TCons",[Var("name"),Op("TCons",[Var("list"),Op("TNil",[])])])),BA(Call(SVar("map"),[Scope(["x","y"],Seq(AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])),BA(Call(SVar("table-put"),[]),Op("TCons",[Var("name"),Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])])]))))]),Var("list")))),SDef("exit",[],Prim("_ST_exit")),SDef("call",[],Prim("_ST_call")),SDef("call-noisy",[],Prim("_ST_call_noisy")),SDef("get-pid",[],Prim("_ST_get_pid")),SDef("rm-files",[],Seq(AM(Id,Var("files")),Where(BA(Call(SVar("call"),[]),Op("TCons",[Str("rm"),Op("TCons",[Op("Cons",[Str("-f"),Var("files")]),Op("TNil",[])])]))))),SDef("pipe",["c","suf2"],Call(SVar("pipe'"),[Call(SVar("c"),[]),Call(SVar("suf2"),[]),Build(Op("Nil",[]))])),SDef("pipe'",["c","suf2","args"],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf2"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Where(BA(Call(SVar("call"),[]),Op("TCons",[App(Call(SVar("c"),[]),Op("TNil",[])),Op("TCons",[App(Call(SVar("conc"),[]),Op("TCons",[App(Call(SVar("args"),[]),Op("TNil",[])),Op("TCons",[Op("Cons",[Str("-i"),Op("Cons",[Var("in"),Op("Cons",[Str("-o"),Op("Cons",[Var("out"),Op("Nil",[])])])])]),Op("TNil",[])])])),Op("TNil",[])])]))))))),SDef("transform-file",["s","suf"],Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("in"))),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("suf"),[]),Call(SVar("TNil"),[])])]),Seq(Where(AM(Call(SVar("conc-strings"),[]),Var("out"))),Seq(Where(AM(BA(Seq(Call(SVar("ReadFromFile"),[]),Call(SVar("s"),[])),Var("in")),Var("trm"))),Where(BA(Call(SVar("WriteToBinaryFile"),[]),Op("TCons",[Var("out"),Op("TCons",[Var("trm"),Op("TNil",[])])])))))))),SDef("parse-options",["s"],Call(SVar("Cons"),[Scope(["x"],SRule(Rule(Var("x"),Op("Program",[Var("x")]),Id))),Rec("x",LChoice(Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))),Call(SVar("UndefinedOption"),[])))])),SDef("defined-option",["s"],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("option-defined",["s"],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("arg-option-value",["s"],Call(SVar("fetch"),[Call(SVar("s"),[])])),SDef("iowrap",["strat"],Call(SVar("iowrapO"),[Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("strat"),[]),Call(SVar("TNil"),[])])]),Fail])),SDef("iowrapO",["strat","extra-options"],Seq(Call(SVar("parse-options"),[LChoice(Call(SVar("extra-options"),[]),Call(SVar("io-options"),[]))]),LChoice(Call(SVar("need-help"),[]),LChoice(Seq(Call(SVar("input-file'"),[]),Seq(Call(SVar("apply-strategy"),[Call(SVar("strat"),[])]),Seq(Call(SVar("output-file'"),[]),Call(SVar("report-success"),[])))),Call(SVar("report-failure"),[]))))),SDef("io-options",[],Choice(Call(SVar("Option"),[Match(Str("-S")),Build(Op("Silent",[]))]),Choice(Call(SVar("Option"),[Match(Str("--silent")),Build(Op("Silent",[]))]),Choice(Call(SVar("Option"),[Match(Str("--verbose")),Build(Op("Verbose",[]))]),Choice(Call(SVar("Option"),[Match(Str("-v")),Build(Op("Version",[]))]),Choice(Call(SVar("Option"),[Match(Str("--version")),Build(Op("Version",[]))]),Choice(Call(SVar("ArgOption"),[Match(Str("@version")),Scope(["x"],SRule(Rule(Var("x"),Op("DeclVersion",[Var("x")]),Id)))]),Choice(Call(SVar("ArgOption"),[Match(Str("-i")),Scope(["x"],SRule(Rule(Var("x"),Op("Input",[Var("x")]),Id)))]),Choice(Call(SVar("ArgOption"),[Match(Str("--input")),Scope(["x"],SRule(Rule(Var("x"),Op("Input",[Var("x")]),Id)))]),Choice(Call(SVar("ArgOption"),[Match(Str("-o")),Scope(["x"],SRule(Rule(Var("x"),Op("Output",[Var("x")]),Id)))]),Choice(Call(SVar("ArgOption"),[Match(Str("--output")),Scope(["x"],SRule(Rule(Var("x"),Op("Output",[Var("x")]),Id)))]),Choice(Call(SVar("Option"),[Match(Str("-b")),Build(Op("Binary",[]))]),Choice(Call(SVar("Option"),[Match(Str("-s")),Build(Op("Statistics",[]))]),Choice(Call(SVar("Option"),[Match(Str("--help")),Build(Op("Help",[]))]),Choice(Call(SVar("Option"),[Match(Str("-h")),Build(Op("Help",[]))]),Call(SVar("Option"),[Match(Str("-?")),Build(Op("Help",[]))])))))))))))))))),SDef("usage'",[],Where(Seq(Call(SVar("option-defined"),[AM(Id,Op("Program",[Var("prog")]))]),Seq(BA(Call(SVar("printnl"),[]),Op("TCons",[Op("stderr",[]),Op("TCons",[Op("Cons",[Str("usage : "),Op("Cons",[Var("prog"),Op("Cons",[Str(" [-S] [-i file] [-o file] [-b] [-s] [--help|-h|-?]"),Op("Nil",[])])])]),Op("TNil",[])])])),BA(Call(SVar("exit"),[]),Int(1)))))),SDef("need-help",[],Seq(Call(SVar("option-defined"),[Choice(Call(SVar("Help"),[]),Call(SVar("Undefined"),[Id]))]),Call(SVar("usage'"),[]))),SDef("need-help",["u"],Seq(Call(SVar("option-defined"),[Choice(Call(SVar("Help"),[]),Choice(Call(SVar("Undefined"),[Id]),Call(SVar("Version"),[])))]),Call(SVar("u"),[]))),SDef("input-file'",[],Seq(LChoice(Call(SVar("option-defined"),[AM(Id,Op("Input",[Var("infile")]))]),AM(Build(Op("stdin",[])),Var("infile"))),Call(SVar("split"),[Id,BA(Call(SVar("ReadFromFile"),[]),Var("infile"))]))),SDef("apply-strategy",["strat"],Seq(Where(Call(SVar("dtime"),[])),Seq(Call(SVar("strat"),[]),Seq(Where(AM(Call(SVar("dtime"),[]),Var("runtime"))),Scope(["options","trm"],SRule(Rule(Op("TCons",[Var("options"),Op("TCons",[Var("trm"),Op("TNil",[])])]),Op("TCons",[Op("Cons",[Op("Runtime",[Var("runtime")]),Var("options")]),Op("TCons",[Var("trm"),Op("TNil",[])])]),Id))))))),SDef("output-file'",[],Seq(Call(SVar("TCons"),[LChoice(Call(SVar("option-defined"),[AM(Id,Op("Output",[Var("outfile")]))]),AM(Build(Op("stdout",[])),Var("outfile"))),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("split"),[Build(Var("outfile")),Id]),Call(SVar("TNil"),[])])]),LChoice(Call(SVar("TCons"),[Call(SVar("option-defined"),[AM(Id,Op("Binary",[]))]),Call(SVar("TCons"),[Call(SVar("WriteToBinaryFile"),[]),Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("WriteToTextFile"),[]),Call(SVar("TNil"),[])])]))))),SDef("report-success",[],Seq(Where(Call(SVar("try"),[Seq(Call(SVar("TCons"),[Not(Call(SVar("option-defined"),[AM(Id,Op("Silent",[]))])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("option-defined"),[AM(Id,Op("Runtime",[Var("runtime")]))]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("option-defined"),[AM(Id,Op("Program",[Var("prog")]))]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),BA(Call(SVar("printnl"),[]),Op("TCons",[Op("stderr",[]),Op("TCons",[Op("Cons",[Var("prog"),Op("Cons",[Str(" ("),Op("Cons",[Var("runtime"),Op("Cons",[Str(" secs)"),Op("Nil",[])])])])]),Op("TNil",[])])])))))])),BA(Call(SVar("exit"),[]),Int(0)))),SDef("report-failure",[],Seq(BA(Call(SVar("printnl"),[]),Op("TCons",[Op("stderr",[]),Op("TCons",[Op("Cons",[Str("rewriting failed"),Op("Nil",[])]),Op("TNil",[])])])),BA(Call(SVar("exit"),[]),Int(1)))),SDef("memo-init",[],Call(SVar("create-table"),[])),SDef("memo-purge",[],Call(SVar("destroy-table"),[])),SDef("find-in-path",["mkpath"],LChoice(Call(SVar("file-exists"),[]),LChoice(Seq(Call(SVar("split"),[Id,Call(SVar("mkpath"),[])]),Call(SVar("find-in-path"),[])),Scope(["x"],SRule(Rule(Var("x"),App(Call(SVar("fatal-error"),[]),Op("Cons",[Str("no such file: "),Op("Cons",[Var("x"),Op("Nil",[])])])),Id)))))),SDef("find-file",["mkpath","ext"],Seq(Call(SVar("guarantee-extension"),[Call(SVar("ext"),[])]),Call(SVar("find-in-path"),[Call(SVar("mkpath"),[])]))),SDef("is-int",[],Prim("_ST_is_int")),SDef("minus",[],Prim("_ST_minus")),SDef("plus",[],Prim("_ST_plus")),SDef("add",[],Prim("_ST_add")),SDef("subt",[],Prim("_ST_subt")),SDef("mul",[],Prim("_ST_mul")),SDef("div",[],Prim("_ST_div")),SDef("mod",[],Prim("_ST_mod")),SDef("geq",[],Prim("_ST_geq")),SDef("gt",[],Prim("_ST_gt")),SDef("lt",[],Not(Call(SVar("geq"),[]))),SDef("leq",[],Not(Call(SVar("gt"),[]))),SDef("max",[],Prim("_ST_max")),SDef("min",[],Prim("_ST_min")),SDef("int",[],Prim("_ST_int")),SDef("sum",[],Call(SVar("foldr"),[Build(Int(0)),Call(SVar("add"),[])])),SDef("average",[],Seq(Call(SVar("split"),[Call(SVar("sum"),[]),Call(SVar("length"),[])]),Call(SVar("div"),[]))),SDef("list-min",[],Call(SVar("list-accum"),[Call(SVar("min"),[])])),SDef("list-max",[],Call(SVar("list-accum"),[Call(SVar("max"),[])])),SDef("list-accum",["s"],Seq(Call(SVar("split"),[Call(SVar("Tl"),[]),Call(SVar("Hd"),[])]),Call(SVar("foldl"),[Call(SVar("s"),[])]))),SDef("add-lists",[],Call(SVar("list-accum"),[Call(SVar("zip"),[LChoice(Call(SVar("add"),[]),Build(Str("")))])])),SDef("averages",[],Scope(["len"],Seq(Where(AM(Call(SVar("length"),[]),Var("len"))),Seq(Call(SVar("add-lists"),[]),Call(SVar("map"),[Call(SVar("try"),[Call(SVar("sect"),[Call(SVar("div"),[]),Build(Var("len"))])])]))))),SDef("round-list",[],Call(SVar("map"),[LChoice(Test(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(100))])),Call(SVar("int"),[]))])),SDef("mkterm",[],Prim("_ST_mkterm")),SDef("explode-term",[],Prim("_ST_explode_term")),SDef("address-lt",[],Prim("_ST_address_lt")),SDef("address",[],Prim("_ST_address")),SDef("new",[],Prim("_ST_new")),SDef("is-string",[],Prim("_ST_is_string")),SDef("implode-string",[],Prim("_ST_implode_string")),SDef("explode-string",[],Prim("_ST_explode_string")),SDef("conc-strings",[],Seq(Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TCons"),[Call(SVar("explode-string"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("conc"),[]),Call(SVar("implode-string"),[])))),SDef("concat-strings",[],Seq(Call(SVar("map"),[Call(SVar("explode-string"),[])]),Seq(Call(SVar("concat"),[]),Call(SVar("implode-string"),[])))),SDef("int-to-string",[],Seq(Rec("x",Seq(Call(SVar("split"),[Seq(Call(SVar("sect"),[Call(SVar("mod"),[]),Build(Int(10))]),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(48))])),Seq(Call(SVar("sect"),[Call(SVar("div"),[]),Build(Int(10))]),Call(SVar("int"),[]))]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[LChoice(Seq(AM(Id,Int(0)),Build(Op("Nil",[]))),Call(SVar("x"),[])),Call(SVar("TNil"),[])])]),Call(SVar("MkCons"),[])))),Seq(Call(SVar("reverse"),[]),Call(SVar("implode-string"),[])))),SDef("string-to-int",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Call(SVar("S2I1"),[]))))),SDef("string-to-num",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("split"),[Build(Int(0)),Id]),Seq(Call(SVar("repeat"),[Call(SVar("S2I2"),[])]),Choice(Call(SVar("S2I1"),[]),Seq(Call(SVar("S2D0"),[]),Seq(Call(SVar("repeat"),[Call(SVar("S2D2"),[])]),Call(SVar("S2D1"),[])))))))),SDef("lower-case",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("map"),[Call(SVar("lc"),[])]),Call(SVar("implode-string"),[])))),SDef("lc",[],Call(SVar("try"),[Seq(Where(Call(SVar("sect"),[Call(SVar("geq"),[]),Build(Int(65))])),Seq(Where(Call(SVar("sect"),[Call(SVar("leq"),[]),Build(Int(90))])),Call(SVar("sect"),[Call(SVar("add"),[]),Build(Int(32))])))])),SDef("split-at-space",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("SplitInit"),[]),Rec("x",LChoice(Call(SVar("SplitExit"),[]),Seq(Call(SVar("SplitNext"),[]),Call(SVar("x"),[]))))))),SDef("basename",[],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(AM(Id,Op("Cons",[Int(46),Wld])),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[])))),SDef("basename",["ext"],Seq(Call(SVar("explode-string"),[]),Seq(Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Cons"),[Match(Int(46)),Call(SVar("ext"),[])]),Build(Op("Nil",[])))))]),Call(SVar("implode-string"),[])))),SDef("guarantee-extension",["ext"],Seq(Call(SVar("basename"),[]),Seq(Call(SVar("split"),[Id,BA(Call(SVar("ext"),[]),Op("TNil",[]))]),Call(SVar("add-extension"),[])))),SDef("option",["s"],Choice(Call(SVar("None"),[]),Call(SVar("Some"),[Call(SVar("s"),[])]))),SDef("reduce",["s"],Call(SVar("repeat"),[Rec("x",Choice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))])),SDef("outermost",["s"],Call(SVar("repeat"),[Call(SVar("oncetd"),[Call(SVar("s"),[])])])),SDef("innermost",["s"],Call(SVar("repeat"),[Call(SVar("oncebu"),[Call(SVar("s"),[])])])),SDef("innermost'",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Id)))),SDef("innermost''",["s"],Scope(["mark"],Seq(Where(AM(Call(SVar("new"),[]),Var("mark"))),Rec("x",LChoice(AnnMatch(Op("NF",[]),Var("mark")),Seq(All(Call(SVar("x"),[])),LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),AnnBuild(Op("NF",[]),Var("mark"))))))))),SDef("pseudo-innermost3",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Rec("y",Call(SVar("try"),[Seq(Call(SVar("s"),[]),Seq(All(Seq(All(Seq(All(Call(SVar("y"),[])),Call(SVar("y"),[]))),Call(SVar("y"),[]))),Call(SVar("y"),[])))]))))),SDef("repeat",["s","c"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Call(SVar("x"),[])),Call(SVar("c"),[])))),SDef("repeat",["s"],Call(SVar("repeat"),[Call(SVar("s"),[]),Id])),SDef("repeat1",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("x"),[]),Call(SVar("c"),[]))))),SDef("repeat1",["s"],Call(SVar("repeat1"),[Call(SVar("s"),[]),Id])),SDef("repeat-until",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("c"),[]),Call(SVar("x"),[]))))),SDef("while",["c","s"],Rec("x",Call(SVar("try"),[Seq(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[])))]))),SDef("do-while",["s","c"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("x"),[]))])))),SDef("while-not",["c","s"],Rec("x",LChoice(Call(SVar("c"),[]),Seq(Call(SVar("s"),[]),Call(SVar("x"),[]))))),SDef("for",["i","c","s"],Seq(Call(SVar("i"),[]),Call(SVar("repeat-until"),[Call(SVar("s"),[]),Call(SVar("c"),[])]))),SDef("pat-to-aut",[],Seq(Call(SVar("AutInit"),[]),Call(SVar("topdown"),[Call(SVar("repeat"),[Choice(Call(SVar("Aut1"),[]),Choice(Call(SVar("Aut2"),[]),Choice(Call(SVar("Aut3"),[]),Choice(Call(SVar("Aut4a"),[]),Choice(Call(SVar("Aut4"),[]),Choice(Call(SVar("Aut5"),[]),Choice(Call(SVar("Aut6"),[]),Choice(Call(SVar("Aut7"),[]),Call(SVar("Aut8"),[])))))))))])]))),SDef("mk-automata",[],Call(SVar("map"),[Call(SVar("pat-to-aut"),[])])),SDef("opt-automaton",[],Call(SVar("downup"),[Call(SVar("repeat"),[Call(SVar("O"),[])])])),SDef("merge",[],Seq(Call(SVar("mk-merge"),[]),Call(SVar("topdown"),[Call(SVar("repeat"),[LChoice(Call(SVar("Mrg"),[]),LChoice(Call(SVar("MrgInsert1"),[]),LChoice(Call(SVar("MrgInsert2"),[]),Call(SVar("MrgInsert3"),[]))))])]))),SDef("merge-automata",[],Call(SVar("foldr"),[Build(Op("Accept",[Op("Fail",[])])),Call(SVar("merge"),[])])),SDef("choices-to-list",[],Seq(Call(SVar("choicemap"),[Scope(["x"],Seq(AM(Id,Var("x")),Build(Op("Cons",[Var("x"),Op("Nil",[])]))))]),Call(SVar("choicebu"),[Call(SVar("C2L"),[])]))),SDef("mk-automaton",[],Seq(Call(SVar("choices-to-list"),[]),Seq(Call(SVar("mk-automata"),[]),Call(SVar("merge-automata"),[])))),SDef("env-alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("dist"),[Call(SVar("x"),[])])))),SDef("env-topdown",["s","skip"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),Call(SVar("dist"),[Call(SVar("x"),[])]))))),SDef("env-bottomup",["s"],Rec("x",Seq(Call(SVar("split"),[Call(SVar("dist"),[Call(SVar("x"),[])]),Call(SVar("Snd"),[])]),Call(SVar("s"),[])))),SDef("rename",["isvar","bndvars","boundin","paste"],Seq(Scope(["t"],SRule(Rule(Var("t"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])]),Id))),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("boundin"),[]),Call(SVar("x"),[])])))])))),SDef("substitute",["isvar","bndvars","boundin","paste"],Seq(AM(Id,Op("TCons",[Var("sbs"),Op("TCons",[Var("t"),Op("TNil",[])])])),Seq(Build(Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])),Rec("x",Call(SVar("env-alltd"),[LChoice(Call(SVar("RnVar"),[Call(SVar("isvar"),[])]),LChoice(Call(SVar("SubsVar"),[Call(SVar("isvar"),[]),Build(Var("sbs"))]),Seq(Call(SVar("RnBinding"),[Call(SVar("bndvars"),[]),Call(SVar("paste"),[])]),Call(SVar("DistBinding"),[Call(SVar("boundin"),[]),Call(SVar("x"),[])]))))]))))),SDef("subs'",["isvar","mklst"],Seq(Call(SVar("obsolete"),[Match(Str("subs'/2"))]),Call(SVar("subs"),[Call(SVar("isvar"),[]),Call(SVar("mklst"),[])]))),SDef("subs",["isvar","mklst"],Seq(Where(AM(Call(SVar("mklst"),[]),Var("lst"))),Call(SVar("alltd"),[Seq(Call(SVar("isvar"),[]),Scope(["z"],Scope(["x"],SRule(Rule(Var("x"),Var("z"),Where(BA(Call(SVar("fetch"),[AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("z"),Op("TNil",[])])]))]),Var("lst"))))))))]))),SDef("subs_proper",["isvar","ren"],Seq(AM(Id,Op("TCons",[Var("xs"),Op("TCons",[Var("ts"),Op("TCons",[Var("t"),Op("TNil",[])])])])),Seq(AM(BA(Call(SVar("zip"),[Id]),Op("TCons",[Var("xs"),Op("TCons",[Var("ts"),Op("TNil",[])])])),Var("lst")),BA(Call(SVar("alltd"),[Seq(Call(SVar("isvar"),[]),Scope(["x","z"],SRule(Rule(Var("x"),App(Call(SVar("ren"),[]),Var("z")),Where(BA(Call(SVar("fetch"),[AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("z"),Op("TNil",[])])]))]),Var("lst")))))))]),Var("t"))))),SDef("subs_proper'",["isvar","ren","mklst"],Seq(Where(AM(Call(SVar("mklst"),[]),Var("lst"))),Call(SVar("alltd"),[Seq(Call(SVar("isvar"),[]),Scope(["x","z"],SRule(Rule(Var("x"),App(Call(SVar("ren"),[]),Var("z")),Where(BA(Call(SVar("fetch"),[AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("z"),Op("TNil",[])])]))]),Var("lst")))))))]))),SDef("filter",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("filter-gen",["pred","cont"],Rec("x",Choice(Call(SVar("Nil"),[]),LChoice(Seq(Call(SVar("pred"),[]),Call(SVar("cont"),[Call(SVar("x"),[])])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[])))))),SDef("skip1",["s"],Call(SVar("at_tail"),[Call(SVar("s"),[])])),SDef("skip2",["s"],Call(SVar("at_tail"),[Call(SVar("at_tail"),[Call(SVar("s"),[])])])),SDef("filter-option-args",["flag"],Call(SVar("filter-gen"),[Seq(Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("Tl"),[])),Call(SVar("skip1"),[])])),SDef("filter-options",["flag"],Call(SVar("filter-gen"),[Call(SVar("Cons"),[Call(SVar("flag"),[]),Id]),Call(SVar("skip2"),[])])),SDef("member",[],Call(SVar("TCons"),[AM(Id,Var("x")),Call(SVar("TCons"),[Call(SVar("fetch"),[AM(Id,Var("x"))]),Call(SVar("TNil"),[])])])),SDef("foldr1",["s1","s2"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr1",["s"],Rec("x",Seq(LChoice(Call(SVar("FoldR1"),[]),Seq(Call(SVar("FoldR"),[]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("s"),[])))),SDef("foldr",["s1","s2"],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("FoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldr",["s1","s2","f"],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Scope(["y","ys"],SRule(Rule(Op("Cons",[Var("y"),Var("ys")]),Op("TCons",[App(Call(SVar("f"),[]),Var("y")),Op("TCons",[App(Call(SVar("x"),[]),Var("ys")),Op("TNil",[])])]),Id))),Call(SVar("s2"),[]))))),SDef("tfoldr",["s1","s2"],Rec("x",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("TFoldR"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("s2"),[])))))),SDef("foldl",["s"],Call(SVar("repeat"),[Call(SVar("FoldL"),[Call(SVar("s"),[])])])),SDef("mapfoldr",["s1","s2","s3"],Rec("x",LChoice(Seq(Call(SVar("Nil"),[]),Call(SVar("s1"),[])),Seq(Call(SVar("Cons"),[Call(SVar("s2"),[]),Call(SVar("x"),[])]),Seq(Scope(["a","b"],SRule(Rule(Op("Cons",[Var("a"),Var("b")]),Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Id))),Call(SVar("s3"),[])))))),SDef("last",[],Rec("x",LChoice(Call(SVar("Last"),[]),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("init",[],Call(SVar("at_last"),[Call(SVar("Tl"),[])])),SDef("copy",[],Call(SVar("for"),[Scope(["n","t"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id))),Scope(["t","ts"],SRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id))),Scope(["n","t","ts"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[Var("t"),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))))))])),SDef("copy",["s"],Call(SVar("for"),[Scope(["n","t"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TNil",[])])]),Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Op("Nil",[]),Op("TNil",[])])])]),Id))),Scope(["t","ts"],SRule(Rule(Op("TCons",[Int(0),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Var("ts"),Id))),Scope(["n","t","ts"],SRule(Rule(Op("TCons",[Var("n"),Op("TCons",[Var("t"),Op("TCons",[Var("ts"),Op("TNil",[])])])]),Op("TCons",[App(Call(SVar("subt"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Op("TCons",[Var("t"),Op("TCons",[Op("Cons",[App(Call(SVar("s"),[]),Var("t")),Var("ts")]),Op("TNil",[])])])]),Where(BA(Call(SVar("geq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))))))])),SDef("lookup",[],Rec("x",LChoice(Call(SVar("Look1"),[]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[]))))),SDef("getfirst",["s"],Rec("x",LChoice(Seq(Call(SVar("Hd"),[]),Call(SVar("s"),[])),Seq(Call(SVar("Tl"),[]),Call(SVar("x"),[]))))),SDef("lookup'",[],Scope(["x","xs"],Seq(AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("xs"),Op("TNil",[])])])),BA(Call(SVar("getfirst"),[Scope(["y"],SRule(Rule(Op("TCons",[Var("x"),Op("TCons",[Var("y"),Op("TNil",[])])]),Var("y"),Id)))]),Var("xs"))))),SDef("lookup",["keyeq"],Rec("x",LChoice(Call(SVar("Look1'"),[Call(SVar("keyeq"),[])]),Seq(Call(SVar("Look2"),[]),Call(SVar("x"),[]))))),SDef("unions",[],Call(SVar("foldr"),[Build(Op("Nil",[])),Call(SVar("union"),[])])),SDef("diff",["eq"],Call(SVar("diff'"),[Call(SVar("eq"),[])])),SDef("collect-kids",["s"],Call(SVar("foldr-kids"),[Build(Op("Nil",[])),Call(SVar("union"),[]),Call(SVar("s"),[])])),SDef("collect",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Scope(["y"],SRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id)))),Call(SVar("collect-kids"),[Call(SVar("x"),[])])))),SDef("collect",["s","skip"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Scope(["y"],SRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id)))),LChoice(Seq(Call(SVar("skip"),[Call(SVar("x"),[]),Build(Op("Nil",[]))]),Call(SVar("collect-kids"),[Id])),Call(SVar("collect-kids"),[Call(SVar("x"),[])]))))),SDef("bu-collect",["s"],LChoice(Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("collect-kids"),[LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Build(Op("Nil",[])))])),Seq(Call(SVar("s"),[]),Scope(["y"],SRule(Rule(Var("y"),Op("Cons",[Var("y"),Op("Nil",[])]),Id)))))),Build(Op("Nil",[])))),SDef("collect-split",["f","g"],Rec("x",LChoice(Seq(Choice(Call(SVar("is-string"),[]),Call(SVar("is-int"),[])),Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))])),Call(SVar("CollectSplit"),[Call(SVar("x"),[]),Call(SVar("f"),[]),Call(SVar("g"),[])])))),SDef("CollectSplit",["s","f","g"],Seq(AM(Call(SVar("coll"),[Call(SVar("s"),[])]),Op("TCons",[Var("t"),Op("TCons",[Var("xs"),Op("TNil",[])])])),Seq(AM(BA(Call(SVar("split"),[Call(SVar("try"),[Call(SVar("f"),[])]),LChoice(Call(SVar("g"),[]),Build(Op("Nil",[])))]),Var("t")),Op("TCons",[Var("t'"),Op("TCons",[Var("ys"),Op("TNil",[])])])),Build(Op("TCons",[Var("t'"),Op("TCons",[App(Call(SVar("union"),[]),Op("TCons",[Var("ys"),Op("TCons",[App(Call(SVar("unions"),[]),Var("xs")),Op("TNil",[])])])),Op("TNil",[])])]))))),SDef("nrofoccs",["s"],Rec("count",LChoice(Seq(Call(SVar("s"),[]),Build(Int(1))),Call(SVar("foldr-kids"),[Match(Int(0)),Call(SVar("add"),[]),Call(SVar("count"),[])])))),SDef("twicetd",["s"],Call(SVar("oncetd"),[Seq(Call(SVar("explode-term"),[]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("at_suffix"),[Call(SVar("Cons"),[Call(SVar("oncetd"),[Call(SVar("s"),[])]),Call(SVar("oncetd"),[Call(SVar("s"),[])])])]),Call(SVar("TNil"),[])])]),Call(SVar("mkterm"),[])))])),SDef("atmostonce",["s"],Not(Call(SVar("twicetd"),[Call(SVar("s"),[])]))),SDef("atmostonce'",["s"],Scope(["n"],Seq(AM(Call(SVar("nrofoccs"),[Call(SVar("s"),[])]),Var("n")),BA(Call(SVar("leq"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])]))))),SDef("sort-list",["s"],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("isort-list",["s"],Call(SVar("try"),[Rec("x",Seq(LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("s"),[])),Call(SVar("try"),[Call(SVar("x"),[])])))])),SDef("jsort-list",["s"],Call(SVar("try"),[Rec("x",LChoice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("s"),[]),Call(SVar("try"),[Call(SVar("x"),[])]))))])),SDef("uniq",[],Call(SVar("listbu"),[Call(SVar("repeat"),[Call(SVar("Uniq"),[])])])),SDef("genzip",["a","b","c","s"],Rec("x",Choice(Call(SVar("a"),[]),Seq(Call(SVar("b"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("c"),[])))))),SDef("zip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zip'",["s"],Call(SVar("genzip"),[LChoice(Call(SVar("Zip1a'"),[]),Call(SVar("Zip1b'"),[])),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipl",["s"],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipr",["s"],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("Zip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("unzip",[],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Id])),SDef("unzip",["s"],Call(SVar("genzip"),[Call(SVar("UnZip1"),[]),Call(SVar("UnZip3"),[]),Call(SVar("UnZip2"),[]),Call(SVar("s"),[])])),SDef("nzip",["s"],Seq(Call(SVar("NZip0"),[]),Call(SVar("genzip"),[Call(SVar("NZip1"),[]),Call(SVar("NZip2"),[]),Call(SVar("NZip3"),[]),Call(SVar("s"),[])]))),SDef("tzip",["s"],Call(SVar("genzip"),[Call(SVar("TZip1"),[]),Call(SVar("TZip2"),[]),Call(SVar("TZip3"),[]),Call(SVar("s"),[])])),SDef("lzip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1a'"),[]),Call(SVar("LZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("rzip",["s"],Call(SVar("genzip"),[Call(SVar("Zip1b'"),[]),Call(SVar("RZip2"),[]),Call(SVar("Zip3"),[]),Call(SVar("s"),[])])),SDef("zipFetch",["s"],Rec("x",Seq(Call(SVar("Zip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("lzipFetch",["s"],Rec("x",Seq(Call(SVar("LZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("rzipFetch",["s"],Rec("x",Seq(Call(SVar("RZip2"),[]),LChoice(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))))),SDef("zipPad",["s","padding"],Rec("x",Choice(Call(SVar("Zip1"),[]),Choice(Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Choice(Seq(Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))),Seq(Call(SVar("TCons"),[Call(SVar("Cons"),[Id,Id]),Call(SVar("TCons"),[Call(SVar("Nil"),[]),Call(SVar("TNil"),[])])]),Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Build(Op("Cons",[App(Call(SVar("padding"),[]),Op("TNil",[])),Op("Nil",[])])),Call(SVar("TNil"),[])])]),Call(SVar("x"),[])))))))),SDef("zip-tail",[],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TCons"),[Call(SVar("Tl"),[]),Call(SVar("TNil"),[])])]),Call(SVar("x"),[]))))),SDef("zipl-tail-match",["s"],Rec("x",Choice(Call(SVar("Zip1c"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zipr-tail-match",["s"],Rec("x",Choice(Call(SVar("Zip1c'"),[]),Seq(Call(SVar("Zip2"),[]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]),Seq(Call(SVar("Snd"),[]),Call(SVar("x"),[]))))))),SDef("zip-skip",["pred","s"],Rec("x",Choice(Call(SVar("Zip1"),[]),Seq(LChoice(Seq(Call(SVar("Skip"),[Call(SVar("pred"),[])]),Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])])),Seq(Call(SVar("Zip2"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]))),Call(SVar("Zip3"),[]))))),SDef("tuple-zip",["s"],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("tmap"),[Call(SVar("Hd"),[])]),Call(SVar("tmap"),[Call(SVar("Tl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Call(SVar("Zip3"),[]))),Seq(Call(SVar("tmap"),[Call(SVar("Nil"),[])]),Build(Op("Nil",[])))))),SDef("tuple-unzip",["s"],Rec("x",LChoice(Seq(Call(SVar("split"),[Call(SVar("map"),[Call(SVar("Thd"),[])]),Call(SVar("map"),[Call(SVar("Ttl"),[])])]),Seq(Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("TCons"),[Call(SVar("x"),[]),Call(SVar("TNil"),[])])]),Scope(["a","b"],SRule(Rule(Op("TCons",[Var("a"),Op("TCons",[Var("b"),Op("TNil",[])])]),Op("TCons",[Var("a"),Var("b")]),Id))))),Seq(Call(SVar("map"),[Call(SVar("TNil"),[])]),Build(Op("TNil",[])))))),SDef("index",[],Seq(Call(SVar("repeat"),[Call(SVar("Ind2"),[])]),Call(SVar("Ind1"),[]))),SDef("get_index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("get-index",[],Seq(Call(SVar("Gind0"),[]),Rec("x",LChoice(Call(SVar("Gind1"),[]),Seq(Call(SVar("Gind2"),[]),Call(SVar("x"),[])))))),SDef("is-list",[],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Id]))),SDef("map",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list",["s"],Rec("x",Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("list-some",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("list"),[Call(SVar("try"),[Call(SVar("s"),[])])])])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("list-some-filter",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("filter"),[Call(SVar("s"),[])])])),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Tl"),[]))))),SDef("length",[],Rec("x",Choice(Seq(Call(SVar("Nil"),[]),Build(Int(0))),Seq(Call(SVar("Tl"),[]),Seq(Call(SVar("x"),[]),Scope(["n"],SRule(Rule(Var("n"),App(Call(SVar("plus"),[]),Op("TCons",[Var("n"),Op("TCons",[Int(1),Op("TNil",[])])])),Id)))))))),SDef("fetch",["s"],Rec("x",LChoice(Call(SVar("Cons"),[Call(SVar("s"),[]),Id]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("at_tail",["s"],Call(SVar("Cons"),[Id,Call(SVar("s"),[])])),SDef("at_end",["s"],Rec("x",Choice(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Seq(Call(SVar("Nil"),[]),Call(SVar("s"),[]))))),SDef("at_suffix",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("at_last",["s"],Rec("x",LChoice(Seq(Call(SVar("Cons"),[Id,Call(SVar("Nil"),[])]),Call(SVar("s"),[])),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])))),SDef("listbu",["s"],Rec("x",Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[])))),SDef("listtd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])]))))),SDef("listdu",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s"),[]))))),SDef("listdu2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Call(SVar("x"),[])])),Call(SVar("s2"),[]))))),SDef("reverse",[],Seq(Call(SVar("RevInit"),[]),Seq(Call(SVar("repeat"),[Call(SVar("Rev"),[])]),Call(SVar("RevExit"),[])))),SDef("upto",[],Seq(Call(SVar("UptoInit"),[]),Rec("x",LChoice(Call(SVar("UptoExit"),[]),Seq(Call(SVar("UptoStep"),[]),Call(SVar("x"),[])))))),SDef("concat",[],Rec("y",Choice(Call(SVar("Nil"),[]),Call(SVar("Concat"),[Call(SVar("y"),[])])))),SDef("separate-by",["s"],Choice(Call(SVar("Nil"),[]),Call(SVar("Cons"),[Id,Rec("x",Choice(Call(SVar("Nil"),[]),Seq(Call(SVar("Cons"),[Id,Call(SVar("x"),[])]),Call(SVar("Sep"),[Call(SVar("s"),[])]))))]))),SDef("tindex",[],Rec("x",LChoice(Call(SVar("TInd1"),[]),Seq(Call(SVar("TInd2"),[]),Call(SVar("x"),[]))))),SDef("tmap",["s"],Rec("x",Choice(Call(SVar("TNil"),[]),Call(SVar("TCons"),[Call(SVar("s"),[]),Call(SVar("x"),[])])))),SDef("tconcat",["s"],Rec("y",Choice(SRule(Rule(Op("TNil",[]),Op("Nil",[]),Id)),Seq(Scope(["x","xs"],SRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id))),Call(SVar("s"),[]))))),SDef("tconcat'",["s1","s2"],Rec("y",Choice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Scope(["x","xs"],SRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id))),Call(SVar("s2"),[]))))),SDef("at_tsuffix",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Call(SVar("TCons"),[Id,Call(SVar("x"),[])])))),SDef("tcata",["s1","s2"],Rec("y",LChoice(Seq(Call(SVar("TNil"),[]),Call(SVar("s1"),[])),Seq(Scope(["x","xs"],SRule(Rule(Op("TCons",[Var("x"),Var("xs")]),Op("TCons",[Var("x"),Op("TCons",[App(Call(SVar("y"),[]),Var("xs")),Op("TNil",[])])]),Id))),Call(SVar("s2"),[]))))),SDef("try",["s"],LChoice(Call(SVar("s"),[]),Id)),SDef("if",["c","b"],Call(SVar("try"),[Seq(Call(SVar("c"),[]),Call(SVar("b"),[]))])),SDef("if",["c","b1","b2"],LChoice(Seq(Call(SVar("c"),[]),Call(SVar("b1"),[])),Call(SVar("b2"),[]))),SDef("ior",["a","b"],LChoice(Seq(Call(SVar("a"),[]),Call(SVar("try"),[Call(SVar("b"),[])])),Call(SVar("b"),[]))),SDef("eq",[],Scope(["x"],AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])])))),SDef("FAIL",[],Scope(["x"],Seq(AM(Id,Var("x")),AM(Id,Op("TCons",[Var("x"),Op("TCons",[Var("x"),Op("TNil",[])])]))))),SDef("topdown",["s"],Rec("x",Seq(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("bottomup",["s"],Rec("x",Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("downup",["s"],Rec("x",Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s"),[]))))),SDef("downup2",["s1","s2"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("s2"),[]))))),SDef("topdown",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("bottomup",["s","stop"],Rec("x",Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[])))),SDef("downup",["s","stop"],Rec("x",Seq(Call(SVar("s"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s"),[]))))),SDef("downup2",["s1","s2","stop"],Rec("x",Seq(Call(SVar("s1"),[]),Seq(LChoice(Call(SVar("stop"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[]))))),SDef("don't-stop",["s"],Fail),SDef("spinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[One(Call(SVar("x"),[]))])))),SDef("spinebu",["s"],Rec("x",Seq(Call(SVar("try"),[One(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("somespinetd",["s"],Rec("x",Seq(Call(SVar("s"),[]),Call(SVar("try"),[Some(Call(SVar("x"),[]))])))),SDef("somespinebu",["s"],Rec("x",Seq(Call(SVar("try"),[Some(Call(SVar("x"),[]))]),Call(SVar("s"),[])))),SDef("spinetd'",["s"],Rec("x",Seq(Call(SVar("s"),[]),Choice(One(Call(SVar("x"),[])),All(Fail))))),SDef("spinebu'",["s"],Rec("x",Seq(Choice(One(Call(SVar("x"),[])),All(Fail)),Call(SVar("s"),[])))),SDef("oncetd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),One(Call(SVar("x"),[]))))),SDef("oncebu",["s"],Rec("x",LChoice(One(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("sometd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),Some(Call(SVar("x"),[]))))),SDef("somebu",["s"],Rec("x",LChoice(Some(Call(SVar("x"),[])),Call(SVar("s"),[])))),SDef("alltd",["s"],Rec("x",LChoice(Call(SVar("s"),[]),All(Call(SVar("x"),[]))))),SDef("alldownup2",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("downup2'-obsolete",["s1","s2"],Rec("x",Seq(LChoice(Call(SVar("s1"),[]),All(Call(SVar("x"),[]))),Call(SVar("s2"),[])))),SDef("leaves",["s","is-leaf","skip"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),LChoice(Call(SVar("skip"),[Call(SVar("x"),[])]),All(Call(SVar("x"),[])))))),SDef("leaves",["s","is-leaf"],Rec("x",LChoice(Seq(Call(SVar("is-leaf"),[]),Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("is-leaf",[],Not(One(Id))),SDef("manybu",["s"],Rec("x",LChoice(Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])])),Call(SVar("s"),[])))),SDef("manytd",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),All(Call(SVar("try"),[Call(SVar("x"),[])]))),Some(Call(SVar("x"),[]))))),SDef("somedownup",["s"],Rec("x",LChoice(Seq(Call(SVar("s"),[]),Seq(All(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))),Seq(Some(Call(SVar("x"),[])),Call(SVar("try"),[Call(SVar("s"),[])]))))),SDef("breadthfirst",["s"],Rec("x",Seq(All(Call(SVar("s"),[])),All(Call(SVar("x"),[]))))),SDef("main",[],Call(SVar("iowrap"),[Call(SVar("compile"),[])])),SDef("compile",[],Seq(Call(SVar("map"),[Seq(Call(SVar("MkInstr"),[]),Call(SVar("topdown"),[Call(SVar("repeat"),[LChoice(Call(SVar("Cspecial"),[]),Call(SVar("C"),[]))])]))]),Seq(Call(SVar("flatten-blocks"),[]),Seq(Call(SVar("peephole"),[]),Call(SVar("Assemble"),[])))))])])
