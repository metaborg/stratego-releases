[SDef("failure-in-case2",[],Scope([],Call(SVar("apply-test"),[Build(Str("failure-in-case")),Choice(Scope(["j_9"],Seq(Seq(Id,Match(Op("F",[Op("A",[]),Var("j_9")]))),Build(Op("A",[])))),Scope(["k_9"],Seq(Seq(Id,Match(Op("F",[Var("k_9"),Op("B",[])]))),Build(Op("B",[]))))),Build(Op("F",[Op("A",[]),Op("D",[])])),Build(Op("A",[]))]))),SDef("FAIL",[],Scope([],Scope(["x_8"],Seq(Seq(Id,Match(Var("x_8"))),Seq(Id,Match(Op("TCons",[Var("x_8"),Op("TCons",[Var("x_8"),Op("TNil",[])])]))))))),SDef("debug",[],Scope([],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["y_8"],Seq(Match(Var("y_8")),Seq(Where(Id),Seq(Build(Op("Cons",[Var("y_8"),Op("Nil",[])])),Id))))]),Call(SVar("printnl"),[]))))),SDef("record-failure",[],Scope([],Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Scope(["d_9"],Seq(Match(Var("d_9")),Seq(Where(Id),Seq(Seq(Build(Op("TCons",[Var("d_9"),Op("TCons",[Int(1),Op("TNil",[])])])),Call(SVar("add"),[])),Id)))),Call(SVar("TNil"),[])])]))),SDef("add",[],Scope([],Prim("_ST_add"))),SDef("record-success",[],Scope([],Call(SVar("TCons"),[Scope(["c_9"],Seq(Match(Var("c_9")),Seq(Where(Id),Seq(Seq(Build(Op("TCons",[Var("c_9"),Op("TCons",[Int(1),Op("TNil",[])])])),Call(SVar("add"),[])),Id)))),Call(SVar("TCons"),[Id,Call(SVar("TNil"),[])])]))),SDef("do-test",["a_21","b_21"],Scope([],Seq(Where(Seq(Call(SVar("a_21"),[]),Call(SVar("debug"),[]))),LChoice(Seq(Where(Call(SVar("b_21"),[])),Call(SVar("record-success"),[])),Call(SVar("record-failure"),[]))))),SDef("apply-test",["e_21","f_21","g_21","h_21"],Scope(["e_9","f_9"],Call(SVar("do-test"),[Call(SVar("e_21"),[]),Seq(LChoice(Seq(Call(SVar("g_21"),[]),Seq(Call(SVar("f_21"),[]),Match(Var("e_9")))),Seq(Seq(Build(Str("  failed")),Call(SVar("debug"),[])),Call(SVar("FAIL"),[]))),Seq(Seq(Call(SVar("h_21"),[]),Match(Var("f_9"))),LChoice(Seq(Build(Var("f_9")),Match(Var("e_9"))),Seq(Seq(Seq(Build(Var("e_9")),Call(SVar("debug"),[Build(Str("  result not equal: "))])),Seq(Build(Var("f_9")),Call(SVar("debug"),[Build(Str("  expected: "))]))),Call(SVar("FAIL"),[])))))]))),SDef("failure-in-case",[],Scope([],Call(SVar("apply-test"),[Build(Str("failure-in-case")),Choice(Scope(["h_9"],Seq(Seq(Id,Match(Op("F",[Op("A",[]),Var("h_9")]))),Build(Op("A",[])))),Scope(["i_9"],Seq(Seq(Id,Match(Op("F",[Var("i_9"),Op("G",[Op("B",[]),Op("C",[])])]))),Build(Op("B",[]))))),Build(Op("F",[Op("A",[]),Op("G",[Op("B",[]),Op("D",[])])])),Build(Op("A",[]))]))),SDef("exit",[],Scope([],Prim("_ST_exit"))),SDef("check-for-failures",[],Scope([],LChoice(Seq(Call(SVar("TCons"),[Id,Call(SVar("TCons"),[Match(Int(0)),Call(SVar("TNil"),[])])]),Seq(Build(Int(0)),Call(SVar("exit"),[]))),Seq(Build(Int(1)),Call(SVar("exit"),[]))))),SDef("TNil",[],Cong("TNil",[])),SDef("TCons",["l_9","m_9"],Cong("TCons",[Call(SVar("l_9"),[]),Call(SVar("m_9"),[])])),SDef("report-test",[],Scope([],Call(SVar("TCons"),[Call(SVar("debug"),[Build(Str("successes: "))]),Call(SVar("TCons"),[Call(SVar("debug"),[Build(Str("failures: "))]),Call(SVar("TNil"),[])])]))),SDef("init-record",[],Scope([],Build(Op("TCons",[Int(0),Op("TCons",[Int(0),Op("TNil",[])])])))),SDef("printnl",[],Scope([],Prim("_ST_printnl"))),SDef("split",["v_9","w_9"],Scope(["z_0"],Seq(Match(Var("z_0")),Seq(Where(Id),Seq(Scope(["a_24"],Seq(Seq(Build(Var("z_0")),Seq(Call(SVar("v_9"),[]),Seq(Match(Var("a_24")),Id))),Scope(["e_24"],Seq(Seq(Build(Var("z_0")),Seq(Call(SVar("w_9"),[]),Seq(Match(Var("e_24")),Id))),Build(Op("TCons",[Var("a_24"),Op("TCons",[Var("e_24"),Op("TNil",[])])])))))),Id))))),SDef("debug",["u_20"],Scope([],Where(Seq(Call(SVar("split"),[Build(Op("stderr",[])),Scope(["z_8"],Seq(Match(Var("z_8")),Seq(Where(Id),Seq(Scope(["o_24"],Seq(Seq(Build(Op("TNil",[])),Seq(Call(SVar("u_20"),[]),Seq(Match(Var("o_24")),Id))),Build(Op("Cons",[Var("o_24"),Op("Cons",[Var("z_8"),Op("Nil",[])])])))),Id))))]),Call(SVar("printnl"),[]))))),SDef("test-suite",["y_20","z_20"],Scope([],Seq(Call(SVar("y_20"),[]),Seq(Call(SVar("debug"),[Build(Str("test suite: "))]),Seq(Call(SVar("init-record"),[]),Seq(Call(SVar("z_20"),[]),Seq(Call(SVar("report-test"),[]),Call(SVar("check-for-failures"),[])))))))),SDef("main",[],Scope([],Call(SVar("test-suite"),[Build(Str("match-automaton-test")),Seq(Call(SVar("failure-in-case"),[]),Call(SVar("failure-in-case2"),[]))])))]
