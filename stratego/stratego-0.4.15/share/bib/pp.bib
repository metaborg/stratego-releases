
@Preamble{"\def\sortunder#1{}"}

@Article{BV96.gen,
  author =	 {{\sortunder{Brand}}Van den Brand, Mark G. J. and
                  Visser, Eelco},
  title =	 {Generation of Formatters for Context-free Languages},
  journal =	 {ACM Transactions on Software Engineering and
                  Methodology},
  year =	 {1996},
  month =	 {January},
  volume =	 {5},
  number =	 {1},
  pages =	 {1--41},
  URL =		 {http://www.acm.org/pubs/toc/TOC/1049-331X/Vol5.html}
}


@TechReport{BV94,
  author =	 {{\sortunder{Brand}}Van den Brand, Mark and Visser,
                  Eelco},
  title =	 {From {Box} to {\TeX}: {An} algebraic approach to the
                  generation of documentation tools},
  year =	 {1994},
  month =	 {July},
  number =	 {P9420},
  institution =	 {Programming Research Group, University of Amsterdam},
  URL =
                  {ftp://ftp.wins.uva.nl/pub/programming-research/reports/1994/P9420.ps.Z},
  abstract =	 {We define a translation from an intermediate box
                  language for pretty printing to \TeX. This
                  translation can be used as a back-end for pretty
                  printers in documentation tools for programming
                  languages. The translation is formulated in an
                  executable algebraic specification formalism. An
                  important aspect of the translation is the
                  transformation of boxes according to a set of
                  equations. These equations preserve the text
                  formatting semantics of boxes which is also defined
                  algebraically. New in this approach is that
                  algebraic transformations of box terms are used to
                  circumvent the limitations of the typesetter.\par
                  The \TeX\ generator, which translates the box
                  language to \TeX\ code, is a component of
                  documentation tools generated for the programming
                  environments developed with the ASF+SDF
                  meta-environment, but can also be used as a separate
                  tool. As a case study, the construction of a
                  typesetter for the process specification formalism
                  PSF is shown.}
}
